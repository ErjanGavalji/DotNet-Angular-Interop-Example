var isFunction = function isFunction (arg) {return !!(arg && arg.constructor && arg.call && arg.apply);}
var nextTick = function nextTick (cb) { setTimeout(cb, 0); };

module.exports = function (promise, successCallback, errorCallback) {
    'use strict';
    if (!isFunction(successCallback) && !isFunction(errorCallback)) {
        return promise;
    }

    if (!isFunction(successCallback)) {
        successCallback = function () {};
    } else if (!isFunction(errorCallback)) {
        errorCallback = function () {};        
    }

    promise.then(successCallback, errorCallback);
}
