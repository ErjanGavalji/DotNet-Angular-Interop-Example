{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///tick42-glue-core.min.js","webpack:///webpack/bootstrap 741e78748dd52152126e","webpack:///./src_js/metrics/core/const/metric-types.js","webpack:///./~/callback-registry/lib/index.js","webpack:///./src_js/metrics/helpers.js","webpack:///./src_js/agm/helpers/random.js","webpack:///./~/shortid/lib/alphabet.js","webpack:///./src_js/agm/protocols/gw1/helpers.js","webpack:///./~/shortid/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./src_js/agm/helpers/promisify.js","webpack:///./src_js/agm/server/subscription.js","webpack:///./src_js/contexts/contextMessageReplaySpec.js","webpack:///./src_js/utils.js","webpack:///./package.json","webpack:///./src_js/connection/connection.js","webpack:///./src_js/contexts/bridges/gw3/gw3Messages.js","webpack:///./src_js/dummyConnection.js","webpack:///./src_js/glue.js","webpack:///./~/nanoid/format.js","webpack:///./~/process/browser.js","webpack:///./~/shortid/lib/build.js","webpack:///./~/shortid/lib/generate.js","webpack:///./~/shortid/lib/index.js","webpack:///./~/shortid/lib/is-valid.js","webpack:///./~/shortid/lib/random/random-byte-browser.js","webpack:///./~/shortid/lib/random/random-from-seed.js","webpack:///./~/shortid/lib/util/cluster-worker-id-browser.js","webpack:///./~/ws/lib/browser.js","webpack:///./src_js/agm/agm.js","webpack:///./src_js/agm/client/client.js","webpack:///./src_js/agm/client/invoke.js","webpack:///./src_js/agm/client/repository.js","webpack:///./src_js/agm/hc/agm.js","webpack:///./src_js/agm/hc/helpers.js","webpack:///./src_js/agm/hc/native.js","webpack:///./src_js/agm/instance.js","webpack:///./src_js/agm/main.js","webpack:///./src_js/agm/protocols/gw1/client-streaming.js","webpack:///./src_js/agm/protocols/gw1/client.js","webpack:///./src_js/agm/protocols/gw1/factory.js","webpack:///./src_js/agm/protocols/gw1/server-streaming.js","webpack:///./src_js/agm/protocols/gw1/server.js","webpack:///./src_js/agm/protocols/gw3/client-streaming.js","webpack:///./src_js/agm/protocols/gw3/client.js","webpack:///./src_js/agm/protocols/gw3/factory.js","webpack:///./src_js/agm/protocols/gw3/server-streaming.js","webpack:///./src_js/agm/protocols/gw3/server.js","webpack:///./src_js/agm/server/branch.js","webpack:///./src_js/agm/server/repository.js","webpack:///./src_js/agm/server/request.js","webpack:///./src_js/agm/server/server.js","webpack:///./src_js/agm/server/stream.js","webpack:///./src_js/agm/server/streaming.js","webpack:///./src_js/bus/main.js","webpack:///./src_js/bus/protocol.js","webpack:///./src_js/bus/utils.js","webpack:///./src_js/config.js","webpack:///./src_js/connection/gw3Connection.js","webpack:///./src_js/connection/main.js","webpack:///./src_js/connection/messageReplayer.js","webpack:///./src_js/connection/protocols/gw1.js","webpack:///./src_js/connection/protocols/gw3.js","webpack:///./src_js/connection/protocols/gw3Domain.js","webpack:///./src_js/connection/protocols/hc.js","webpack:///./src_js/connection/transports/hc.js","webpack:///./src_js/connection/transports/inproc.js","webpack:///./src_js/connection/transports/ws.js","webpack:///./src_js/contexts/bridges/gw3/gw3Bridge.js","webpack:///./src_js/contexts/bridges/gw3/gw3ContextData.js","webpack:///./src_js/contexts/bridges/hcBridge.js","webpack:///./src_js/contexts/contextsModule.js","webpack:///./src_js/contexts/helpers.js","webpack:///./src_js/contexts/main.js","webpack:///./src_js/logger/levels.js","webpack:///./src_js/logger/logger.js","webpack:///./src_js/logger/main.js","webpack:///./src_js/main.js","webpack:///./src_js/metrics/core/metrics/address.js","webpack:///./src_js/metrics/core/metrics/count.js","webpack:///./src_js/metrics/core/metrics/number.js","webpack:///./src_js/metrics/core/metrics/object.js","webpack:///./src_js/metrics/core/metrics/rate.js","webpack:///./src_js/metrics/core/metrics/statistics.js","webpack:///./src_js/metrics/core/metrics/string.js","webpack:///./src_js/metrics/core/metrics/timespan.js","webpack:///./src_js/metrics/core/metrics/timestamp.js","webpack:///./src_js/metrics/core/protocols/gw1/gw1.js","webpack:///./src_js/metrics/core/protocols/gw1/serializer.js","webpack:///./src_js/metrics/core/protocols/gw3/gw3.js","webpack:///./src_js/metrics/core/protocols/gw3/serializer.js","webpack:///./src_js/metrics/main.js","webpack:///./src_js/metrics/repository.js","webpack:///./src_js/metrics/system.js","webpack:///./src_js/timer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","DEFAULT","STRING","NUMBER","COUNT","RATE","STATISTICS","TIMESTAMP","ADDRESS","TIMESPAN","OBJECT","createRegistry","options","add","key","callback","callbacksForKey","callbacks","push","allForKey","reduce","acc","element","index","length","execute","argumentsArr","_i","arguments","results","forEach","result","apply","undefined","err","_handleError","exceptionArtifact","errParam","Error","_userErrorHandler","msg","stack","errorHandling","console","error","clear","validate","definition","parent","transport","shortid","reset","shuffled","setCharacters","_alphabet_","alphabet","ORIGINAL","unique","split","filter","item","ind","arr","lastIndexOf","join","characters","setSeed","seed","randomFromSeed","previousSeed","shuffle","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","splice","getShuffled","lookup","convertInfoToInstance","info","application","ApplicationName","environment","Environment","machine","MachineName","pid","ProcessId","region","Region","service","ServiceName","user","UserName","started","ProcessStartTime","isStreamingFlagSet","flags","isNaN","convertInstance","instance","g","Function","eval","e","window","default_1","promise","successCallback","errorCallback","then","ServerSubscription","protocol","repoMethod","subscription","stream","branchKey","close","server","closeSingleSubscription","data","pushDataToSingle","ContextMessageReplaySpec","types","GW_MESSAGE_CREATE_CONTEXT","GW_MESSAGE_ACTIVITY_CREATED","GW_MESSAGE_ACTIVITY_DESTROYED","GW_MESSAGE_CONTEXT_CREATED","GW_MESSAGE_CONTEXT_ADDED","GW_MESSAGE_SUBSCRIBE_CONTEXT","GW_MESSAGE_SUBSCRIBED_CONTEXT","GW_MESSAGE_UNSUBSCRIBE_CONTEXT","GW_MESSAGE_DESTROY_CONTEXT","GW_MESSAGE_CONTEXT_DESTROYED","GW_MESSAGE_UPDATE_CONTEXT","GW_MESSAGE_CONTEXT_UPDATED","GW_MESSAGE_JOINED_ACTIVITY","global","Utils","getGDMajorVersion","glueDesktop","version","ver","Number","substr","isNode","toString","process","description","main","browser","scripts","init-dev-mode","remove-installed-dependencies","clean","pre:build","file-versionify","tslint","tslint:fix","watch","build:dev","build:prod","docs","prepublish","test","test:only","test:core","test:agm","test:bus","repository","type","url","author","license","dependencies","callback-registry","es6-promise","util-deprecate","ws","devDependencies","@types/node","@types/shortid","archiver","babel-core","babel-loader","babel-plugin-add-module-exports","babel-preset-es2015","babel-preset-stage-2","chai","deep-equal","mocha","onchange","pre-commit","readline-sync","shelljs","tick42-gateway","tick42-webpack-config","typescript","webpack","callback_registry_1","ConnectionImpl","settings","messageHandlers","ids","registry","_connected","_settings","_logger","logger","init","_protocol","_transport","onConnectedChanged","handleConnectionChanged","bind","onMessage","handleTransportMessage","send","product","message","id","isObjectBasedTransport","createObjectMessage","sendObject","strMessage","createStringMessage","on","messageHandler","toLowerCase","off","connected","http","disconnected","login","authRequest","open","logout","loggedIn","protocolVersion","toAPI","that","distributeMessage","_this","handlers","keys","handlerId","handler","msgObj","processStringMessage","processObjectMessage","msgType","connection","Promise","resolve","main_1","main_2","main_3","main_4","main_5","config_1","dummyConnection_1","timer_1","utils_1","dummyConnection_2","main_6","contextMessageReplaySpec_1","GlueCore","userConfig","ext","registerLib","inner","t","initStartTime","startTime","ready","initTime","stop","initEndTime","endTime","libs","setupConnection","initTimer","internalConfig","subLogger","_connection","authPromise","auth","reject","glue42gd","getGWToken","token","gatewayToken","authConfig","JSON","stringify","identity","agm","setupMetrics","metrics","_rootMetrics","_metrics","subSystem","_featureMetric_1","reportingSystem_1","def_1","conflation","featureMetric","action","payload","update","objectMetric","metricsLevel","setupAGM","agmConfig","forceGW","force","gdVersion","agmLib","_agm","setupContexts","hasActivities","activities","contexts","_contexts","ContextsModule","gdMajorVersion","replayer","drain","setupExternalLibs","externalLibs","lib","setupExternalLib","create","createCallback","waitForLibs","libsReadyPromises","map","all","constructGlueObject","feedbackFunc","invoke","glueVersion","glueInitTimer","glue","feedback","done","performance","timing","toJSON","memory","initTimes","time","period","hc","perfDataNeeded","updatePerfData","delay","perfDataDelay","setTimeout","config","enrichGlue","k","extOptions","setupBus","bus","busSettings","busLib","_bus","htmlContainer","loggerConfig","getConnection","publish","setupLogger","random","size","mask","log","LN2","step","ceil","bytes","byte","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","title","env","argv","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","build","clusterWorkerId","str","seconds","Date","now","REDUCE_TIME","previousSeconds","counter","generate","number","loopCounter","format","pow","seedValue","worker","workerId","newCharacters","isValid","isShortId","RegExp","replace","randomByte","crypto","msCrypto","getRandomValues","Uint8Array","getNextValue","_seed_","uri","protocols","opts","WebSocket","MozWebSocket","client_1","server_1","AGMImpl","clientRepository","serverRepository","configuration","client","serverRemoved","serverAdded","serverMethodRemoved","serverMethodAdded","methodRemoved","methodAdded","methodsForInstance","methods","methodFilter","servers","subscribe","method","createStream","streamDef","unregister","registerAsync","methodDefinition","register","argumentObj","target","additionalOptions","success","updateInstance","newInstance","invoke_1","promisify_1","Client","repo","clientInvocations","callProtocolSubscribe","targetServers","successProxy","errorProxy","methodResponseTimeout","waitTimeoutMs","methodDef","sub","method_response_timeout","wait_for_method_timeout","delayTillNow","currentServers","getServerMethodsByFilterAndTarget","retry_1","streamInfo","def","getInfoForUser","protocolState","getServers","serverMethodMap","getMethods","getMethodsForInstance","onMethodAdded","onMethodRemoved","onServerAdded","onServerRemoved","reason","onServerMethodAdded","onServerMethodRemoved","methodResponseTimeoutMs","serversMethodMap","invokeUnExisting","serverMethodPair","invokeOnAll","callError","called_with","executed_by","returned","status","delayTillNow_1","retry_2","serverMethodsMap","successes","errors","sendResponse","result_1","obj","invResult","all_return_values","all_errors","currentError","serverMethodsPair","filterByTarget","targetServerMethod","matchingMachine","isArray","matches","myMatches","instanceMatch","instanceFilter","instanceDefinition","containsProps","methodMatch","match","prop","constructor","String","allServers","matchingServers","resultMethodsObject","methodKey","prev","current","methodsForServer","getServerMethodsById","matchingMethods","random_1","ClientInvocations","_pendingCallbacks","onInvocationResult","invocationId","executedBy","resultMessage","processInvocationResult","argumentsObj","stuff","registerInvocation","calledWith","invocationInfo","ClientRepository","methodsCount","addServer","serverId","serverEntry","serverInfo","createUserServerInfo","getStreams","supportsStreaming","removeServerById","methodId","removeServerMethod","addServerMethod","createMethodId","methodEntity","createUserMethodInfo","getServersByMethod","methodInfo","accepts","returns","allMethods","unsubscribeFunc","getServerById","windowId","peerId","displayName","objectTypes","object_types","display_name","NativeAGM","helpers","agmFacade","methodInfoAsObject","stringToObject","validateMethodInfo","arg","caller","methodResult","parse","tracker","successArgs","targetArgToObject","invoke2","a","parsed","subscriptionRequestHandler","subscriptionAddedHandler","subscriptionRemovedHandler","createStream2","parameters","subscribe2","jsonResult","agmParse","transformServerObject","transformMethodObject","subscribed","Helpers","facade","dateTimeIdentifier","jsonValueDatePrefix","lenOfIdentifier","v","indexOf","unixTimestampMs","parseFloat","convertInstanceToRegex","serverFilter","instanceConverted","propValue","source","param","stringPropName","jsAgmFacade","cfgAsString","createConfig","successInit","nativeAGM","agm_1","helpers_1","create_stream","methods_for_instance","method_added","method_removed","server_added","server_removed","server_method_added","server_method_removed","initAsync","metricsIdentity","metricsConfig","path","createOwnInstance","userSubmittedProperties","resolvedIdentity","document","instance_1","native_1","factory_1","factory_2","repository_1","repository_2","protocolPromise","agmImpl","myIdentity","myInstance","ClientStreaming","sendRequest","nextResponseSubject","subscriptionsList","ERR_MSG_SUB_FAILED","subscriptionId","pendingSub","registerSubscription","responseSubject","requestSubject","trackedServers","streamId","streamSubjects","private","methodRequestSubject","methodResponseSubject","EventStreamAction","MethodRequestSubject","MethodResponseSubject","Context","ArgumentsJson","InvocationId","MethodName","ExecutionServer","Timeout","processPublisherMsg","serverIsKickingASubscriber","serverAcknowledgesGoodSubscription","serverHasPushedSomeDataIntoTheStream","onData","onClosed","queued","closers","timeoutId","closersCount","closingServer_1","requestArguments","deletionsList","isRejecting","isKicking","StreamId","EventStreamSubject","ResultMessage","callArgs","Server","acceptingServer","isFirstResponse","privateStreamSubject","generatePrivateStreamSubject","confirmatoryRequest","dataCallback","TypeError","dataItem","closedCallback","onFailed","closeSubscription","serverInstance","this_1","isPrivateData","trackedServersFound","ls","receivedStreamData_1","ResultContextJson","onDataHandlers","queuedData","subId","methodName","client_streaming_1","ClientProtocol","respCounter","timers","streaming","listenForEvents","createServerInfo","createMethod","Method","Name","InputSignature","ResultSignature","Description","DisplayName","Version","ObjectTypeRestrictions","Flags","createServerId","processServerPresence","presence","isPresence","Instance","PublishingInterval","scheduleTimeout","MethodDefinitions","updateServerMethods","duration","timer","newMethods","oldMethods","newMethodsReduced","nm","handleInvokeResultMessage","Status","getAGM","unsubscribe","ServerStreaming","isStreamMsg","pushData","streamingMethod","branches","branchKeyToStreamIdMap","streamIdList","br","Boolean","sendResult","globalEventStreamSubject","closeAllSubscriptions","streamList","getBranchList","getUniqueBranchNames","getSubscriptionList","subscriptions","onSubAdded","handlerFunc","subAddedHandler","onSubRemoved","subRemovedHandler","onSubRequest","requestHandler","generateNewStreamId","streamingMethodName","rejectRequest","requestContext","MethodVersion","privateEventStreamSubject","closeIndividualSubscription","acceptRequestOnBranch","branch","getStreamId","processSubscriberMsg","clientWishesToSubscribe","clientWishesToUnsubscribe","clientAcknowledgesItDidSubscribe","clientPerSubHeartbeat","getBranchKey","needle","needleBranch","sendKickMessage","subItem","initialLength","ResponseContextJson","keysWithDuplicates","seen","bKey","server_streaming_1","HeartbeatInterval","ServerProtocol","invocationMessagesMap","reqCounter","handleMethodInvocationMessage","stopTimers","sendHeartbeat","heartbeatTimer","setInterval","clearInterval","presenceTimer","sendPresence","reqSubj","nextRequestSubject","createNewMethodMessage","announceNewMethod","streamConverted","onInvoked","methodInvocationResult","executedMethod","constructHeartbeat","constructPresence","getList","subject","methodList","invocationArgs","methodIdentifier","STATUS_AWAITING_ACCEPT","STATUS_SUBSCRIBED","ERR_MSG_SUB_REJECTED","session","subscriptionIdToLocalKeyMap","nextSubLocalKey","handleErrorSubscribing","errorResponse","tag","_tag","subLocalKey","callOnClosedHandlers","handleSubscribed","subscription_id","handleEventData","oob","snapshot","sendingServerId","receivedStreamData","handleSubscriptionCancelled","expectedNewLength","getNextSubscriptionLocalKey","server_id","method_id","arguments_kv","closingServerId","closingServer","sendFireAndForget","reason_uri","handlePeerAdded","handlePeerRemoved","handleMethodsAddedMessage","handleMethodsRemovedMessage","handleResultMessage","handleInvocationError","newPeerId","new_peer_id","remoteId","removedPeerId","removed_id","input_signature","result_signature","methodIdList","debug","context","libConfig","handleReconnect","registeredMethods","theFunction","userCallback","userCallbackAsync","handleInitialJoin","resolveReadyPromise","readyPromise","domain","onJoined","reconnect","ERR_URI_SUBSCRIPTION_FAILED","nextStreamId","handleAddInterest","handleRemoveInterest","subscriptionsMap","subscribeMsg","stream_id","sendSubscriptionFailed","publishMessage","postMessage","dropSubscriptionMessage","closeMultipleSubscriptions","subscriptionsToClose","drop","allSubscriptions","onSubscriptionLifetimeEvent","getById","eventName","getNextStreamId","caller_id","errorMsg","errorMessage","request_id","__awaiter","thisArg","_arguments","P","generator","fulfilled","next","rejected","__generator","body","verb","op","f","_","y","label","ops","pop","trys","sent","throw","return","Symbol","iterator","handleInvokeMessage","isStreaming","registerMsg","_a","registrationCallbacks","fail","repoId","restrictions","handleRegisteredMessage","handleErrorRegister","peer_id","invocation_id","warn","callerId","subscription_1","ServerBranch","ServerRepository","nextId","remove","Request","accept","acceptOnBranch","__assign","assign","streaming_1","stream_1","invocations","onMethodInvoked","wrappedCallbackFunction","resultCallback","registerCore","wrappedCallback","some","serverMethod","request","streamCallbacks","streamFrontObject","forStream","methodToBeRemoved","unregisterWithPredicate","find","removeMethodsOrStreams","filterPredicate","methodsOrStreamsToRemove","sm","methodsToRemove","filterProps","methodDefProps","from","Set","isMatch","filterValue","methodDefValue","firstObjType","sort","secondObjTypes_1","hasADifference","objType","methodToExecute","unStrException","_result","branch_1","ServerStream","bList","def2","request_1","rc","rm","handleSubRequest","handleSubAdded","handleSubRemoved","protocol_1","successMessages","Protocol","watchOnEvent","topic","_b","routingKey","_c","removeEmptyValues","routing_key","target_identity","response","keysMatch","cleaned","obj1","obj2","keysObj1","allMatch","getApplication","getConfigProp","prop1","prop2","masterConfigProp1","masterConfig","userProp1","dynamicDefaultsProp1","dynamicDefaults","hardDefaultsProp1","hardDefaults","ifNotFalse","what","uid","shortid_1","GLUE_CONFIG","GLUE_DEFAULT_CONFIG","containerName","browserWindowName","appName","agm_application","documentTitle","system","metricsFacade","getIdentity","machineName","gateway","defaultProtocol","defaultWs","gwURL","reconnectInterval","gwConfig","reconnectAttempts","inproc","CLOSING","replaySpecs","gw","connectionConfig","contextConfig","channels","contextsEnabled","channelsConfig","pjson","__extends","extendStatics","b","setPrototypeOf","__proto__","__","connection_1","messageReplayer_1","GW3ConnectionImpl","_super","MessageReplayerImpl","gw3Protocol","superAPI","availableDomains","authToken","errorMessages","gw3_1","hc_1","ws_1","gw3Connection_1","gw1_1","hc_2","inproc_1","gw3Connection","gw3Port","specs","specsNames","messages","subs","subsRefCount","specs_1","spec","name_1","refCount","processMessage","isDone","name_2","GW1Protocol","messageObj","sendOptions","retryInterval","maxRetries","dateMinLen","datePrefixFirstChar","substring","datePrefixLen","datePrefix","milliseconds","parseInt","ex","oldToJson","getTime","loginConfig","username","password","shouldTryLogin","authentication","secret","helloMsg","globalDomain","gw3Domain_1","skipPeerId","initialLogin","resolved_identity","available_domains","access_token","setLoggedIn","pingTimer","sessions","leave","isLoggedIn","domainName","domainLogger","handleDisconnected","initialLoginAttempts","ping","createTokenReq","res","_latestOptions","isJoined","joinPromise","_connectionOn","destination","handleJoined","wasReconnect","tryReconnecting","handleConnectionDisconnected","handleConnectionLoggedIn","onLeft","handleErrorMessage","requestId","entry","requestsMap","handleSuccessMessage","getNextRequestId","successMsg","callbackRegistry","HCProtocol","HCTransport","connectionId","loggingFacade","Inproc","gwToken","connectToken","connect","consoleLevel","WS","_running","_initied","_registry","waitForSocketConnection","_ws","initiateSocket","onerror","notifyStatusChanged","onclose","onopen","onmessage","failed","retriesLeft","readyState","retries","gw3ContextData_1","GW3Bridge","_contextNameToData","_gw3Subscriptions","_nextCallbackSubscriptionNumber","_contextNameToId","_contextIdToName","_gw3Session","subscribeToContextCreatedMessages","subscribeToContextUpdatedMessages","subscribeToContextDestroyedMessages","handleContextCreatedMessage","handleContextUpdatedMessage","handleContextDestroyedMessage","dispose","contextName","createContext","lifetime","createContextMsg","context_id","contextData","GW3ContextData","isAnnounced","contextId","sentExplicitSubscription","invokeUpdateCallbacks","delta","calculatedDelta","calculateContextDelta","added","updated","removed","gwResponse","handleUpdated","updaterId","set","un","thisCallbackSubscriptionNumber","updateCallbacks","hadCallbacks","hasCallbacks","joinedActivity","sendSubscribe","subscriptionKey","sendUnsubscribe","extraData","oldContext","applyContextDelta","deepEqual","createdMessageTypes","createdMessageTypes_1","createdMessageType","contextCreatedMsg","activity_id","activityId","updatedMessageTypes","updatedMessageTypes_1","updatedMessageType","contextUpdatedMsg","justSeen","context_snapshot","updater_id","updateCallbackIndex","updateCallback","deepClone","destroyedMessageTypes","destroyedMessageTypes_1","destroyedMessageType","destroyedMsg","to","x","getState","HCBridge","_facade","sharedContextFacade","allObj","gw3Bridge_1","hcBridge_1","_bridge","checkName","added_1","updated_1","mergeObjectsProperties","hash","WeakMap","has","Map","val","withWhat","right","left","contextsModule_1","LogLevel","canPublish","level","restriction","order","trace","levels_1","LoggerImpl","metricSystem","_subloggers","_name","_parent","_path","_loggerFullName","existingSub","publishLevel","_publishLevel","_consoleLevel","metricsSystem","_metricLevel","_metricSystem","toAPIObject","loggerName","slice","toPrint","GetConnection","Level","Logger","Message","Time","setState","logger_1","identityStr","mainLogger","glue_1","addressMetric","newValue","_value","updateMetric","me","getValueType","resolution","metric_types_1","createMetric","countMetric","incrementBy","num","increment","decrement","decrementBy","numberMetric","mergeValues","values","rateMetric","statisticsMetric","stringMetric","timespanMetric","start","timestampMetric","sendFull","subSystems","sendFullSystem","createSystem","metric","heartbeat","publishingInterval","heartbeatInterval","updateSystem","state","serializer_1","instanceInfo","metricToMessage","getMetricDefinition","_definition","getTypeFromValue","Composite","serializeValue","_metric","_valueTypes","valueOf","CompositeValue","InnerMetricName","valueType","rootStateMetric","composite","Value","defineRootMetricsMsg","replayRepo","replaySystem","ss","normalizeMetricName","createMetricsMsg","shadowedUpdateMetric","timestamp","stateObj","composeMsgForRootStateMetric","rootMetric","serializeMetric","getMetricValueByType","publishMetricsMsg","getMetricTypeByValue","getTypeByValue","serializedMetrics","memo","innerType","defineNestedComposite","publishNestedComposite","flatten","flat","toFlatten","getHighestState","aggregateDescription","idx","aggregatedState","getAggregateState","merged","highestState","clickStream","_root","system_1","rootSystem","useClickStream","navigator","userAgent","clickStream_1","documentClickHandler","className","tagName","href","page","location","addEventListener","attachEvent","urlMetric","appNameMetric","startUrl","nameSystem","descriptionSystem","_subSystems","_system","_repo","stateDescription","_state","_getOrCreateMetric","metricDef","string_1","number_1","count_1","address_1","object_1","timespan_1","timestamp_1","rate_1","statistics_1","_unionToMetricDef","metricDefinition","expectedType","matching","shadowedMetric","existing","_buildPath","shadowedSystem","aggState","shadowedSubSystem","_description","separator"],"mappings":"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","file":"tick42-glue-core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-glue-core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-glue-core\"] = factory();\n\telse\n\t\troot[\"tick42-glue-core\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"tick42-glue-core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tick42-glue-core\"] = factory();\n\telse\n\t\troot[\"tick42-glue-core\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 75);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    DEFAULT: 0,\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    COUNT: 3,\r\n    RATE: 4,\r\n    STATISTICS: 6,\r\n    TIMESTAMP: 7,\r\n    ADDRESS: 8,\r\n    TIMESPAN: 10,\r\n    OBJECT: 11\r\n};\r\n//# sourceMappingURL=metric-types.js.map\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\r\n//# sourceMappingURL=helpers.js.map\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar shortid = __webpack_require__(6);\r\nexports.default = shortid;\r\n//# sourceMappingURL=random.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar randomFromSeed = __webpack_require__(24);\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction convertInfoToInstance(info) {\r\n    if (typeof info !== \"object\") {\r\n        info = {};\r\n    }\r\n    return {\r\n        application: info.ApplicationName,\r\n        environment: info.Environment,\r\n        machine: info.MachineName,\r\n        pid: info.ProcessId,\r\n        region: info.Region,\r\n        service: info.ServiceName,\r\n        user: info.UserName,\r\n        started: info.ProcessStartTime,\r\n    };\r\n}\r\nexports.convertInfoToInstance = convertInfoToInstance;\r\nfunction isStreamingFlagSet(flags) {\r\n    if (typeof flags !== \"number\" || isNaN(flags)) {\r\n        return false;\r\n    }\r\n    var mask = 32;\r\n    var result = flags & mask;\r\n    return result === mask;\r\n}\r\nexports.isStreamingFlagSet = isStreamingFlagSet;\r\nfunction convertInstance(instance) {\r\n    return {\r\n        ApplicationName: instance.application,\r\n        ProcessId: instance.pid,\r\n        MachineName: instance.machine,\r\n        UserName: instance.user,\r\n        Environment: instance.environment,\r\n        Region: instance.region,\r\n    };\r\n}\r\nexports.convertInstance = convertInstance;\r\n//# sourceMappingURL=helpers.js.map\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nmodule.exports = __webpack_require__(21);\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction default_1(promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    promise.then(successCallback, errorCallback);\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=promisify.js.map\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () { return this.repoMethod.stream; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () { return this.subscription.instance; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\r\nexports.default = ServerSubscription;\r\n//# sourceMappingURL=subscription.js.map\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar msg = __webpack_require__(14);\r\nexports.ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            msg.GW_MESSAGE_CREATE_CONTEXT,\r\n            msg.GW_MESSAGE_ACTIVITY_CREATED,\r\n            msg.GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            msg.GW_MESSAGE_CONTEXT_CREATED,\r\n            msg.GW_MESSAGE_CONTEXT_ADDED,\r\n            msg.GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            msg.GW_MESSAGE_DESTROY_CONTEXT,\r\n            msg.GW_MESSAGE_CONTEXT_DESTROYED,\r\n            msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n            msg.GW_MESSAGE_CONTEXT_UPDATED,\r\n            msg.GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\r\n//# sourceMappingURL=contextMessageReplaySpec.js.map\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return -1;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return -1;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return -1;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? -1 : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        try {\r\n            return Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    return Utils;\r\n}());\r\nexports.default = Utils;\r\n//# sourceMappingURL=utils.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"name\":\"tick42-glue-core\",\"version\":\"4.3.7\",\"description\":\"Glue42 core library including logger, connection, agm and metrics\",\"main\":\"./dist/node/tick42-glue-core.js\",\"types\":\"./glue.d.ts\",\"browser\":\"./dist/web/tick42-glue-core.js\",\"scripts\":{\"init-dev-mode\":\"node ./build/scripts/init-dev-mode.js\",\"remove-installed-dependencies\":\"node ./build/scripts/remove-installed-dependencies.js\",\"clean\":\"node ./build/scripts/clean.js\",\"pre:build\":\"npm run clean && npm run tslint && tsc && set NODE_ENV=development\",\"file-versionify\":\"node ./build/scripts/file-versionify.js\",\"tslint\":\"tslint -t codeFrame ./src/**.ts\",\"tslint:fix\":\"tslint -t codeFrame --fix ./src/**.ts\",\"watch\":\"onchange ./src/**/*.ts -- npm run build:dev\",\"build:dev\":\"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify\",\"build:prod\":\"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify\",\"docs\":\"typedoc --options typedoc.json ./src\",\"prepublish\":\"npm run build:prod && npm run test:only\",\"test\":\"npm run build:dev && npm run test:only\",\"test:only\":\"mocha ./tests/ --recursive\",\"test:core\":\"mocha ./tests/core\",\"test:agm\":\"mocha ./tests/agm\",\"test:bus\":\"mocha ./tests/bus\"},\"repository\":{\"type\":\"git\",\"url\":\"https://stash.tick42.com/scm/tg/js-glue-core.git\"},\"author\":{\"name\":\"Tick42\",\"url\":\"http://www.glue42.com\"},\"license\":\"ISC\",\"dependencies\":{\"callback-registry\":\"^2.4.0\",\"es6-promise\":\"^4.1.0\",\"shortid\":\"^2.2.6\",\"util-deprecate\":\"^1.0.2\",\"ws\":\"^0.7.2\"},\"devDependencies\":{\"@types/node\":\"^10.7.0\",\"@types/shortid\":\"0.0.29\",\"archiver\":\"^1.3.0\",\"babel-core\":\"^6.25.0\",\"babel-loader\":\"^6.4.1\",\"babel-plugin-add-module-exports\":\"^0.2.1\",\"babel-preset-es2015\":\"^6.16.0\",\"babel-preset-stage-2\":\"^6.22.0\",\"chai\":\"^4.0.2\",\"deep-equal\":\"^1.0.1\",\"mocha\":\"^2.5.3\",\"onchange\":\"3.*\",\"pre-commit\":\"^1.1.3\",\"readline-sync\":\"^1.4.5\",\"shelljs\":\"^0.6.0\",\"tick42-gateway\":\"0.2.7\",\"tick42-webpack-config\":\"4.1.6\",\"tslint\":\"^5.11.0\",\"typescript\":\"^3.0.1\",\"webpack\":\"2.3.3\"}}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(1);\r\nvar ConnectionImpl = (function () {\r\n    function ConnectionImpl(settings) {\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = callback_registry_1.default();\r\n        this._connected = false;\r\n        this._settings = settings;\r\n        this._logger = settings.logger;\r\n    }\r\n    ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        this._protocol = protocol;\r\n        this._transport = transport;\r\n        this._transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this._transport.onMessage(this.handleTransportMessage.bind(this));\r\n    };\r\n    ConnectionImpl.prototype.send = function (product, type, message, id, options) {\r\n        if (this._transport.isObjectBasedTransport) {\r\n            var msg = this._protocol.createObjectMessage(product, type, message, id);\r\n            return this._transport.sendObject(msg, product, type, options);\r\n        }\r\n        else {\r\n            var strMessage = this._protocol.createStringMessage(product, type, message, id);\r\n            return this._transport.send(strMessage, product, type, options);\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.on = function (product, type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    ConnectionImpl.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this._connected;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.connected = function (callback) {\r\n        if (this._connected) {\r\n            callback(this._settings.ws || this._settings.http);\r\n        }\r\n        return this.registry.add(\"connected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.login = function (authRequest) {\r\n        this._transport.open();\r\n        return this._protocol.login(authRequest);\r\n    };\r\n    ConnectionImpl.prototype.logout = function () {\r\n        this._protocol.logout();\r\n        this._transport.close();\r\n    };\r\n    ConnectionImpl.prototype.loggedIn = function (callback) {\r\n        return this._protocol.loggedIn(callback);\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            return this._settings.protocolVersion || 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        return {\r\n            send: that.send.bind(that),\r\n            on: that.on.bind(that),\r\n            off: that.off.bind(that),\r\n            login: that.login.bind(that),\r\n            logout: that.logout.bind(that),\r\n            loggedIn: that.loggedIn.bind(that),\r\n            connected: that.connected.bind(that),\r\n            disconnected: that.disconnected.bind(that),\r\n            get protocolVersion() {\r\n                return that.protocolVersion;\r\n            }\r\n        };\r\n    };\r\n    ConnectionImpl.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        _this._logger.error(\"Message handler failed with \" + error.stack);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this._protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this._protocol.processObjectMessage(msg);\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return ConnectionImpl;\r\n}());\r\nexports.default = ConnectionImpl;\r\n//# sourceMappingURL=connection.js.map\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nexports.GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nexports.GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nexports.GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nexports.GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nexports.GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nexports.GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nexports.GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nexports.GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nexports.GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nexports.GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nexports.GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nexports.GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\r\n//# sourceMappingURL=gw3Messages.js.map\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection = {\r\n    protocolVersion: -1,\r\n    send: function (product, type, message, id, options) {\r\n        return Promise.resolve(undefined);\r\n    },\r\n    on: function (product, type, messageHandler) {\r\n        return { type: \"1\", id: 1 };\r\n    },\r\n    off: function (info) {\r\n    },\r\n    login: function (message) {\r\n        return undefined;\r\n    },\r\n    logout: function () {\r\n    },\r\n    loggedIn: function (callback) {\r\n        return undefined;\r\n    },\r\n    connected: function (callback) {\r\n        return undefined;\r\n    },\r\n    disconnected: function (callback) {\r\n        return undefined;\r\n    },\r\n};\r\nexports.default = connection;\r\n//# sourceMappingURL=dummyConnection.js.map\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar main_1 = __webpack_require__(89);\r\nvar main_2 = __webpack_require__(57);\r\nvar main_3 = __webpack_require__(74);\r\nvar main_4 = __webpack_require__(35);\r\nvar main_5 = __webpack_require__(52);\r\nvar config_1 = __webpack_require__(55);\r\nvar dummyConnection_1 = __webpack_require__(15);\r\nvar timer_1 = __webpack_require__(92);\r\nvar utils_1 = __webpack_require__(11);\r\nvar dummyConnection_2 = __webpack_require__(15);\r\nvar main_6 = __webpack_require__(71);\r\nvar contextMessageReplaySpec_1 = __webpack_require__(10);\r\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = -1;\r\n    var hc;\r\n    var glue42gd;\r\n    if (typeof window !== \"undefined\") {\r\n        gdVersion = utils_1.default.getGDMajorVersion();\r\n        if (gdVersion === 2) {\r\n            hc = window.htmlContainer;\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n        }\r\n    }\r\n    var glueInitTimer = timer_1.default();\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = config_1.default(userConfig, ext, hc, glue42gd, gdVersion);\r\n    var _connection;\r\n    var _agm;\r\n    var _logger;\r\n    var _rootMetrics;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                inner.initTime = t.stop();\r\n                inner.initEndTime = t.endTime;\r\n            });\r\n        }\r\n        else {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n        }\r\n        libs[name] = inner;\r\n        GlueCore[name] = inner;\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer_1.default();\r\n        internalConfig.connection.logger = _logger.subLogger(\"connection\");\r\n        _connection = main_2.default(internalConfig.connection);\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            var protocolVersion = internalConfig.connection.protocolVersion;\r\n            if (!protocolVersion || protocolVersion === 1) {\r\n                registerLib(\"connection\", _connection, initTimer);\r\n                return Promise.resolve({});\r\n            }\r\n            if (protocolVersion === 2) {\r\n                return Promise.reject(\"You need to provide auth information\");\r\n            }\r\n            if (protocolVersion === 3) {\r\n                if (glue42gd) {\r\n                    authPromise = glue42gd.getGWToken().then(function (token) {\r\n                        return {\r\n                            gatewayToken: token\r\n                        };\r\n                    });\r\n                }\r\n                else {\r\n                    authPromise = Promise.reject(\"You need to provide auth information\");\r\n                }\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            var authRequest;\r\n            if (typeof authConfig === \"string\" || typeof authConfig === \"number\") {\r\n                authRequest = {\r\n                    token: authConfig\r\n                };\r\n            }\r\n            else if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return authRequest;\r\n        })\r\n            .then(function (authRequest) {\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function (identity) {\r\n            if (identity) {\r\n                if (identity.machine) {\r\n                    internalConfig.agm.instance.machine = identity.machine;\r\n                }\r\n                if (identity.user) {\r\n                    internalConfig.agm.instance.user = identity.user;\r\n                }\r\n            }\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var initTimer = timer_1.default();\r\n        var loggerConfig = {\r\n            identity: internalConfig.identity,\r\n            getConnection: function () {\r\n                return _connection || dummyConnection_1.default;\r\n            },\r\n            publish: internalConfig.logger.publish || \"off\",\r\n            console: internalConfig.logger.console || \"info\",\r\n            metrics: (internalConfig.metrics && internalConfig.logger.metrics) || \"off\"\r\n        };\r\n        _logger = main_3.default(loggerConfig);\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        if (internalConfig.metrics) {\r\n            var initTimer = timer_1.default();\r\n            _rootMetrics = main_1.default({\r\n                identity: internalConfig.metrics.identity,\r\n                connection: internalConfig.metrics ? _connection : dummyConnection_1.default,\r\n                logger: _logger.subLogger(\"metrics\")\r\n            });\r\n            _metrics = _rootMetrics.subSystem(\"App\");\r\n            var reportingSystem_1 = _metrics.subSystem(\"reporting\");\r\n            var def_1 = {\r\n                name: \"features\",\r\n                conflation: 1,\r\n            };\r\n            var _featureMetric_1;\r\n            _metrics.featureMetric = function (name, action, payload) {\r\n                if (typeof name === \"undefined\" || name === \"\") {\r\n                    throw new Error(\"name is mandatory\");\r\n                }\r\n                else if (typeof action === \"undefined\" || action === \"\") {\r\n                    throw new Error(\"action is mandatory\");\r\n                }\r\n                else if (typeof payload === \"undefined\" || payload === \"\") {\r\n                    throw new Error(\"payload is mandatory\");\r\n                }\r\n                if (!_featureMetric_1) {\r\n                    _featureMetric_1 = reportingSystem_1.objectMetric(def_1, { name: name, action: action, payload: payload });\r\n                }\r\n                else {\r\n                    _featureMetric_1.update({\r\n                        name: name,\r\n                        action: action,\r\n                        payload: payload\r\n                    });\r\n                }\r\n            };\r\n            _logger.metricsLevel(\"warn\", _metrics.parent.subSystem(\"LogEvents\"));\r\n            registerLib(\"metrics\", _metrics, initTimer);\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupAGM() {\r\n        var initTimer = timer_1.default();\r\n        var agmConfig = {\r\n            instance: internalConfig.agm.instance,\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"agm\"),\r\n            forceGW: internalConfig.connection && internalConfig.connection.force,\r\n            gdVersion: gdVersion,\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            main_4.default(agmConfig)\r\n                .then(function (agmLib) {\r\n                _agm = agmLib;\r\n                registerLib(\"agm\", _agm, initTimer);\r\n                resolve(internalConfig);\r\n            })\r\n                .catch(function (err) {\r\n                return reject(err);\r\n            });\r\n        });\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && dummyConnection_2.default.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer_1.default();\r\n            _contexts = new main_6.ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\"),\r\n                gdMajorVersion: gdVersion\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = dummyConnection_2.default.replayer;\r\n            if (replayer) {\r\n                replayer.drain(contextMessageReplaySpec_1.ContextMessageReplaySpec.name, null);\r\n            }\r\n        }\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer_1.default();\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function () {\r\n            if (!_agm) {\r\n                return;\r\n            }\r\n            _agm.invoke(\"T42.ACS.Feedback\", {}, \"best\");\r\n        };\r\n        var info = { glueVersion: internalConfig.version };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                _connection.logout();\r\n                return Promise.resolve();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var result = Object.keys(glue)\r\n                    .filter(function (key) {\r\n                    if (key === \"initTimes\") {\r\n                        return false;\r\n                    }\r\n                    return glue[key].initTime;\r\n                })\r\n                    .map(function (key) {\r\n                    return {\r\n                        name: key,\r\n                        time: glue[key].initTime,\r\n                        startTime: glue[key].initStartTime,\r\n                        endTime: glue[key].initEndTime\r\n                    };\r\n                });\r\n                result.push({\r\n                    name: \"glue\",\r\n                    startTime: glueInitTimer.startTime,\r\n                    endTime: glueInitTimer.endTime,\r\n                    time: glueInitTimer.period\r\n                });\r\n                return result;\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n            info[key] = lib.version;\r\n        });\r\n        if (hc && hc.perfDataNeeded && hc.updatePerfData) {\r\n            var delay = hc.perfDataDelay || 100;\r\n            setTimeout(function () {\r\n                hc.updatePerfData(glue.performance);\r\n            }, delay);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        glue.config = {};\r\n        if (ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext.extOptions[k];\r\n            });\r\n        }\r\n        return glue;\r\n    }\r\n    function setupBus() {\r\n        if (!internalConfig.bus) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        var initTimer = timer_1.default();\r\n        var busSettings = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"bus\")\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            main_5.default(busSettings)\r\n                .then(function (busLib) {\r\n                _bus = busLib;\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                return reject(err);\r\n            });\r\n        });\r\n    }\r\n    return setupLogger()\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupAGM(), setupContexts(), setupBus()]); })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nexports.default = GlueCore;\r\n//# sourceMappingURL=glue.js.map\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n\n  var id = ''\n  while (true) {\n    var bytes = random(step)\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask\n      if (alphabet[byte]) {\n        id += alphabet[byte]\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar generate = __webpack_require__(20);\nvar alphabet = __webpack_require__(4);\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar alphabet = __webpack_require__(4);\nvar random = __webpack_require__(23);\nvar format = __webpack_require__(17);\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar alphabet = __webpack_require__(4);\nvar build = __webpack_require__(19);\nvar isValid = __webpack_require__(22);\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = __webpack_require__(25) || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar alphabet = __webpack_require__(4);\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 0;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\n/**\n * Module dependencies.\n */\n\nvar global = (function() { return this; })();\n\n/**\n * WebSocket constructor.\n */\n\nvar WebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WebSocket ? ws : null;\n\n/**\n * WebSocket constructor.\n *\n * The third `opts` options object gets ignored in web browsers, since it's\n * non-standard, and throws a TypeError if passed to the constructor.\n * See: https://github.com/einaros/ws/issues/227\n *\n * @param {String} uri\n * @param {Array} protocols (optional)\n * @param {Object) opts (optional)\n * @api public\n */\n\nfunction ws(uri, protocols, opts) {\n  var instance;\n  if (protocols) {\n    instance = new WebSocket(uri, protocols);\n  } else {\n    instance = new WebSocket(uri);\n  }\n  return instance;\n}\n\nif (WebSocket) ws.prototype = WebSocket.prototype;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar client_1 = __webpack_require__(28);\r\nvar server_1 = __webpack_require__(49);\r\nvar AGMImpl = (function () {\r\n    function AGMImpl(protocol, clientRepository, serverRepository, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n        this.client = new client_1.default(protocol, clientRepository, instance, configuration);\r\n        this.server = new server_1.default(protocol, serverRepository, instance, configuration);\r\n    }\r\n    AGMImpl.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    AGMImpl.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    AGMImpl.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    AGMImpl.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    AGMImpl.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    AGMImpl.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    AGMImpl.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    AGMImpl.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    AGMImpl.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    AGMImpl.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    AGMImpl.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    };\r\n    AGMImpl.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    AGMImpl.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    AGMImpl.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    AGMImpl.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    AGMImpl.prototype.updateInstance = function (newInstance) {\r\n        if (this.instance.machine === undefined) {\r\n            this.instance.machine = newInstance.MachineName || newInstance.machine;\r\n        }\r\n        if (this.instance.user === undefined) {\r\n            this.instance.user = newInstance.UserName || newInstance.user;\r\n        }\r\n        if (this.instance.environment === undefined) {\r\n            this.instance.environment = newInstance.Environment || newInstance.environment;\r\n        }\r\n        if (this.instance.region === undefined) {\r\n            this.instance.region = newInstance.Region || newInstance.region;\r\n        }\r\n    };\r\n    return AGMImpl;\r\n}());\r\nexports.default = AGMImpl;\r\n//# sourceMappingURL=agm.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar invoke_1 = __webpack_require__(29);\r\nvar promisify_1 = __webpack_require__(8);\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n        this.clientInvocations = new invoke_1.default(protocol);\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            _this.protocol.client.subscribe(stream, options.arguments, targetServers, { methodResponseTimeout: options.waitTimeoutMs }, successProxy, errorProxy);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\", \"best\", or an instance.' });\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        var info = {\r\n                            id: undefined,\r\n                            info: def,\r\n                            getInfoForUser: function () {\r\n                                return methodDef;\r\n                            },\r\n                            protocolState: undefined,\r\n                        };\r\n                        callProtocolSubscribe(currentServers, info, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify_1.default(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        return this.getServers(methodFilter).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.getInfoForUser();\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        return this.getMethods(methodFilter).map(function (m) {\r\n            return m.getInfoForUser();\r\n        });\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance).map(function (m) {\r\n            return m.getInfoForUser();\r\n        });\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(function (method) {\r\n            callback(method.getInfoForUser());\r\n        });\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(function (method) {\r\n            callback(method.getInfoForUser());\r\n        });\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(function (server) {\r\n            callback(server.getInfoForUser());\r\n        });\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server.getInfoForUser(), reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server.getInfoForUser(), method: method.getInfoForUser() });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server.getInfoForUser(), method: method.getInfoForUser() });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (args) {\r\n                resolve(args);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!argumentObj) {\r\n                argumentObj = {};\r\n            }\r\n            if (!target) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\" and \"best\".' });\r\n            }\r\n            if (!additionalOptions) {\r\n                additionalOptions = {};\r\n            }\r\n            if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                    additionalOptions.methodResponseTimeoutMs = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (additionalOptions.waitTimeoutMs === undefined) {\r\n                additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                    additionalOptions.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                reject({ message: '\"' + additionalOptions.waitTimeoutMs + '\" is not a valid number for \\'waitTimeoutMs\\'' });\r\n                return;\r\n            }\r\n            if (typeof argumentObj !== \"object\") {\r\n                reject({ message: \"The method arguments must be an object.\" });\r\n                return;\r\n            }\r\n            if (typeof methodFilter === \"string\") {\r\n                methodFilter = { name: methodFilter };\r\n            }\r\n            var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodFilter, target);\r\n            if (serversMethodMap.length === 0) {\r\n                _this.invokeUnExisting(methodFilter, argumentObj, target, additionalOptions, successProxy, errorProxy);\r\n            }\r\n            else if (serversMethodMap.length === 1) {\r\n                var serverMethodPair = serversMethodMap[0];\r\n                _this.clientInvocations.invoke(serverMethodPair.methods[0], argumentObj, serverMethodPair.server, additionalOptions, successProxy, errorProxy);\r\n            }\r\n            else {\r\n                _this.invokeOnAll(serversMethodMap, argumentObj, additionalOptions, successProxy, errorProxy);\r\n            }\r\n        });\r\n        return promisify_1.default(promise, success, error);\r\n    };\r\n    Client.prototype.invokeUnExisting = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        var _this = this;\r\n        var callError = function () {\r\n            error({\r\n                method: methodFilter,\r\n                called_with: argumentObj,\r\n                message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target),\r\n                executed_by: undefined,\r\n                returned: undefined,\r\n                status: undefined,\r\n            });\r\n        };\r\n        if (additionalOptions.waitTimeoutMs === 0) {\r\n            callError();\r\n        }\r\n        else {\r\n            var delayStep_1 = 500;\r\n            var delayTillNow_1 = 0;\r\n            var retry_2 = function () {\r\n                delayTillNow_1 += delayStep_1;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodFilter, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    _this.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n                }\r\n                else if (delayTillNow_1 >= additionalOptions.waitTimeoutMs) {\r\n                    callError();\r\n                }\r\n                else {\r\n                    setTimeout(retry_2, delayStep_1);\r\n                }\r\n            };\r\n            setTimeout(retry_2, delayStep_1);\r\n        }\r\n    };\r\n    Client.prototype.invokeOnAll = function (serverMethodsMap, argumentObj, additionalOptions, success, error) {\r\n        var _this = this;\r\n        var successes = [];\r\n        var errors = [];\r\n        var successCallback = function (result) {\r\n            successes.push(result);\r\n            sendResponse();\r\n        };\r\n        var errorCallback = function (err) {\r\n            errors.push(err);\r\n            sendResponse();\r\n        };\r\n        var sendResponse = function () {\r\n            if (successes.length + errors.length < serverMethodsMap.length) {\r\n                return;\r\n            }\r\n            if (successes.length !== 0) {\r\n                var result_1 = successes.reduce(function (obj, invResult) {\r\n                    obj.method = invResult.method;\r\n                    obj.called_with = invResult.called_with;\r\n                    obj.returned = invResult.returned;\r\n                    obj.all_return_values.push({\r\n                        executed_by: invResult.executed_by,\r\n                        returned: invResult.returned,\r\n                        called_with: invResult.called_with,\r\n                        method: invResult.method,\r\n                        message: undefined,\r\n                        status: undefined,\r\n                    });\r\n                    obj.executed_by = invResult.executed_by;\r\n                    return obj;\r\n                }, { all_return_values: [] });\r\n                if (errors.length !== 0) {\r\n                    result_1.all_errors = [];\r\n                    errors.forEach(function (obj) {\r\n                        result_1.all_errors.push({\r\n                            executed_by: obj.executed_by,\r\n                            called_with: obj.called_with,\r\n                            name: obj.method.name,\r\n                            message: obj.message,\r\n                        });\r\n                    });\r\n                }\r\n                success(result_1);\r\n            }\r\n            else if (errors.length !== 0) {\r\n                error(errors.reduce(function (obj, currentError) {\r\n                    obj.method = currentError.method;\r\n                    obj.called_with = currentError.called_with;\r\n                    obj.message = currentError.message;\r\n                    obj.all_errors.push({\r\n                        executed_by: currentError.executed_by,\r\n                        message: currentError.message,\r\n                    });\r\n                    return obj;\r\n                }, { all_errors: [] }));\r\n            }\r\n        };\r\n        serverMethodsMap.forEach(function (serverMethodsPair) {\r\n            _this.clientInvocations.invoke(serverMethodsPair.methods[0], argumentObj, serverMethodsPair.server, additionalOptions, successCallback, errorCallback);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        var targetServerMethod = [];\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                targetServerMethod = serverMethodMap;\r\n            }\r\n            else if (target === \"best\") {\r\n                var matchingMachine = serverMethodMap.filter(function (serverMethodPair) {\r\n                    var serverInfo = serverMethodPair.server.info;\r\n                    return serverInfo.machine === _this.instance.machine;\r\n                })[0];\r\n                if (matchingMachine) {\r\n                    return [matchingMachine];\r\n                }\r\n                targetServerMethod = serverMethodMap[0] !== undefined ? [serverMethodMap[0]] : [];\r\n            }\r\n        }\r\n        else {\r\n            if (!Array.isArray(target)) {\r\n                target = [target];\r\n            }\r\n            if (Array.isArray(target)) {\r\n                targetServerMethod = target.reduce(function (matches, filter) {\r\n                    var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                        return _this.instanceMatch(filter, serverMethodPair.server.info);\r\n                    });\r\n                    return matches.concat(myMatches);\r\n                }, []);\r\n            }\r\n        }\r\n        return targetServerMethod;\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, object) {\r\n        return Object.keys(filter).reduce(function (match, prop) {\r\n            if (!filter[prop] || typeof filter[prop] === \"function\") {\r\n                return match;\r\n            }\r\n            if (filter[prop].constructor === RegExp) {\r\n                if (!filter[prop].test(object[prop])) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return match;\r\n                }\r\n            }\r\n            else {\r\n                if (String(filter[prop]).toLowerCase() !== String(object[prop]).toLowerCase()) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return match;\r\n                }\r\n            }\r\n        }, true);\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        return this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method.info);\r\n        });\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.info);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.id] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server };\r\n            });\r\n        }\r\n        var methods = this.getMethods(methodFilter);\r\n        if (methods === undefined) {\r\n            return [];\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = _this.repo.getServerMethodsById(current.id);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method.info);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\r\nexports.default = Client;\r\n//# sourceMappingURL=client.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = __webpack_require__(3);\r\nvar ClientInvocations = (function () {\r\n    function ClientInvocations(_protocol) {\r\n        var _this = this;\r\n        this._protocol = _protocol;\r\n        this._pendingCallbacks = {};\r\n        _protocol.client.onInvocationResult(function (invocationId, executedBy, status, result, resultMessage) {\r\n            return _this.processInvocationResult(invocationId, executedBy, status, result, resultMessage);\r\n        });\r\n    }\r\n    ClientInvocations.prototype.invoke = function (method, argumentsObj, target, stuff, success, error) {\r\n        var invocationId = random_1.default();\r\n        this.registerInvocation(invocationId, {\r\n            method: method,\r\n            calledWith: argumentsObj,\r\n        }, success, error, stuff.methodResponseTimeoutMs);\r\n        this._protocol.client.invoke(invocationId, method, argumentsObj, target, stuff);\r\n    };\r\n    ClientInvocations.prototype.registerInvocation = function (invocationId, invocationInfo, success, error, timeout) {\r\n        var _this = this;\r\n        this._pendingCallbacks[invocationId] = { invocationInfo: invocationInfo, success: success, error: error };\r\n        setTimeout(function () {\r\n            if (_this._pendingCallbacks[invocationId] === undefined) {\r\n                return;\r\n            }\r\n            error({\r\n                method: invocationInfo.method.getInfoForUser(),\r\n                called_with: invocationInfo.calledWith,\r\n                executed_by: undefined,\r\n                status: undefined,\r\n                returned: undefined,\r\n                message: \"Invocation timeout (\" + timeout + \" ms) reached\",\r\n            });\r\n            delete _this._pendingCallbacks[invocationId];\r\n        }, timeout);\r\n    };\r\n    ClientInvocations.prototype.processInvocationResult = function (invocationId, executedBy, status, result, resultMessage) {\r\n        var callback = this._pendingCallbacks[invocationId];\r\n        if (callback === undefined) {\r\n            return;\r\n        }\r\n        if (status === 0 && typeof callback.success === \"function\") {\r\n            callback.success({\r\n                method: callback.invocationInfo.method.getInfoForUser(),\r\n                called_with: callback.invocationInfo.calledWith,\r\n                executed_by: executedBy,\r\n                returned: result,\r\n                message: resultMessage,\r\n                status: status,\r\n            });\r\n        }\r\n        else if (typeof callback.error === \"function\") {\r\n            callback.error({\r\n                method: callback.invocationInfo.method.getInfoForUser(),\r\n                called_with: callback.invocationInfo.calledWith,\r\n                executed_by: executedBy,\r\n                message: resultMessage,\r\n                status: status,\r\n                returned: result,\r\n            });\r\n        }\r\n        delete this._pendingCallbacks[invocationId];\r\n    };\r\n    return ClientInvocations;\r\n}());\r\nexports.default = ClientInvocations;\r\n//# sourceMappingURL=invoke.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(1);\r\nvar ClientRepository = (function () {\r\n    function ClientRepository() {\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = callback_registry_1.default();\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        var _this = this;\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var serverEntry = {\r\n            id: serverId,\r\n            info: info,\r\n            methods: {},\r\n            getInfoForUser: function () {\r\n                var serverInfo = _this.createUserServerInfo(serverEntry.info);\r\n                serverInfo.getMethods = function () {\r\n                    return _this.getServerMethodsById(serverEntry.id).map(function (m) {\r\n                        return m.getInfoForUser();\r\n                    });\r\n                };\r\n                serverInfo.getStreams = function () {\r\n                    return _this.getServerMethodsById(serverEntry.id)\r\n                        .filter(function (method) {\r\n                        return method.info.supportsStreaming;\r\n                    })\r\n                        .map(function (m) {\r\n                        return m.getInfoForUser();\r\n                    });\r\n                };\r\n                return serverInfo;\r\n            },\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method, protocolState) {\r\n        if (!protocolState) {\r\n            protocolState = {};\r\n        }\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var methodId = this.createMethodId(method);\r\n        if (server.methods[methodId]) {\r\n            return;\r\n        }\r\n        var that = this;\r\n        var methodEntity = {\r\n            id: methodId,\r\n            info: method,\r\n            getInfoForUser: function () {\r\n                var result = that.createUserMethodInfo(methodEntity.info);\r\n                result.getServers = function () {\r\n                    return that.getServersByMethod(methodId);\r\n                };\r\n                return result;\r\n            },\r\n            protocolState: protocolState,\r\n        };\r\n        server.methods[methodId] = methodEntity;\r\n        if (!this.methodsCount[methodId]) {\r\n            this.methodsCount[methodId] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", methodEntity);\r\n        }\r\n        this.methodsCount[methodId] = this.methodsCount[methodId] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server, methodEntity);\r\n    };\r\n    ClientRepository.prototype.createMethodId = function (methodInfo) {\r\n        var accepts = methodInfo.accepts !== undefined ? methodInfo.accepts : \"\";\r\n        var returns = methodInfo.returns !== undefined ? methodInfo.returns : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        this.methodsCount[methodId] = this.methodsCount[methodId] - 1;\r\n        if (this.methodsCount[methodId] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", method);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server, method);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        var _this = this;\r\n        var allMethods = {};\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                var method = server.methods[methodId];\r\n                allMethods[method.id] = method;\r\n            });\r\n        });\r\n        var methodsAsArray = Object.keys(allMethods).map(function (id) {\r\n            return allMethods[id];\r\n        });\r\n        return methodsAsArray;\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            allServers.push(server);\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.getServerMethodsById = function (serverId) {\r\n        var server = this.servers[serverId];\r\n        return Object.keys(server.methods).map(function (id) {\r\n            return server.methods[id];\r\n        });\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        this.getServers().forEach(function (server) {\r\n            callback(server);\r\n        });\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        this.getMethods().forEach(function (method) {\r\n            callback(method);\r\n        });\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        this.getServers().forEach(function (server) {\r\n            var methods = server.methods;\r\n            Object.keys(methods).forEach(function (methodId) {\r\n                callback(server, methods[methodId]);\r\n            });\r\n        });\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.servers[id];\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createUserServerInfo = function (serverInfo) {\r\n        return {\r\n            machine: serverInfo.machine,\r\n            pid: serverInfo.pid,\r\n            user: serverInfo.user,\r\n            application: serverInfo.application,\r\n            environment: serverInfo.environment,\r\n            region: serverInfo.region,\r\n            instance: serverInfo.instance,\r\n            windowId: serverInfo.windowId,\r\n            peerId: serverInfo.peerId,\r\n        };\r\n    };\r\n    ClientRepository.prototype.createUserMethodInfo = function (methodInfo) {\r\n        var result = {\r\n            name: methodInfo.name,\r\n            accepts: methodInfo.accepts,\r\n            returns: methodInfo.returns,\r\n            description: methodInfo.description,\r\n            displayName: methodInfo.displayName,\r\n            objectTypes: methodInfo.objectTypes,\r\n            supportsStreaming: methodInfo.supportsStreaming,\r\n        };\r\n        result.object_types = methodInfo.objectTypes;\r\n        result.display_name = methodInfo.displayName;\r\n        result.version = methodInfo.version;\r\n        return result;\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (id) {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                if (methodId === id) {\r\n                    allServers.push(server.getInfoForUser());\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    return ClientRepository;\r\n}());\r\nexports.default = ClientRepository;\r\n//# sourceMappingURL=repository.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar promisify_1 = __webpack_require__(8);\r\nvar NativeAGM = (function () {\r\n    function NativeAGM(instance, helpers, agmFacade) {\r\n        this.instance = instance;\r\n        this.helpers = helpers;\r\n        this.agmFacade = agmFacade;\r\n        this.protocolVersion = this.agmFacade.protocolVersion;\r\n    }\r\n    NativeAGM.prototype.register = function (name, handler) {\r\n        var methodInfoAsObject = this.helpers.stringToObject(name, \"name\");\r\n        this.helpers.validateMethodInfo(methodInfoAsObject);\r\n        if (this.protocolVersion && this.protocolVersion >= 3) {\r\n            this.agmFacade.register(JSON.stringify(methodInfoAsObject), handler, true);\r\n        }\r\n        else {\r\n            this.agmFacade.register(JSON.stringify(methodInfoAsObject), function (arg, caller) {\r\n                var methodResult = handler(JSON.parse(arg), caller);\r\n                return JSON.stringify(methodResult);\r\n            });\r\n        }\r\n    };\r\n    NativeAGM.prototype.registerAsync = function (name, handler) {\r\n        if (!this.agmFacade.registerAsync) {\r\n            throw new Error(\"not supported in that version of HtmlContainer\");\r\n        }\r\n        var methodInfoAsObject = this.helpers.stringToObject(name, \"name\");\r\n        this.helpers.validateMethodInfo(methodInfoAsObject);\r\n        this.agmFacade.registerAsync(methodInfoAsObject, function (args, instance, tracker) {\r\n            handler(args, instance, function (successArgs) {\r\n                tracker.success(successArgs);\r\n            }, function (error) {\r\n                tracker.error(error);\r\n            });\r\n        });\r\n    };\r\n    NativeAGM.prototype.unregister = function (definition) {\r\n        this.agmFacade.unregister(JSON.stringify(this.helpers.stringToObject(definition, \"name\")));\r\n    };\r\n    NativeAGM.prototype.invoke = function (method, argumentObj, target, options, success, error) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (argumentObj === undefined) {\r\n                argumentObj = {};\r\n            }\r\n            if (typeof argumentObj !== \"object\") {\r\n                reject({ message: \"The method arguments must be an object.\" });\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            target = _this.helpers.targetArgToObject(target);\r\n            if (_this.agmFacade.invoke2) {\r\n                _this.agmFacade.invoke2(JSON.stringify(_this.helpers.stringToObject(method, \"name\")), argumentObj, JSON.stringify(target), JSON.stringify(options), function (a) {\r\n                    resolve(a);\r\n                }, function (err) {\r\n                    reject(err);\r\n                });\r\n            }\r\n            else {\r\n                var successProxy = void 0;\r\n                var errorProxy = void 0;\r\n                successProxy = function (args) {\r\n                    var parsed = JSON.parse(args);\r\n                    resolve(parsed);\r\n                };\r\n                errorProxy = function (args) {\r\n                    var parsed = JSON.parse(args);\r\n                    reject(parsed);\r\n                };\r\n                _this.agmFacade.invoke(JSON.stringify(_this.helpers.stringToObject(method, \"name\")), JSON.stringify(argumentObj), JSON.stringify(target), JSON.stringify(options), successProxy, errorProxy);\r\n            }\r\n        });\r\n        return promisify_1.default(promise, success, error);\r\n    };\r\n    NativeAGM.prototype.createStream = function (methodDefinition, options, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (typeof methodDefinition === \"string\") {\r\n                methodDefinition = {\r\n                    name: methodDefinition,\r\n                    getServers: function () { return []; },\r\n                };\r\n            }\r\n            if (!options) {\r\n                options = {\r\n                    subscriptionRequestHandler: undefined,\r\n                    subscriptionAddedHandler: undefined,\r\n                    subscriptionRemovedHandler: undefined,\r\n                };\r\n            }\r\n            _this.agmFacade.createStream2(JSON.stringify(methodDefinition), options.subscriptionRequestHandler, options.subscriptionAddedHandler, options.subscriptionRemovedHandler, function (stream) {\r\n                resolve(stream);\r\n            }, function (error) {\r\n                reject(error);\r\n            });\r\n        });\r\n        return promisify_1.default(promise, successCallback, errorCallback);\r\n    };\r\n    NativeAGM.prototype.subscribe = function (methodDefinition, parameters, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (typeof methodDefinition === \"undefined\") {\r\n                reject(\"method definition param is required\");\r\n            }\r\n            if (parameters === undefined) {\r\n                parameters = {};\r\n            }\r\n            parameters.args = JSON.stringify(parameters.arguments || {});\r\n            parameters.target = _this.helpers.targetArgToObject(parameters.target);\r\n            var name;\r\n            if (typeof methodDefinition === \"string\") {\r\n                name = methodDefinition;\r\n            }\r\n            else {\r\n                name = methodDefinition.name;\r\n            }\r\n            _this.agmFacade.subscribe2(name, JSON.stringify(parameters), function (sub) {\r\n                resolve(sub);\r\n            }, function (error) {\r\n                reject(error);\r\n            });\r\n        });\r\n        return promisify_1.default(promise, successCallback, errorCallback);\r\n    };\r\n    NativeAGM.prototype.servers = function (filter) {\r\n        var _this = this;\r\n        var jsonResult = this.agmFacade.servers(JSON.stringify(this.helpers.stringToObject(filter, \"name\")));\r\n        var parsedResult = this.helpers.agmParse(jsonResult);\r\n        return parsedResult.map(function (server) {\r\n            return _this.transformServerObject(server);\r\n        });\r\n    };\r\n    NativeAGM.prototype.methods = function (filter) {\r\n        var _this = this;\r\n        var jsonResult = this.agmFacade.methods(JSON.stringify(this.helpers.stringToObject(filter, \"name\")));\r\n        var parsedResult = this.helpers.agmParse(jsonResult);\r\n        return parsedResult.map(function (method) {\r\n            return _this.transformMethodObject(method);\r\n        });\r\n    };\r\n    NativeAGM.prototype.methodAdded = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.methodAdded(function (method) {\r\n            if (subscribed) {\r\n                callback(_this.transformMethodObject(method));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.methodRemoved = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.methodRemoved(function (method) {\r\n            if (subscribed) {\r\n                callback(_this.transformMethodObject(method));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverAdded = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverAdded(function (server) {\r\n            if (subscribed) {\r\n                callback(_this.transformServerObject(server));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverRemoved = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverRemoved(function (server) {\r\n            if (subscribed) {\r\n                callback(_this.transformServerObject(server));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverMethodAdded = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverMethodAdded(function (info) {\r\n            if (subscribed) {\r\n                callback({\r\n                    server: _this.transformServerObject(info.server),\r\n                    method: _this.transformMethodObject(info.method),\r\n                });\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverMethodRemoved = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverMethodRemoved(function (info) {\r\n            if (subscribed) {\r\n                callback({\r\n                    server: _this.transformServerObject(info.server),\r\n                    method: _this.transformMethodObject(info.method),\r\n                });\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.methodsForInstance = function (server) {\r\n        var jsonResult = this.agmFacade.methodsForInstance(JSON.stringify(server));\r\n        var methods = this.helpers.agmParse(jsonResult);\r\n        return methods.map(this.transformMethodObject);\r\n    };\r\n    NativeAGM.prototype.transformMethodObject = function (method) {\r\n        var _this = this;\r\n        if (!method) {\r\n            return undefined;\r\n        }\r\n        if (!method.displayName) {\r\n            method.displayName = method.display_name;\r\n        }\r\n        if (!method.objectTypes) {\r\n            method.objectTypes = method.object_types;\r\n        }\r\n        method.getServers = function () {\r\n            return _this.servers(method.name);\r\n        };\r\n        return method;\r\n    };\r\n    NativeAGM.prototype.transformServerObject = function (server) {\r\n        var _this = this;\r\n        if (!server) {\r\n            return undefined;\r\n        }\r\n        server.getMethods = function () {\r\n            return _this.methodsForInstance(server);\r\n        };\r\n        server.getStreams = function () {\r\n            return _this.methodsForInstance(server).filter(function (method) {\r\n                return method.supportsStreaming;\r\n            });\r\n        };\r\n        return server;\r\n    };\r\n    return NativeAGM;\r\n}());\r\nexports.NativeAGM = NativeAGM;\r\n//# sourceMappingURL=agm.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Helpers = (function () {\r\n    function Helpers(facade) {\r\n        this.facade = facade;\r\n        this.dateTimeIdentifier = facade.jsonValueDatePrefix;\r\n        this.lenOfIdentifier = this.dateTimeIdentifier.length;\r\n    }\r\n    Helpers.prototype.agmParse = function (str) {\r\n        var _this = this;\r\n        return JSON.parse(str, function (k, v) {\r\n            if (typeof v !== \"string\") {\r\n                return v;\r\n            }\r\n            if (v[0] !== _this.dateTimeIdentifier[0]) {\r\n                return v;\r\n            }\r\n            if (v.indexOf(_this.dateTimeIdentifier) !== 0) {\r\n                return v;\r\n            }\r\n            var unixTimestampMs = v.substr(_this.lenOfIdentifier);\r\n            return new Date(parseFloat(unixTimestampMs));\r\n        });\r\n    };\r\n    Helpers.prototype.targetArgToObject = function (target) {\r\n        var _this = this;\r\n        target = target || \"best\";\r\n        if (typeof target === \"string\") {\r\n            if (target !== \"all\" && target !== \"best\") {\r\n                throw new Error(target + \" is not a valid target. Valid targets are 'all' and 'best'\");\r\n            }\r\n            return { target: target };\r\n        }\r\n        else {\r\n            if (!Array.isArray(target)) {\r\n                target = [target];\r\n            }\r\n            target = target.map(function (e) {\r\n                return _this.convertInstanceToRegex(e);\r\n            });\r\n            return { serverFilter: target };\r\n        }\r\n    };\r\n    Helpers.prototype.convertInstanceToRegex = function (instance) {\r\n        var instanceConverted = {};\r\n        Object.keys(instance).forEach(function (key) {\r\n            var propValue = instance[key];\r\n            instanceConverted[key] = propValue;\r\n            if (typeof propValue === \"undefined\" || propValue === null) {\r\n                return;\r\n            }\r\n            if (typeof propValue === \"string\" && propValue !== \"\") {\r\n                instanceConverted[key] = \"^\" + instance[key] + \"$\";\r\n            }\r\n            else if (instance[key].constructor === RegExp) {\r\n                instanceConverted[key] = instance[key].source;\r\n            }\r\n            else {\r\n                instanceConverted[key] = instance[key];\r\n            }\r\n        });\r\n        return instanceConverted;\r\n    };\r\n    Helpers.prototype.validateMethodInfo = function (methodInfo) {\r\n        if (typeof methodInfo === \"undefined\") {\r\n            throw Error(\"methodInfo is required argument\");\r\n        }\r\n        if (!methodInfo.name) {\r\n            throw Error(\"methodInfo object must contain name property\");\r\n        }\r\n        if (methodInfo.objectTypes) {\r\n            methodInfo.object_types = methodInfo.objectTypes;\r\n        }\r\n        if (methodInfo.displayName) {\r\n            methodInfo.display_name = methodInfo.displayName;\r\n        }\r\n    };\r\n    Helpers.prototype.stringToObject = function (param, stringPropName) {\r\n        if (typeof param === \"string\") {\r\n            var obj = {};\r\n            obj[stringPropName] = param;\r\n            return obj;\r\n        }\r\n        return param;\r\n    };\r\n    return Helpers;\r\n}());\r\nexports.Helpers = Helpers;\r\n//# sourceMappingURL=helpers.js.map\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar agm_1 = __webpack_require__(31);\r\nvar helpers_1 = __webpack_require__(32);\r\nfunction default_1(configuration) {\r\n    var facade = window.htmlContainer.jsAgmFacade;\r\n    var cfgAsString = createConfig(configuration);\r\n    return new Promise(function (resolve, reject) {\r\n        var successInit = function (instance) {\r\n            var nativeAGM = new agm_1.NativeAGM(instance, new helpers_1.Helpers(facade), facade);\r\n            nativeAGM.create_stream = nativeAGM.createStream;\r\n            nativeAGM.methods_for_instance = nativeAGM.methodsForInstance;\r\n            nativeAGM.method_added = nativeAGM.methodAdded;\r\n            nativeAGM.method_removed = nativeAGM.methodRemoved;\r\n            nativeAGM.server_added = nativeAGM.serverAdded;\r\n            nativeAGM.server_removed = nativeAGM.serverRemoved;\r\n            nativeAGM.server_method_added = nativeAGM.serverMethodAdded;\r\n            nativeAGM.server_method_removed = nativeAGM.serverMethodRemoved;\r\n            resolve(nativeAGM);\r\n        };\r\n        if (facade.protocolVersion && facade.protocolVersion >= 5 && facade.initAsync) {\r\n            facade.initAsync(cfgAsString, successInit, function (err) {\r\n                reject(err);\r\n            });\r\n        }\r\n        else {\r\n            var instance = facade.init(cfgAsString);\r\n            successInit(instance);\r\n        }\r\n    });\r\n}\r\nexports.default = default_1;\r\nvar createConfig = function (configuration) {\r\n    if (configuration !== undefined && configuration.metrics !== undefined) {\r\n        configuration.metrics.metricsIdentity = configuration.metrics.identity;\r\n        var metricsConfig = {\r\n            metricsIdentity: configuration.metrics.metricsIdentity,\r\n            path: configuration.metrics.path,\r\n        };\r\n        configuration.metrics = metricsConfig;\r\n    }\r\n    delete configuration.logger;\r\n    return JSON.stringify(configuration);\r\n};\r\n//# sourceMappingURL=native.js.map\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = __webpack_require__(3);\r\nfunction createOwnInstance(userSubmittedProperties, resolvedIdentity, peerId) {\r\n    var document = global.document || global.process;\r\n    var instance = {\r\n        application: document.title + random_1.default(),\r\n        pid: Math.floor(Math.random() * 10000000000),\r\n    };\r\n    instance.peerId = peerId;\r\n    if (typeof userSubmittedProperties === \"object\") {\r\n        if (userSubmittedProperties.application !== undefined) {\r\n            instance.application = userSubmittedProperties.application;\r\n        }\r\n        instance.machine = userSubmittedProperties.machine;\r\n        instance.user = userSubmittedProperties.user;\r\n        instance.environment = userSubmittedProperties.environment;\r\n        instance.region = userSubmittedProperties.region;\r\n    }\r\n    if (typeof resolvedIdentity !== \"undefined\") {\r\n        instance.user = resolvedIdentity.user;\r\n        instance.instance = resolvedIdentity.instance;\r\n        instance.application = resolvedIdentity.application;\r\n        instance.pid = resolvedIdentity.process;\r\n        instance.machine = resolvedIdentity.machine;\r\n        instance.environment = resolvedIdentity.environment;\r\n        instance.region = resolvedIdentity.region;\r\n        instance.windowId = resolvedIdentity.windowId;\r\n    }\r\n    return instance;\r\n}\r\nexports.createOwnInstance = createOwnInstance;\r\n//# sourceMappingURL=instance.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar instance_1 = __webpack_require__(34);\r\nvar native_1 = __webpack_require__(33);\r\nvar factory_1 = __webpack_require__(38);\r\nvar factory_2 = __webpack_require__(43);\r\nvar agm_1 = __webpack_require__(27);\r\nvar repository_1 = __webpack_require__(30);\r\nvar repository_2 = __webpack_require__(47);\r\nexports.default = (function (configuration) {\r\n    if (!configuration.forceGW && configuration.gdVersion === 2) {\r\n        return native_1.default(configuration);\r\n    }\r\n    if (typeof configuration === \"undefined\") {\r\n        throw new Error(\"configuration is required\");\r\n    }\r\n    if (typeof configuration.connection === \"undefined\") {\r\n        throw new Error(\"configuration.connections is required\");\r\n    }\r\n    var connection = configuration.connection;\r\n    if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n        configuration.methodResponseTimeout = 3000;\r\n    }\r\n    if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n        configuration.waitTimeoutMs = 3000;\r\n    }\r\n    var myIdentity = connection.resolvedIdentity;\r\n    var myInstance = instance_1.createOwnInstance(configuration.instance, myIdentity, connection.peerId);\r\n    var clientRepository = new repository_1.default();\r\n    var serverRepository = new repository_2.default();\r\n    var protocolPromise;\r\n    var agmImpl;\r\n    if (connection.protocolVersion === 3) {\r\n        protocolPromise = factory_2.default(myInstance, connection, clientRepository, serverRepository, configuration, function () { return agmImpl; });\r\n    }\r\n    else {\r\n        protocolPromise = factory_1.default(myInstance, connection, clientRepository, serverRepository, configuration, function () { return agmImpl; });\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        protocolPromise.then(function (protocol) {\r\n            agmImpl = new agm_1.default(protocol, clientRepository, serverRepository, myInstance, configuration);\r\n            resolve(agmImpl);\r\n        }).catch(function (err) {\r\n            reject(err);\r\n        });\r\n    });\r\n});\r\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = __webpack_require__(3);\r\nvar helpers_1 = __webpack_require__(5);\r\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(configuration, instance, sendRequest, nextResponseSubject) {\r\n        this.configuration = configuration;\r\n        this.instance = instance;\r\n        this.sendRequest = sendRequest;\r\n        this.nextResponseSubject = nextResponseSubject;\r\n        this.subscriptionsList = {};\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (stream, args, targetServers, options, success, error) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: stream.getInfoForUser(),\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n                called_with: args,\r\n            });\r\n            return;\r\n        }\r\n        var subscriptionId = \"subscriptionId_\" + random_1.default();\r\n        var pendingSub = this.registerSubscription(subscriptionId, stream, args, success, error, options.methodResponseTimeout);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: stream.getInfoForUser(),\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n                called_with: args,\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var responseSubject = _this.nextResponseSubject();\r\n            var requestSubject = stream.info.requestSubject;\r\n            pendingSub.trackedServers.push({\r\n                server: undefined,\r\n                streamId: undefined,\r\n                streamSubjects: {\r\n                    global: undefined,\r\n                    private: undefined,\r\n                },\r\n                methodRequestSubject: requestSubject,\r\n                methodResponseSubject: responseSubject,\r\n            });\r\n            var message = {\r\n                EventStreamAction: 1,\r\n                MethodRequestSubject: requestSubject,\r\n                MethodResponseSubject: responseSubject,\r\n                Client: helpers_1.convertInstance(_this.instance),\r\n                Context: {\r\n                    ArgumentsJson: args,\r\n                    InvocationId: subscriptionId,\r\n                    MethodName: stream.info.name,\r\n                    ExecutionServer: target.server.info,\r\n                    Timeout: options.methodResponseTimeout,\r\n                },\r\n            };\r\n            _this.sendRequest(message);\r\n        });\r\n    };\r\n    ClientStreaming.prototype.processPublisherMsg = function (msg) {\r\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\r\n            return;\r\n        }\r\n        if (msg.EventStreamAction === 2) {\r\n            this.serverIsKickingASubscriber(msg);\r\n        }\r\n        else if (msg.EventStreamAction === 3) {\r\n            this.serverAcknowledgesGoodSubscription(msg);\r\n        }\r\n        else if (msg.EventStreamAction === 5) {\r\n            this.serverHasPushedSomeDataIntoTheStream(msg);\r\n        }\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subscriptionId, method, args, success, error, timeout) {\r\n        var _this = this;\r\n        this.subscriptionsList[subscriptionId] = {\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            arguments: args,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: [],\r\n                onClosed: [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n        };\r\n        this.subscriptionsList[subscriptionId].timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subscriptionId] === undefined) {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subscriptionId];\r\n            if (subscription.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: args,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \"ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subscriptionId];\r\n            }\r\n            else if (subscription.status === STATUS_SUBSCRIBED &&\r\n                subscription.trackedServers.length > 0) {\r\n                subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                    return (typeof server.streamId === \"string\" && server.streamId !== \"\");\r\n                });\r\n                subscription.timeoutId = undefined;\r\n                if (subscription.trackedServers.length === 0) {\r\n                    var closersCount = subscription.queued.closers.length;\r\n                    var closingServer_1 = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n                    subscription.handlers.onClosed.forEach(function (callback) {\r\n                        if (typeof callback === \"function\") {\r\n                            callback({\r\n                                message: ON_CLOSE_MSG_SERVER_INIT,\r\n                                requestArguments: subscription.arguments,\r\n                                server: closingServer_1,\r\n                                stream: subscription.method,\r\n                            });\r\n                        }\r\n                    });\r\n                    delete _this.subscriptionsList[subscriptionId];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return this.subscriptionsList[subscriptionId];\r\n    };\r\n    ClientStreaming.prototype.serverIsKickingASubscriber = function (msg) {\r\n        var _this = this;\r\n        var keys = Object.keys(this.subscriptionsList);\r\n        if (typeof msg.InvocationId === \"string\" && msg.InvocationId !== \"\") {\r\n            keys = keys.filter(function (k) { return k === msg.InvocationId; });\r\n        }\r\n        var deletionsList = [];\r\n        keys.forEach(function (key) {\r\n            if (typeof _this.subscriptionsList[key] !== \"object\") {\r\n                return;\r\n            }\r\n            _this.subscriptionsList[key].trackedServers = _this.subscriptionsList[key].trackedServers.filter(function (server) {\r\n                var isRejecting = (server.methodRequestSubject === msg.MethodRequestSubject && server.methodResponseSubject === msg.MethodResponseSubject);\r\n                var isKicking = (server.streamId === msg.StreamId &&\r\n                    (server.streamSubjects.global === msg.EventStreamSubject || server.streamSubjects.private === msg.EventStreamSubject));\r\n                var isRejectingOrKicking = isRejecting || isKicking;\r\n                return !isRejectingOrKicking;\r\n            });\r\n            if (_this.subscriptionsList[key].trackedServers.length === 0) {\r\n                deletionsList.push(key);\r\n            }\r\n        });\r\n        deletionsList.forEach(function (key) {\r\n            if (typeof _this.subscriptionsList[key] !== \"object\") {\r\n                return;\r\n            }\r\n            if (_this.subscriptionsList[key].status === STATUS_AWAITING_ACCEPT &&\r\n                typeof _this.subscriptionsList[key].timeoutId === \"number\") {\r\n                var reason = (typeof msg.ResultMessage === \"string\" && msg.ResultMessage !== \"\") ?\r\n                    ' Publisher said \"' + msg.ResultMessage + '\".' :\r\n                    \" No reason given.\";\r\n                var callArgs = typeof _this.subscriptionsList[key].arguments === \"object\" ?\r\n                    JSON.stringify(_this.subscriptionsList[key].arguments) :\r\n                    \"{}\";\r\n                _this.subscriptionsList[key].error(ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs);\r\n                clearTimeout(_this.subscriptionsList[key].timeoutId);\r\n            }\r\n            else {\r\n                _this.subscriptionsList[key].handlers.onClosed.forEach(function (callback) {\r\n                    if (typeof callback !== \"function\") {\r\n                        return;\r\n                    }\r\n                    callback({\r\n                        message: ON_CLOSE_MSG_SERVER_INIT,\r\n                        requestArguments: _this.subscriptionsList[key].arguments,\r\n                        server: helpers_1.convertInfoToInstance(msg.Server),\r\n                        stream: _this.subscriptionsList[key].method,\r\n                    });\r\n                });\r\n            }\r\n            delete _this.subscriptionsList[key];\r\n        });\r\n    };\r\n    ClientStreaming.prototype.serverAcknowledgesGoodSubscription = function (msg) {\r\n        var _this = this;\r\n        var subscriptionId = msg.InvocationId;\r\n        var subscription = this.subscriptionsList[subscriptionId];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        var acceptingServer = subscription.trackedServers.filter(function (server) {\r\n            return (server.methodRequestSubject === msg.MethodRequestSubject &&\r\n                server.methodResponseSubject === msg.MethodResponseSubject);\r\n        })[0];\r\n        if (typeof acceptingServer !== \"object\") {\r\n            return;\r\n        }\r\n        var isFirstResponse = (subscription.status === STATUS_AWAITING_ACCEPT);\r\n        subscription.status = STATUS_SUBSCRIBED;\r\n        var privateStreamSubject = this.generatePrivateStreamSubject(subscription.method.name);\r\n        if (typeof acceptingServer.streamId === \"string\" && acceptingServer.streamId !== \"\") {\r\n            return;\r\n        }\r\n        acceptingServer.server = helpers_1.convertInfoToInstance(msg.Server);\r\n        acceptingServer.streamId = msg.StreamId;\r\n        acceptingServer.streamSubjects.global = msg.EventStreamSubject;\r\n        acceptingServer.streamSubjects.private = privateStreamSubject;\r\n        var confirmatoryRequest = {\r\n            EventStreamAction: 3,\r\n            EventStreamSubject: privateStreamSubject,\r\n            StreamId: msg.StreamId,\r\n            MethodRequestSubject: msg.MethodRequestSubject,\r\n            MethodResponseSubject: acceptingServer.methodResponseSubject,\r\n            Client: helpers_1.convertInstance(this.instance),\r\n            Context: {\r\n                ArgumentsJson: subscription.arguments,\r\n                MethodName: subscription.method.name,\r\n            },\r\n        };\r\n        this.sendRequest(confirmatoryRequest);\r\n        if (isFirstResponse) {\r\n            subscription.success({\r\n                onData: function (dataCallback) {\r\n                    if (typeof dataCallback !== \"function\") {\r\n                        throw new TypeError(\"The data callback must be a function.\");\r\n                    }\r\n                    this.handlers.onData.push(dataCallback);\r\n                    if (this.handlers.onData.length === 1 && this.queued.data.length > 0) {\r\n                        this.queued.data.forEach(function (dataItem) {\r\n                            dataCallback(dataItem);\r\n                        });\r\n                    }\r\n                }.bind(subscription),\r\n                onClosed: function (closedCallback) {\r\n                    if (typeof closedCallback !== \"function\") {\r\n                        throw new TypeError(\"The callback must be a function.\");\r\n                    }\r\n                    this.handlers.onClosed.push(closedCallback);\r\n                }.bind(subscription),\r\n                onFailed: function () { },\r\n                close: function () { return _this.closeSubscription(subscription, subscriptionId); },\r\n                requestArguments: subscription.arguments,\r\n                serverInstance: helpers_1.convertInfoToInstance(msg.Server),\r\n                stream: subscription.method,\r\n            });\r\n        }\r\n    };\r\n    ClientStreaming.prototype.serverHasPushedSomeDataIntoTheStream = function (msg) {\r\n        var _loop_1 = function (key) {\r\n            if (this_1.subscriptionsList.hasOwnProperty(key) && typeof this_1.subscriptionsList[key] === \"object\") {\r\n                var isPrivateData = void 0;\r\n                var trackedServersFound = this_1.subscriptionsList[key].trackedServers.filter(function (ls) {\r\n                    return (ls.streamId === msg.StreamId &&\r\n                        (ls.streamSubjects.global === msg.EventStreamSubject ||\r\n                            ls.streamSubjects.private === msg.EventStreamSubject));\r\n                });\r\n                if (trackedServersFound.length === 0) {\r\n                    isPrivateData = undefined;\r\n                }\r\n                else if (trackedServersFound[0].streamSubjects.global === msg.EventStreamSubject) {\r\n                    isPrivateData = false;\r\n                }\r\n                else if (trackedServersFound[0].streamSubjects.private === msg.EventStreamSubject) {\r\n                    isPrivateData = true;\r\n                }\r\n                if (isPrivateData !== undefined) {\r\n                    var receivedStreamData_1 = {\r\n                        data: msg.ResultContextJson,\r\n                        server: helpers_1.convertInfoToInstance(msg.Server),\r\n                        requestArguments: this_1.subscriptionsList[key].arguments || {},\r\n                        message: msg.ResultMessage,\r\n                        private: isPrivateData,\r\n                    };\r\n                    var onDataHandlers = this_1.subscriptionsList[key].handlers.onData;\r\n                    var queuedData = this_1.subscriptionsList[key].queued.data;\r\n                    if (Array.isArray(onDataHandlers)) {\r\n                        if (onDataHandlers.length > 0) {\r\n                            onDataHandlers.forEach(function (callback) {\r\n                                if (typeof callback === \"function\") {\r\n                                    callback(receivedStreamData_1);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            queuedData.push(receivedStreamData_1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var key in this.subscriptionsList) {\r\n            _loop_1(key);\r\n        }\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (sub, subId) {\r\n        var _this = this;\r\n        var responseSubject = this.nextResponseSubject();\r\n        sub.trackedServers.forEach(function (server) {\r\n            _this.sendRequest({\r\n                EventStreamAction: 2,\r\n                Client: helpers_1.convertInstance(_this.instance),\r\n                MethodRequestSubject: server.methodRequestSubject,\r\n                MethodResponseSubject: responseSubject,\r\n                StreamId: server.streamId,\r\n                EventStreamSubject: server.streamSubjects.private,\r\n            });\r\n        });\r\n        sub.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback === \"function\") {\r\n                callback({\r\n                    message: ON_CLOSE_MSG_CLIENT_INIT,\r\n                    requestArguments: sub.arguments || {},\r\n                    server: sub.trackedServers[sub.trackedServers.length - 1].server,\r\n                    stream: sub.method,\r\n                });\r\n            }\r\n        });\r\n        delete this.subscriptionsList[subId];\r\n    };\r\n    ClientStreaming.prototype.generatePrivateStreamSubject = function (methodName) {\r\n        var appInfo = helpers_1.convertInstance(this.instance);\r\n        return \"ESSpriv-jsb_\" +\r\n            appInfo.ApplicationName +\r\n            \"_on_\" +\r\n            methodName +\r\n            \"_\" +\r\n            random_1.default();\r\n    };\r\n    return ClientStreaming;\r\n}());\r\nexports.default = ClientStreaming;\r\n//# sourceMappingURL=client-streaming.js.map\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = __webpack_require__(3);\r\nvar callback_registry_1 = __webpack_require__(1);\r\nvar client_streaming_1 = __webpack_require__(36);\r\nvar helpers_1 = __webpack_require__(5);\r\nvar numberMissingHeartbeatsToRemove = 3;\r\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(connection, instance, configuration, repository) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n        this.repository = repository;\r\n        this.respCounter = 0;\r\n        this.callbacks = callback_registry_1.default();\r\n        this.timers = {};\r\n        this.timers = {};\r\n        this.streaming = new client_streaming_1.default(configuration, instance, function (msg) {\r\n            connection.send(\"agm\", \"MethodInvocationRequestMessage\", msg);\r\n        }, function () { return _this.nextResponseSubject(); });\r\n        this.listenForEvents();\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, args, targetServers, options, success, error) {\r\n        this.streaming.subscribe(stream, args, targetServers, options, success, error);\r\n    };\r\n    ClientProtocol.prototype.onInvocationResult = function (callback) {\r\n        this.callbacks.add(\"onResult\", callback);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target, stuff) {\r\n        var methodInfo = method.info;\r\n        var message = {\r\n            MethodRequestSubject: methodInfo.requestSubject,\r\n            MethodResponseSubject: this.nextResponseSubject(),\r\n            Client: helpers_1.convertInstance(this.instance),\r\n            Context: {\r\n                ArgumentsJson: args,\r\n                InvocationId: id,\r\n                MethodName: methodInfo.name,\r\n                ExecutionServer: target.info,\r\n                Timeout: stuff.methodResponseTimeoutMs,\r\n            },\r\n        };\r\n        this.connection.send(\"agm\", \"MethodInvocationRequestMessage\", message);\r\n    };\r\n    ClientProtocol.prototype.nextResponseSubject = function () {\r\n        return \"resp_\" + (this.respCounter++) + \"_\" + random_1.default();\r\n    };\r\n    ClientProtocol.prototype.createServerInfo = function (instance) {\r\n        return {\r\n            machine: instance.MachineName,\r\n            pid: instance.ProcessId,\r\n            user: instance.UserName,\r\n            application: instance.ApplicationName,\r\n            environment: instance.Environment,\r\n            region: instance.Region,\r\n        };\r\n    };\r\n    ClientProtocol.prototype.createMethod = function (methodInfo) {\r\n        var method = methodInfo.Method;\r\n        return {\r\n            name: method.Name,\r\n            accepts: method.InputSignature,\r\n            returns: method.ResultSignature,\r\n            requestSubject: methodInfo.MethodRequestSubject,\r\n            description: method.Description,\r\n            displayName: method.DisplayName,\r\n            version: method.Version,\r\n            objectTypes: method.ObjectTypeRestrictions,\r\n            supportsStreaming: helpers_1.isStreamingFlagSet(method.Flags),\r\n        };\r\n    };\r\n    ClientProtocol.prototype.createServerId = function (serverInfo) {\r\n        if (serverInfo === undefined) {\r\n            return undefined;\r\n        }\r\n        return [serverInfo.application,\r\n            serverInfo.user,\r\n            serverInfo.machine,\r\n            serverInfo.started,\r\n            serverInfo.pid].join(\"/\").toLowerCase();\r\n    };\r\n    ClientProtocol.prototype.processServerPresence = function (presence, isPresence) {\r\n        var instance = presence.Instance;\r\n        var serverInfo = this.createServerInfo(instance);\r\n        var serverId = this.createServerId(serverInfo);\r\n        if (isPresence) {\r\n            serverId = this.repository.addServer(serverInfo, serverId);\r\n            if (presence.PublishingInterval) {\r\n                this.scheduleTimeout(serverId, presence.PublishingInterval);\r\n            }\r\n        }\r\n        else if (presence.PublishingInterval === 0) {\r\n            var server = this.repository.getServerById(serverId);\r\n            if (typeof server !== \"undefined\") {\r\n                this.repository.removeServerById(serverId);\r\n            }\r\n        }\r\n        if (presence.MethodDefinitions !== undefined) {\r\n            this.updateServerMethods(serverId, presence.MethodDefinitions);\r\n        }\r\n    };\r\n    ClientProtocol.prototype.scheduleTimeout = function (serverId, duration) {\r\n        var _this = this;\r\n        if (duration === -1) {\r\n            return;\r\n        }\r\n        var timer = this.timers[serverId];\r\n        if (timer !== undefined) {\r\n            clearTimeout(timer);\r\n        }\r\n        this.timers[serverId] = setTimeout(function () {\r\n            _this.repository.removeServerById(serverId);\r\n        }, duration * (numberMissingHeartbeatsToRemove + 1));\r\n    };\r\n    ClientProtocol.prototype.updateServerMethods = function (serverId, newMethods) {\r\n        var _this = this;\r\n        var oldMethods = this.repository.getServerMethodsById(serverId);\r\n        var newMethodsReduced = newMethods\r\n            .map(function (nm) { return _this.createMethod(nm); })\r\n            .reduce(function (obj, method) {\r\n            var methodId = _this.repository.createMethodId(method);\r\n            obj[methodId] = method;\r\n            return obj;\r\n        }, {});\r\n        oldMethods.forEach(function (method) {\r\n            if (newMethodsReduced[method.id] === undefined) {\r\n                _this.repository.removeServerMethod(serverId, method.id);\r\n            }\r\n            else {\r\n                delete newMethodsReduced[method.id];\r\n            }\r\n        });\r\n        Object.keys(newMethodsReduced).forEach(function (key) {\r\n            var method = newMethodsReduced[key];\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleInvokeResultMessage = function (message) {\r\n        if (message && message.EventStreamAction && message.EventStreamAction !== 0) {\r\n            this.streaming.processPublisherMsg(message);\r\n            return;\r\n        }\r\n        var server = message.Server ? this.createServerInfo(message.Server) : undefined;\r\n        var result = message.ResultContextJson;\r\n        if (result && Object.keys(result).length === 0) {\r\n            result = undefined;\r\n        }\r\n        this.callbacks.execute(\"onResult\", message.InvocationId, server, message.Status, result, message.ResultMessage);\r\n    };\r\n    ClientProtocol.prototype.listenForEvents = function () {\r\n        var _this = this;\r\n        this.connection.on(\"agm\", \"ServerPresenceMessage\", function (msg) {\r\n            _this.processServerPresence(msg, true);\r\n        });\r\n        this.connection.on(\"agm\", \"ServerHeartbeatMessage\", function (msg) {\r\n            _this.processServerPresence(msg, false);\r\n        });\r\n        this.connection.on(\"agm\", \"MethodInvocationResultMessage\", function (msg) {\r\n            _this.handleInvokeResultMessage(msg);\r\n        });\r\n    };\r\n    return ClientProtocol;\r\n}());\r\nexports.default = ClientProtocol;\r\n//# sourceMappingURL=client.js.map\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar server_1 = __webpack_require__(40);\r\nvar client_1 = __webpack_require__(37);\r\nfunction default_1(instance, connection, clientRepository, serverRepository, configuration, getAGM) {\r\n    var unsubscribe = connection.on(\"agm\", \"Instance\", function (newInstance) {\r\n        getAGM().updateInstance(newInstance);\r\n        connection.off(unsubscribe);\r\n    });\r\n    var server = new server_1.default(connection, instance, configuration, serverRepository);\r\n    var client = new client_1.default(connection, instance, configuration, clientRepository);\r\n    return new Promise(function (resolve) {\r\n        resolve({\r\n            server: server,\r\n            client: client,\r\n        });\r\n    });\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=factory.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = __webpack_require__(3);\r\nvar helpers_1 = __webpack_require__(5);\r\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(connection, instance) {\r\n        this.connection = connection;\r\n        this.instance = instance;\r\n    }\r\n    ServerStreaming.prototype.isStreamMsg = function (msg, method) {\r\n        return (msg &&\r\n            msg.EventStreamAction &&\r\n            msg.EventStreamAction !== 0 &&\r\n            typeof method === \"object\" &&\r\n            method.definition.supportsStreaming === true);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = null;\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            return (branches === null || (Boolean(br) && typeof br.key === \"string\" && branches.indexOf(br.key) >= 0));\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        var server = helpers_1.convertInstance(this.instance);\r\n        streamIdList.forEach(function (streamId) {\r\n            _this.sendResult({\r\n                EventStreamAction: 5,\r\n                EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n                MethodName: streamingMethod.protocolState.method.Method.Name,\r\n                MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n                ResultContextJson: data,\r\n                Server: server,\r\n                StreamId: streamId,\r\n            });\r\n        });\r\n    };\r\n    ServerStreaming.prototype.closeAllSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        var streamList = streamingMethod.protocolState.branchKeyToStreamIdMap;\r\n        if (typeof branchKey === \"string\") {\r\n            streamList = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (br) {\r\n                return (typeof br === \"object\" && br.key === branchKey);\r\n            });\r\n        }\r\n        streamList.forEach(function (br) {\r\n            var streamId = br.streamId;\r\n            _this.sendResult({\r\n                EventStreamAction: 2,\r\n                EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n                MethodName: streamingMethod.protocolState.method.Method.Name,\r\n                MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n                Server: helpers_1.convertInstance(_this.instance),\r\n                StreamId: streamId,\r\n                Status: 0,\r\n            });\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        return this.getUniqueBranchNames(streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = streamingMethod.protocolState.subscriptions;\r\n        }\r\n        else {\r\n            subscriptions = streamingMethod.protocolState.subscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (handlerFunc) {\r\n        if (typeof handlerFunc !== \"function\") {\r\n            return;\r\n        }\r\n        this.subAddedHandler = handlerFunc;\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (handlerFunc) {\r\n        if (typeof handlerFunc !== \"function\") {\r\n            return;\r\n        }\r\n        this.subRemovedHandler = handlerFunc;\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (handlerFunc) {\r\n        if (typeof handlerFunc !== \"function\") {\r\n            return;\r\n        }\r\n        this.requestHandler = handlerFunc;\r\n    };\r\n    ServerStreaming.prototype.generateNewStreamId = function (streamingMethodName) {\r\n        var appInfo = helpers_1.convertInstance(this.instance);\r\n        return \"streamId-jsb_of_\" +\r\n            streamingMethodName +\r\n            \"__by_\" +\r\n            appInfo.ApplicationName +\r\n            \"_\" +\r\n            random_1.default();\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        var msg = requestContext.msg;\r\n        this.sendResult({\r\n            EventStreamAction: 2,\r\n            EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n            MethodName: streamingMethod.protocolState.method.Method.Name,\r\n            MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n            MethodResponseSubject: msg.MethodResponseSubject,\r\n            MethodVersion: streamingMethod.protocolState.method.Method.Version,\r\n            ResultMessage: reason,\r\n            Server: helpers_1.convertInstance(this.instance),\r\n            StreamId: \"default_rejection_streamId\",\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (streamingMethod, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this.sendResult({\r\n            EventStreamAction: 5,\r\n            EventStreamSubject: subscription.privateEventStreamSubject,\r\n            MethodName: streamingMethod.protocolState.method.Method.Name,\r\n            MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n            ResultContextJson: data,\r\n            Server: helpers_1.convertInstance(this.instance),\r\n            StreamId: subscription.streamId,\r\n        });\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        this.closeIndividualSubscription(streamingMethod, subscription.streamId, subscription.privateEventStreamSubject, true);\r\n    };\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var msg = requestContext.msg;\r\n        this.sendResult({\r\n            EventStreamAction: 3,\r\n            EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n            InvocationId: msg.Context.InvocationId,\r\n            MethodName: streamingMethod.protocolState.method.Method.Name,\r\n            MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n            MethodResponseSubject: msg.MethodResponseSubject,\r\n            MethodVersion: streamingMethod.protocolState.method.Method.Version,\r\n            ResultMessage: \"Accepted\",\r\n            Server: helpers_1.convertInstance(this.instance),\r\n            StreamId: streamId,\r\n        });\r\n    };\r\n    ServerStreaming.prototype.processSubscriberMsg = function (msg, streamingMethod) {\r\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\r\n            return;\r\n        }\r\n        if (msg.EventStreamAction === 1) {\r\n            this.clientWishesToSubscribe(msg, streamingMethod);\r\n        }\r\n        else if (msg.EventStreamAction === 2) {\r\n            this.clientWishesToUnsubscribe(msg, streamingMethod);\r\n        }\r\n        else if (msg.EventStreamAction === 3) {\r\n            this.clientAcknowledgesItDidSubscribe(msg, streamingMethod);\r\n        }\r\n        else if (msg.EventStreamAction === 4) {\r\n            this.clientPerSubHeartbeat(msg);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.sendResult = function (message) {\r\n        if (typeof message !== \"object\") {\r\n            throw new Error(\"Invalid message.\");\r\n        }\r\n        if (typeof message.Status !== \"number\") {\r\n            message.Status = 0;\r\n        }\r\n        this.connection.send(\"agm\", \"MethodInvocationResultMessage\", message);\r\n    };\r\n    ServerStreaming.prototype.clientWishesToSubscribe = function (msg, streamingMethod) {\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.Context.ArgumentsJson || {},\r\n            instance: helpers_1.convertInfoToInstance(msg.Client),\r\n        };\r\n        if (typeof this.requestHandler === \"function\") {\r\n            this.requestHandler(requestContext, streamingMethod);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.clientWishesToUnsubscribe = function (msg, streamingMethod) {\r\n        if (!(streamingMethod &&\r\n            Array.isArray(streamingMethod.protocolState.subscriptions) &&\r\n            streamingMethod.protocolState.subscriptions.length > 0)) {\r\n            return;\r\n        }\r\n        this.closeIndividualSubscription(streamingMethod, msg.StreamId, msg.EventStreamSubject, false);\r\n    };\r\n    ServerStreaming.prototype.clientAcknowledgesItDidSubscribe = function (msg, streamingMethod) {\r\n        if (typeof msg.StreamId !== \"string\" || msg.StreamId === \"\") {\r\n            return;\r\n        }\r\n        var branchKey = this.getBranchKey(streamingMethod, msg.StreamId);\r\n        if (typeof branchKey !== \"string\") {\r\n            return;\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.subscriptions)) {\r\n            return;\r\n        }\r\n        var subscription = {\r\n            branchKey: branchKey,\r\n            instance: helpers_1.convertInfoToInstance(msg.Client),\r\n            arguments: msg.Context.ArgumentsJson,\r\n            streamId: msg.StreamId,\r\n            privateEventStreamSubject: msg.EventStreamSubject,\r\n            methodResponseSubject: msg.MethodResponseSubject,\r\n        };\r\n        streamingMethod.protocolState.subscriptions.push(subscription);\r\n        if (typeof this.subAddedHandler === \"function\") {\r\n            this.subAddedHandler(subscription, streamingMethod);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.clientPerSubHeartbeat = function (msg) {\r\n    };\r\n    ServerStreaming.prototype.getBranchKey = function (streamingMethod, streamId) {\r\n        if (typeof streamId !== \"string\" || typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        var needle = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.streamId === streamId;\r\n        })[0];\r\n        if (typeof needle !== \"object\" || typeof needle.key !== \"string\") {\r\n            return;\r\n        }\r\n        return needle.key;\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.generateNewStreamId(streamingMethod.protocolState.method.Method.Name);\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    ServerStreaming.prototype.closeIndividualSubscription = function (streamingMethod, streamId, privateEventStreamSubject, sendKickMessage) {\r\n        var subscription = streamingMethod.protocolState.subscriptions.filter(function (subItem) {\r\n            return (subItem.privateEventStreamSubject === privateEventStreamSubject &&\r\n                subItem.streamId === streamId);\r\n        })[0];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        var initialLength = streamingMethod.protocolState.subscriptions.length;\r\n        streamingMethod.protocolState.subscriptions = streamingMethod.protocolState.subscriptions.filter(function (subItem) {\r\n            return !(subItem.privateEventStreamSubject === subscription.privateEventStreamSubject &&\r\n                subItem.streamId === subscription.streamId);\r\n        });\r\n        var filteredLength = streamingMethod.protocolState.subscriptions.length;\r\n        if (filteredLength !== (initialLength - 1)) {\r\n            return;\r\n        }\r\n        if (sendKickMessage === true) {\r\n            this.sendResult({\r\n                EventStreamAction: 2,\r\n                EventStreamSubject: privateEventStreamSubject,\r\n                MethodName: streamingMethod.protocolState.method.Method.Name,\r\n                MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n                MethodResponseSubject: subscription.methodResponseSubject,\r\n                MethodVersion: streamingMethod.protocolState.method.Method.Version,\r\n                ResponseContextJson: {},\r\n                Server: helpers_1.convertInstance(this.instance),\r\n                StreamId: subscription.streamId,\r\n                Status: 0,\r\n            });\r\n        }\r\n        if (typeof this.subRemovedHandler === \"function\") {\r\n            this.subRemovedHandler(subscription, streamingMethod);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.getUniqueBranchNames = function (streamingMethod) {\r\n        var keysWithDuplicates = streamingMethod.protocolState.subscriptions.map(function (sub) {\r\n            var result = null;\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                result = sub.branchKey;\r\n            }\r\n            return result;\r\n        });\r\n        var seen = [];\r\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\r\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\r\n                return false;\r\n            }\r\n            seen.push(bKey);\r\n            return true;\r\n        });\r\n        return branchArray;\r\n    };\r\n    return ServerStreaming;\r\n}());\r\nexports.default = ServerStreaming;\r\n//# sourceMappingURL=server-streaming.js.map\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = __webpack_require__(3);\r\nvar server_streaming_1 = __webpack_require__(39);\r\nvar callback_registry_1 = __webpack_require__(1);\r\nvar helpers_1 = __webpack_require__(5);\r\nvar HeartbeatInterval = 5000;\r\nvar PresenceInterval = 10000;\r\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(connection, instance, configuration, serverRepository) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.instance = instance;\r\n        this.serverRepository = serverRepository;\r\n        this.invocationMessagesMap = {};\r\n        this.reqCounter = 0;\r\n        this.callbacks = callback_registry_1.default();\r\n        this.streaming = new server_streaming_1.default(connection, instance);\r\n        connection.on(\"agm\", \"MethodInvocationRequestMessage\", function (msg) { return _this.handleMethodInvocationMessage(msg); });\r\n        connection.disconnected(this.stopTimers.bind(this));\r\n        this.sendHeartbeat();\r\n        if (this.heartbeatTimer === undefined) {\r\n            this.heartbeatTimer = setInterval(function () { return _this.sendHeartbeat(); }, HeartbeatInterval);\r\n        }\r\n        this.getBranchList = this.streaming.getBranchList;\r\n        this.getSubscriptionList = this.streaming.getSubscriptionList;\r\n        this.closeAllSubscriptions = this.streaming.closeAllSubscriptions;\r\n        this.closeSingleSubscription = this.streaming.closeSingleSubscription;\r\n        this.pushDataToSingle = this.streaming.pushDataToSingle;\r\n        this.pushData = this.streaming.pushData;\r\n        this.onSubRequest = this.streaming.onSubRequest;\r\n        this.acceptRequestOnBranch = this.streaming.acceptRequestOnBranch;\r\n        this.rejectRequest = this.streaming.rejectRequest;\r\n        this.onSubAdded = this.streaming.onSubAdded;\r\n        this.onSubRemoved = this.streaming.onSubRemoved;\r\n    }\r\n    ServerProtocol.prototype.stopTimers = function () {\r\n        clearInterval(this.presenceTimer);\r\n        clearInterval(this.heartbeatTimer);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (info) {\r\n        this.sendPresence();\r\n        return Promise.resolve();\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, success, error) {\r\n        var reqSubj = this.nextRequestSubject();\r\n        repoMethod.protocolState.method = this.createNewMethodMessage(repoMethod.definition, reqSubj, false);\r\n        this.announceNewMethod();\r\n        success();\r\n        return Promise.resolve();\r\n    };\r\n    ServerProtocol.prototype.createStream = function (repoMethod, success, error) {\r\n        var reqSubj = this.nextRequestSubject();\r\n        var streamConverted = this.createNewMethodMessage(repoMethod.definition, reqSubj, true);\r\n        repoMethod.protocolState.method = streamConverted;\r\n        repoMethod.protocolState.globalEventStreamSubject = repoMethod.definition.name + \".jsStream.\" + random_1.default();\r\n        repoMethod.protocolState.subscriptions = [];\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        this.announceNewMethod();\r\n        success();\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (executedMethod, invocationId, err, result) {\r\n        var message = this.invocationMessagesMap[invocationId];\r\n        if (!message) {\r\n            return;\r\n        }\r\n        if (message.MethodResponseSubject === \"null\") {\r\n            return;\r\n        }\r\n        if (executedMethod === undefined) {\r\n            return;\r\n        }\r\n        var resultMessage = {\r\n            MethodRequestSubject: message.MethodRequestSubject,\r\n            MethodResponseSubject: message.MethodResponseSubject,\r\n            MethodName: executedMethod.protocolState.method.Method.Name,\r\n            InvocationId: invocationId,\r\n            ResultContextJson: result,\r\n            Server: helpers_1.convertInstance(this.instance),\r\n            ResultMessage: err,\r\n            Status: err ? 1 : 0,\r\n        };\r\n        this.connection.send(\"agm\", \"MethodInvocationResultMessage\", resultMessage);\r\n        delete this.invocationMessagesMap[invocationId];\r\n    };\r\n    ServerProtocol.prototype.nextRequestSubject = function () {\r\n        return \"req_\" + (this.reqCounter++) + \"_\" + random_1.default();\r\n    };\r\n    ServerProtocol.prototype.sendHeartbeat = function () {\r\n        this.connection.send(\"agm\", \"ServerHeartbeatMessage\", this.constructHeartbeat());\r\n    };\r\n    ServerProtocol.prototype.constructHeartbeat = function () {\r\n        return {\r\n            PublishingInterval: HeartbeatInterval,\r\n            Instance: helpers_1.convertInstance(this.instance),\r\n        };\r\n    };\r\n    ServerProtocol.prototype.constructPresence = function () {\r\n        var methods = this.serverRepository.getList();\r\n        return {\r\n            PublishingInterval: PresenceInterval,\r\n            Instance: helpers_1.convertInstance(this.instance),\r\n            MethodDefinitions: methods.map(function (m) { return m.protocolState.method; }),\r\n        };\r\n    };\r\n    ServerProtocol.prototype.sendPresence = function () {\r\n        this.connection.send(\"agm\", \"ServerPresenceMessage\", this.constructPresence());\r\n    };\r\n    ServerProtocol.prototype.announceNewMethod = function () {\r\n        var _this = this;\r\n        this.sendPresence();\r\n        if (this.presenceTimer === undefined) {\r\n            this.presenceTimer = setInterval(function () { return _this.sendPresence(); }, PresenceInterval);\r\n        }\r\n    };\r\n    ServerProtocol.prototype.handleMethodInvocationMessage = function (message) {\r\n        var subject = message.MethodRequestSubject;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.protocolState.method.MethodRequestSubject === subject;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        if (this.streaming.isStreamMsg(message, method)) {\r\n            this.streaming.processSubscriberMsg(message, method);\r\n            return;\r\n        }\r\n        var invocationId = message.Context.InvocationId;\r\n        this.invocationMessagesMap[invocationId] = message;\r\n        var invocationArgs = {\r\n            args: message.Context.ArgumentsJson,\r\n            instance: helpers_1.convertInfoToInstance(message.Client),\r\n        };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    ServerProtocol.prototype.createNewMethodMessage = function (methodIdentifier, subject, stream) {\r\n        if (typeof methodIdentifier === \"string\") {\r\n            methodIdentifier = { name: methodIdentifier };\r\n        }\r\n        if (typeof methodIdentifier.version !== \"number\") {\r\n            methodIdentifier.version = 0;\r\n        }\r\n        return {\r\n            Method: {\r\n                Name: methodIdentifier.name,\r\n                InputSignature: methodIdentifier.accepts,\r\n                ResultSignature: methodIdentifier.returns,\r\n                Description: methodIdentifier.description,\r\n                DisplayName: methodIdentifier.displayName,\r\n                Version: methodIdentifier.version,\r\n                ObjectTypeRestrictions: methodIdentifier.objectTypes,\r\n                Flags: stream ? 32 : undefined,\r\n            },\r\n            MethodRequestSubject: subject,\r\n        };\r\n    };\r\n    return ServerProtocol;\r\n}());\r\nexports.default = ServerProtocol;\r\n//# sourceMappingURL=server.js.map\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(instance, session, repository, logger) {\r\n        var _this = this;\r\n        this.instance = instance;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.arguments,\r\n                        method: pendingSub.method.getInfoForUser(),\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n            pendingSub.status = STATUS_SUBSCRIBED;\r\n            var that = _this;\r\n            if (isFirstResponse) {\r\n                pendingSub.success({\r\n                    onData: function (dataCallback) {\r\n                        if (typeof dataCallback !== \"function\") {\r\n                            throw new TypeError(\"The data callback must be a function.\");\r\n                        }\r\n                        pendingSub.handlers.onData.push(dataCallback);\r\n                        if (pendingSub.handlers.onData.length === 1 && pendingSub.queued.data.length > 0) {\r\n                            pendingSub.queued.data.forEach(function (dataItem) {\r\n                                dataCallback(dataItem);\r\n                            });\r\n                        }\r\n                    },\r\n                    onClosed: function (closedCallback) {\r\n                        if (typeof closedCallback !== \"function\") {\r\n                            throw new TypeError(\"The callback must be a function.\");\r\n                        }\r\n                        pendingSub.handlers.onClosed.push(closedCallback);\r\n                    },\r\n                    onFailed: function () {\r\n                    },\r\n                    close: function () { return that.closeSubscription(subLocalKey); },\r\n                    requestArguments: pendingSub.arguments,\r\n                    serverInstance: that.repository.getServerById(serverId).getInfoForUser(),\r\n                    stream: pendingSub.method.info,\r\n                });\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob && msg.snapshot;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).getInfoForUser(),\r\n                    requestArguments: subscription.arguments || {},\r\n                    message: null,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, argumentObj, targetServers, stuff, success, error) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod.getInfoForUser(),\r\n                called_with: argumentObj,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, argumentObj, success, error, stuff.methodResponseTimeout);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod.getInfoForUser(),\r\n                called_with: argumentObj,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: streamingMethod.protocolState.id,\r\n                arguments_kv: argumentObj,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, args, success, error, timeout) {\r\n        var _this = this;\r\n        this.subscriptionsList[subLocalKey] = {\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            arguments: args,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: [],\r\n                onClosed: [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n        };\r\n        this.subscriptionsList[subLocalKey].timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method.getInfoForUser(),\r\n                    called_with: args,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return this.subscriptionsList[subLocalKey];\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer = null;\r\n        if (typeof closingServerId === \"number\") {\r\n            closingServer = this.repository.getServerById(closingServerId).getInfoForUser();\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.arguments,\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\r\nexports.default = ClientStreaming;\r\n//# sourceMappingURL=client-streaming.js.map\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(1);\r\nvar client_streaming_1 = __webpack_require__(41);\r\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(instance, session, repository, logger) {\r\n        var _this = this;\r\n        this.instance = instance;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.callbacks = callback_registry_1.default();\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new client_streaming_1.default(instance, session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, args, targetServers, options, success, error) {\r\n        this.streaming.subscribe(stream, args, targetServers, options, success, error);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.protocolState.id;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.onInvocationResult = function (callback) {\r\n        this.callbacks.add(\"onResult\", callback);\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            var methodInfo = {\r\n                name: method.name,\r\n                displayName: method.display_name,\r\n                description: method.description,\r\n                version: method.version,\r\n                objectTypes: method.object_types || [],\r\n                accepts: method.input_signature,\r\n                returns: method.result_signature,\r\n                supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            };\r\n            _this.repository.addServerMethod(serverId, methodInfo, { id: method.id });\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.protocolState.id) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        this.callbacks.execute(\"onResult\", invocationId, server.getInfoForUser(), 0, result, \"\");\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        var invocationId = msg._tag.invocationId;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        var message = msg.reason;\r\n        var context = msg.context;\r\n        this.callbacks.execute(\"onResult\", invocationId, server.getInfoForUser(), 1, context, message);\r\n    };\r\n    return ClientProtocol;\r\n}());\r\nexports.default = ClientProtocol;\r\n//# sourceMappingURL=client.js.map\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar server_1 = __webpack_require__(45);\r\nvar client_1 = __webpack_require__(42);\r\nfunction default_1(instance, connection, clientRepository, serverRepository, libConfig, getAGM) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", logger.subLogger(\"domain\"), [\"subscribed\"]);\r\n    var server = new server_1.default(instance, session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new client_1.default(instance, session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n        clientRepository.reset();\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        var registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n        registeredMethods.forEach(function (method) {\r\n            var def = method.definition;\r\n            if (method.theFunction.userCallback) {\r\n                getAGM().register(def, method.theFunction.userCallback);\r\n            }\r\n            else if (method.theFunction.userCallbackAsync) {\r\n                getAGM().registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        });\r\n    }\r\n    function handleInitialJoin() {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        resolveReadyPromise({\r\n            client: client,\r\n            server: server,\r\n        });\r\n        resolveReadyPromise = undefined;\r\n    }\r\n    session.onJoined(function (reconnect) {\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=factory.js.map\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(1);\r\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(instance, session, repository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.instance = instance;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = callback_registry_1.default();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) { _this.handleAddInterest(msg); });\r\n        session.on(\"remove-interest\", function (msg) { _this.handleRemoveInterest(msg); });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = null;\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            return (branches === null || (Boolean(br) && typeof br.key === \"string\" && branches.indexOf(br.key) >= 0));\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        var subscriptionsToClose = Object.keys(streamingMethod.protocolState.subscriptionsMap)\r\n            .map(function (key) {\r\n            return streamingMethod.protocolState.subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        var allSubscriptions = Object.keys(streamingMethod.protocolState.subscriptionsMap)\r\n            .map(function (key) {\r\n            return streamingMethod.protocolState.subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var allSubscriptions = Object.keys(streamingMethod.protocolState.subscriptionsMap)\r\n            .map(function (key) {\r\n            return streamingMethod.protocolState.subscriptionsMap[key];\r\n        });\r\n        var keysWithDuplicates = allSubscriptions.map(function (sub) {\r\n            var result = null;\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                result = sub.branchKey;\r\n            }\r\n            return result;\r\n        });\r\n        var seen = [];\r\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\r\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\r\n                return false;\r\n            }\r\n            seen.push(bKey);\r\n            return true;\r\n        });\r\n        return branchArray;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\" ||\r\n            typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = (typeof caller.getInfoForUser === \"function\") ? caller.getInfoForUser() : null;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\r\nexports.default = ServerStreaming;\r\n//# sourceMappingURL=server-streaming.js.map\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(1);\r\nvar server_streaming_1 = __webpack_require__(44);\r\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(instance, session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = callback_registry_1.default();\r\n        this.streaming = new server_streaming_1.default(instance, session, clientRepository, serverRepository, logger);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod, success, error) {\r\n        var isStreaming = true;\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        this.register(repoMethod, success, error, isStreaming);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, success, error, isStreaming) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDef, flags, registerMsg;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodDef = repoMethod.definition;\r\n                        repoMethod.protocolState.registrationCallbacks = {\r\n                            success: success,\r\n                            fail: error,\r\n                        };\r\n                        flags = { streaming: isStreaming || false };\r\n                        this.logger.debug('registering method \"' + methodDef.name + '\"');\r\n                        registerMsg = {\r\n                            type: \"register\",\r\n                            methods: [{\r\n                                    id: repoMethod.repoId,\r\n                                    name: methodDef.name,\r\n                                    display_name: methodDef.displayName,\r\n                                    description: methodDef.description,\r\n                                    version: methodDef.version,\r\n                                    flags: flags,\r\n                                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                                    input_signature: methodDef.accepts,\r\n                                    result_signature: methodDef.returns,\r\n                                    restrictions: undefined,\r\n                                }],\r\n                        };\r\n                        return [4, this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n                                .then(function (msg) { return _this.handleRegisteredMessage(msg); })\r\n                                .catch(function (err) { return _this.handleErrorRegister(err); })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err) {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleRegisteredMessage = function (msg) {\r\n        var methodId = msg._tag.methodId;\r\n        var repoMethod = this.serverRepository.getById(methodId);\r\n        if (repoMethod && repoMethod.protocolState.registrationCallbacks) {\r\n            this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + methodId);\r\n            repoMethod.protocolState.registrationCallbacks.success();\r\n        }\r\n    };\r\n    ServerProtocol.prototype.handleErrorRegister = function (msg) {\r\n        this.logger.warn(JSON.stringify(msg));\r\n        var methodId = msg._tag.methodId;\r\n        var repoMethod = this.serverRepository.getById(methodId);\r\n        if (repoMethod && repoMethod.protocolState.registrationCallbacks) {\r\n            this.logger.debug(\"failed to register method \" + repoMethod.definition.name + \" with id \" + methodId);\r\n            repoMethod.protocolState.registrationCallbacks.fail();\r\n        }\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        this.logger.debug('received invocation for method id \"' + methodId + '\" from peer ' + callerId);\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId);\r\n        var invocationArgs = { args: args, instance: client.getInfoForUser() };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\r\nexports.default = ServerProtocol;\r\n//# sourceMappingURL=server.js.map\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar subscription_1 = __webpack_require__(9);\r\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new subscription_1.default(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\r\nexports.default = ServerBranch;\r\n//# sourceMappingURL=branch.js.map\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        if (typeof method !== \"object\") {\r\n            return;\r\n        }\r\n        if (method.repoId !== undefined) {\r\n            return;\r\n        }\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.filter(function (m) {\r\n            return m.repoId === id;\r\n        })[0];\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\r\nexports.default = ServerRepository;\r\n//# sourceMappingURL=repository.js.map\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\r\nexports.default = Request;\r\n//# sourceMappingURL=request.js.map\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar promisify_1 = __webpack_require__(8);\r\nvar streaming_1 = __webpack_require__(51);\r\nvar stream_1 = __webpack_require__(50);\r\nvar Server = (function () {\r\n    function Server(protocol, serverRepository, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n        this.invocations = 0;\r\n        this.streaming = new streaming_1.default(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        if (methodDefinition === undefined) {\r\n            return Promise.reject(\"Please supply either a string of the Unique name or an object with property name\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be the callback function\");\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) {\r\n            try {\r\n                var result = callback(context.args, context.instance);\r\n                resultCallback(null, result);\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, e);\r\n            }\r\n        };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (methodDefinition === undefined) {\r\n            return Promise.reject(\"Please supply either a string of the Unique name or an object with property name\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be the callback function\");\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                callback(context.args, context.instance, function (result) {\r\n                    resultCallback(null, result);\r\n                }, function (e) {\r\n                    resultCallback(e, e);\r\n                });\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, null);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        var _this = this;\r\n        var methodDefinition;\r\n        if (typeof method === \"string\") {\r\n            methodDefinition = { name: \"\" + method };\r\n        }\r\n        else {\r\n            methodDefinition = __assign({}, method);\r\n        }\r\n        var nameAlreadyExists = this.serverRepository.getList()\r\n            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n        if (nameAlreadyExists) {\r\n            return Promise.reject(\"Name already exists !\");\r\n        }\r\n        if (methodDefinition.supportsStreaming) {\r\n            return Promise.reject(\"supportsStreaming can not be true ! If you want to create a stream please use glue.agm.createStream\");\r\n        }\r\n        var repoMethod = this.serverRepository.add({\r\n            definition: methodDefinition,\r\n            theFunction: theFunction,\r\n            protocolState: {},\r\n        });\r\n        return this.protocol.server.register(repoMethod, function () {\r\n        }, function () {\r\n            _this.serverRepository.remove(repoMethod.repoId);\r\n        });\r\n    };\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (typeof streamDef === \"string\") {\r\n                if (streamDef === \"\") {\r\n                    reject(\"Invalid stream name - can not be empty\");\r\n                }\r\n                streamDef = { name: streamDef };\r\n            }\r\n            streamDef.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = {\r\n                definition: streamDef,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            };\r\n            _this.serverRepository.add(repoMethod);\r\n            _this.protocol.server.createStream(repoMethod, function () {\r\n                var streamFrontObject = new stream_1.default(_this.protocol, repoMethod, _this);\r\n                repoMethod.stream = streamFrontObject;\r\n                resolve(streamFrontObject);\r\n            }, function (err) {\r\n                _this.serverRepository.remove(repoMethod.repoId);\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify_1.default(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please supply either a string of the Unique name or an object with property name\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method with undefined name does not exist !\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method does not exist or it is not registered by your application !\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"No \" + (forStream ? \"stream\" : \"method\") + \" matches the condition !\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, Promise.all(methodsToRemove.map(function (method) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4, this.protocol.server.unregister(method)];\r\n                                    case 1:\r\n                                        _a.sent();\r\n                                        this.serverRepository.remove(method.repoId);\r\n                                        return [2];\r\n                                }\r\n                            });\r\n                        }); }))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.containsProps = function (filter, methodDefinition) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\";\r\n        });\r\n        var methodDefProps = Object.keys(methodDefinition);\r\n        var uniqProps = Array.from(new Set(filterProps.concat(methodDefProps)));\r\n        return uniqProps.reduce(function (isMatch, prop) {\r\n            var filterValue = filter[prop];\r\n            var methodDefValue = methodDefinition[prop];\r\n            if (prop === \"supportsStreaming\") {\r\n                methodDefValue = methodDefValue || false;\r\n                filterValue = filterValue || false;\r\n            }\r\n            if (prop === \"objectTypes\" && filterValue !== undefined && methodDefValue !== undefined) {\r\n                if (filterValue.length !== methodDefValue.length) {\r\n                    isMatch = false;\r\n                }\r\n                else {\r\n                    var firstObjType = filterValue.sort();\r\n                    var secondObjTypes_1 = methodDefValue.sort();\r\n                    var hasADifference = firstObjType.some(function (objType, index) { return objType !== secondObjTypes_1[index]; });\r\n                    if (hasADifference) {\r\n                        isMatch = false;\r\n                    }\r\n                }\r\n            }\r\n            else if (filterValue !== methodDefValue) {\r\n                isMatch = false;\r\n            }\r\n            return isMatch;\r\n        }, true);\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err) {\r\n                if (typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked ! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (!result || typeof result !== \"object\" || result.constructor === Array) {\r\n                result = { _result: result };\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\r\nexports.default = Server;\r\n//# sourceMappingURL=server.js.map\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar subscription_1 = __webpack_require__(9);\r\nvar branch_1 = __webpack_require__(46);\r\nvar ServerStream = (function () {\r\n    function ServerStream(protocol, repoMethod, server) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.server = server;\r\n        this.def = repoMethod.definition;\r\n    }\r\n    Object.defineProperty(ServerStream.prototype, \"name\", {\r\n        get: function () { return this.def.name; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this.protocol.server.getBranchList(this.repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new branch_1.default(key, this.protocol, this.repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new branch_1.default(branchKey, _this.protocol, _this.repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new subscription_1.default(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var def2 = this.def;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod);\r\n        this.server.unregister(this.repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this.protocol.server.pushData(this.repoMethod, data, branches);\r\n    };\r\n    return ServerStream;\r\n}());\r\nexports.default = ServerStream;\r\n//# sourceMappingURL=stream.js.map\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar subscription_1 = __webpack_require__(9);\r\nvar request_1 = __webpack_require__(48);\r\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new request_1.default(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new subscription_1.default(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new subscription_1.default(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\r\nexports.default = ServerStreaming;\r\n//# sourceMappingURL=streaming.js.map\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar protocol_1 = __webpack_require__(53);\r\nvar successMessages = ['subscribed', 'success'];\r\nexports.default = (function (configuration) {\r\n    var connection = configuration.connection, logger = configuration.logger;\r\n    var session = connection.domain('bus', logger, successMessages);\r\n    return new Promise(function (resolve, reject) {\r\n        session.join()\r\n            .then(function () {\r\n            var protocol = protocol_1.default(connection, logger, session);\r\n            resolve(protocol);\r\n        })\r\n            .catch(reject);\r\n    });\r\n});\r\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = __webpack_require__(54);\r\n;\r\nvar Protocol = (function () {\r\n    function Protocol(connection, logger, session) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, _b = _a.routingKey, routingKey = _b === void 0 ? undefined : _b, _c = _a.target, target = _c === void 0 ? undefined : _c;\r\n            var args = utils_1.removeEmptyValues({\r\n                type: 'publish',\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, _b = _a.routingKey, routingKey = _b === void 0 ? undefined : _b, _c = _a.target, target = _c === void 0 ? undefined : _c;\r\n                var args = utils_1.removeEmptyValues({\r\n                    type: 'subscribe',\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: 'unsubscribe', subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on('event', function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args['publisher-identity'];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (utils_1.keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.session = session;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n    }\r\n    return Protocol;\r\n}());\r\nfunction default_1(connection, logger, session) {\r\n    var protocol = new Protocol(connection, logger, session);\r\n    protocol.watchOnEvent();\r\n    return protocol;\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=protocol.js.map\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction removeEmptyValues(obj) {\r\n    var cleaned = {};\r\n    Object.keys(obj).forEach(function (key) {\r\n        if (obj[key] !== undefined && obj[key] !== null) {\r\n            cleaned[key] = obj[key];\r\n        }\r\n    });\r\n    return cleaned;\r\n}\r\nexports.removeEmptyValues = removeEmptyValues;\r\nfunction keysMatch(obj1, obj2) {\r\n    var keysObj1 = Object.keys(obj1);\r\n    var allMatch = true;\r\n    keysObj1.forEach(function (key) {\r\n        if (obj1[key] !== obj2[key]) {\r\n            allMatch = false;\r\n        }\r\n    });\r\n    return allMatch;\r\n}\r\nexports.keysMatch = keysMatch;\r\n//# sourceMappingURL=utils.js.map\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, process) {\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar shortid_1 = __webpack_require__(6);\r\nvar utils_1 = __webpack_require__(11);\r\nvar contextMessageReplaySpec_1 = __webpack_require__(10);\r\nvar pjson = __webpack_require__(12);\r\nfunction default_1(configuration, ext, hc, glue42gd, gdVersion) {\r\n    if (typeof window !== \"undefined\") {\r\n        global = global || window;\r\n    }\r\n    global = global || {};\r\n    var uid = shortid_1.generate();\r\n    var masterConfig = global.GLUE_CONFIG || {};\r\n    var dynamicDefaults = global.GLUE_DEFAULT_CONFIG || {};\r\n    var hardDefaults = getHardDefaults();\r\n    var metricsIdentity = {\r\n        system: getConfigProp(\"metrics\", \"system\"),\r\n        service: getConfigProp(\"metrics\", \"service\"),\r\n        instance: getConfigProp(\"metrics\", \"instance\")\r\n    };\r\n    function getMetrics() {\r\n        return ifNotFalse(getConfigProp(\"metrics\"), {\r\n            identity: metricsIdentity\r\n        });\r\n    }\r\n    function getGateway() {\r\n        var force = getConfigProp(\"gateway\", \"force\");\r\n        var gw = hc === undefined || force;\r\n        if (gw) {\r\n            var gwConfig = getConfigProp(\"gateway\");\r\n            var protocolVersion = getConfigProp(\"gateway\", \"protocolVersion\");\r\n            var reconnectInterval = getConfigProp(\"gateway\", \"reconnectInterval\");\r\n            var reconnectAttempts = getConfigProp(\"gateway\", \"reconnectAttempts\");\r\n            var ws = gwConfig.ws;\r\n            var http = gwConfig.http;\r\n            var inproc = gwConfig.inproc;\r\n            if (!ws && !http && !inproc) {\r\n                if (utils_1.default.isNode() || (\"WebSocket\" in window && window.WebSocket.CLOSING === 2)) {\r\n                    ws = getConfigProp(\"gateway\", \"ws\");\r\n                }\r\n                else {\r\n                    http = getConfigProp(\"gateway\", \"http\");\r\n                }\r\n            }\r\n            var windowId = void 0;\r\n            var pid = void 0;\r\n            if (hc) {\r\n                windowId = hc.windowId;\r\n            }\r\n            else if (typeof glue42gd !== \"undefined\") {\r\n                windowId = glue42gd.windowId;\r\n                pid = glue42gd.pid;\r\n            }\r\n            else if (utils_1.default.isNode()) {\r\n                pid = process.pid;\r\n            }\r\n            var replaySpecs = getConfigProp(\"gateway\", \"replaySpecs\") || [];\r\n            replaySpecs.push(contextMessageReplaySpec_1.ContextMessageReplaySpec);\r\n            return {\r\n                identity: {\r\n                    application: getApplication(),\r\n                    windowId: windowId,\r\n                    process: pid,\r\n                },\r\n                reconnectInterval: reconnectInterval,\r\n                ws: ws,\r\n                http: http,\r\n                gw: inproc,\r\n                protocolVersion: protocolVersion,\r\n                reconnectAttempts: reconnectAttempts,\r\n                force: true,\r\n                replaySpecs: replaySpecs,\r\n                gdVersion: gdVersion,\r\n            };\r\n        }\r\n        return { gdVersion: gdVersion };\r\n    }\r\n    function getLogger() {\r\n        return getConfigProp(\"logger\");\r\n    }\r\n    function getAgm() {\r\n        return ifNotFalse(configuration.agm, {\r\n            instance: {\r\n                application: getApplication()\r\n            }\r\n        });\r\n    }\r\n    function getContexts(connectionConfig) {\r\n        if (connectionConfig.protocolVersion < 3) {\r\n            return false;\r\n        }\r\n        var contextConfig = getConfigProp(\"contexts\");\r\n        if (typeof contextConfig === \"boolean\" && !contextConfig) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function getChannels(contextsEnabled) {\r\n        if (!contextsEnabled) {\r\n            return false;\r\n        }\r\n        var channelsConfig = getConfigProp(\"channels\");\r\n        if (typeof channelsConfig === \"boolean\" && !channelsConfig) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function getBus(connectionConfig) {\r\n        var contextConfig = getConfigProp(\"bus\");\r\n        if (typeof contextConfig === \"boolean\" && contextConfig) {\r\n            if (connectionConfig.protocolVersion && connectionConfig.protocolVersion < 3) {\r\n                return false;\r\n            }\r\n            if (gdVersion === 2) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function getApplication() {\r\n        return getConfigProp(\"application\");\r\n    }\r\n    function getAuth() {\r\n        return getConfigProp(\"auth\");\r\n    }\r\n    function getHardDefaults() {\r\n        function getMetricsDefaults() {\r\n            var documentTitle = typeof document !== \"undefined\" ? document.title : \"unknown\";\r\n            documentTitle = documentTitle || \"none\";\r\n            if (typeof hc === \"undefined\") {\r\n                return {\r\n                    system: \"Connect.Browser\",\r\n                    service: configuration.application || documentTitle,\r\n                    instance: \"~\" + uid\r\n                };\r\n            }\r\n            if (typeof hc.metricsFacade.getIdentity !== \"undefined\") {\r\n                var identity = hc.metricsFacade.getIdentity();\r\n                return {\r\n                    system: identity.system,\r\n                    service: identity.service,\r\n                    instance: identity.instance\r\n                };\r\n            }\r\n            return {\r\n                system: \"HtmlContainer.\" + hc.containerName,\r\n                service: \"JS.\" + hc.browserWindowName,\r\n                instance: \"~\" + hc.machineName\r\n            };\r\n        }\r\n        function getGatewayDefaults() {\r\n            var defaultProtocol = 3;\r\n            var gatewayURL = \"localhost:8385\";\r\n            var defaultWs = \"ws://\" + gatewayURL;\r\n            var defaultHttp = \"http://\" + gatewayURL;\r\n            if (glue42gd) {\r\n                defaultProtocol = 3;\r\n                defaultWs = glue42gd.gwURL;\r\n            }\r\n            return {\r\n                ws: defaultWs,\r\n                http: defaultHttp,\r\n                protocolVersion: defaultProtocol,\r\n                reconnectInterval: 1000\r\n            };\r\n        }\r\n        function getDefaultApplicationName() {\r\n            if (hc) {\r\n                return hc.containerName + \".\" + hc.browserWindowName;\r\n            }\r\n            if (glue42gd) {\r\n                return glue42gd.appName;\r\n            }\r\n            if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n                return (window.agm_application || document.title) + uid;\r\n            }\r\n            else {\r\n                return \"NodeJS\" + uid;\r\n            }\r\n        }\r\n        function getDefaultLogger() {\r\n            return {\r\n                publish: \"off\",\r\n                console: \"info\",\r\n                metrics: \"off\",\r\n            };\r\n        }\r\n        return {\r\n            application: getDefaultApplicationName(),\r\n            metrics: getMetricsDefaults(),\r\n            agm: {},\r\n            gateway: getGatewayDefaults(),\r\n            logger: getDefaultLogger(),\r\n            bus: false\r\n        };\r\n    }\r\n    function getConfigProp(prop1, prop2) {\r\n        var masterConfigProp1 = masterConfig[prop1];\r\n        var userProp1 = configuration[prop1];\r\n        var dynamicDefaultsProp1 = dynamicDefaults[prop1];\r\n        var hardDefaultsProp1 = hardDefaults[prop1];\r\n        if (prop2) {\r\n            if (masterConfigProp1 && masterConfigProp1[prop2] !== undefined) {\r\n                return masterConfigProp1[prop2];\r\n            }\r\n            if (userProp1 && userProp1[prop2] !== undefined) {\r\n                return userProp1[prop2];\r\n            }\r\n            if (dynamicDefaultsProp1 && dynamicDefaultsProp1[prop2] !== undefined) {\r\n                return dynamicDefaultsProp1[prop2];\r\n            }\r\n            if (hardDefaultsProp1 && hardDefaultsProp1[prop2] !== undefined) {\r\n                return hardDefaultsProp1[prop2];\r\n            }\r\n        }\r\n        else {\r\n            if (masterConfigProp1 !== undefined) {\r\n                return masterConfigProp1;\r\n            }\r\n            if (userProp1 !== undefined) {\r\n                return userProp1;\r\n            }\r\n            if (dynamicDefaultsProp1 !== undefined) {\r\n                return dynamicDefaultsProp1;\r\n            }\r\n            if (hardDefaultsProp1 !== undefined) {\r\n                return hardDefaultsProp1;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    function ifNotFalse(what, then) {\r\n        if (typeof what === \"boolean\" && !what) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return then;\r\n        }\r\n    }\r\n    var connection = getGateway();\r\n    var contexts = getContexts(connection);\r\n    var channels = getChannels(contexts);\r\n    var bus = getBus(connection);\r\n    return {\r\n        bus: bus,\r\n        identity: metricsIdentity,\r\n        application: getApplication(),\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: getMetrics(),\r\n        agm: getAgm(),\r\n        contexts: contexts,\r\n        channels: channels,\r\n        version: ext.version || pjson.version,\r\n        libs: ext.libs\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=config.js.map\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(18)))\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = __webpack_require__(13);\r\nvar messageReplayer_1 = __webpack_require__(58);\r\nvar GW3ConnectionImpl = (function (_super) {\r\n    __extends(GW3ConnectionImpl, _super);\r\n    function GW3ConnectionImpl(settings) {\r\n        var _this = _super.call(this, settings) || this;\r\n        if (settings.replaySpecs &&\r\n            settings.replaySpecs.length) {\r\n            _this.replayer = new messageReplayer_1.MessageReplayerImpl(settings.replaySpecs);\r\n        }\r\n        return _this;\r\n    }\r\n    GW3ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        _super.prototype.init.call(this, transport, protocol);\r\n        if (this.replayer) {\r\n            this.replayer.init(this);\r\n        }\r\n        this.gw3Protocol = protocol;\r\n    };\r\n    GW3ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        var superAPI = _super.prototype.toAPI.call(this);\r\n        return {\r\n            domain: that.domain.bind(that),\r\n            get peerId() { return that.peerId; },\r\n            get token() { return that.token; },\r\n            get info() { return that.info; },\r\n            get resolvedIdentity() { return that.resolvedIdentity; },\r\n            get availableDomains() { return that.availableDomains; },\r\n            get gatewayToken() { return that.gatewayToken; },\r\n            get replayer() { return that.replayer; },\r\n            on: superAPI.on,\r\n            send: superAPI.send,\r\n            off: superAPI.off,\r\n            login: superAPI.login,\r\n            logout: superAPI.logout,\r\n            loggedIn: superAPI.loggedIn,\r\n            connected: superAPI.connected,\r\n            disconnected: superAPI.disconnected,\r\n            authToken: that.authToken.bind(that),\r\n            get protocolVersion() { return superAPI.protocolVersion; },\r\n        };\r\n    };\r\n    GW3ConnectionImpl.prototype.domain = function (domain, logger, successMessages, errorMessages) {\r\n        return this.gw3Protocol.domain(domain, logger, successMessages, errorMessages);\r\n    };\r\n    GW3ConnectionImpl.prototype.authToken = function () {\r\n        return this.gw3Protocol.authToken();\r\n    };\r\n    return GW3ConnectionImpl;\r\n}(connection_1.default));\r\nexports.default = GW3ConnectionImpl;\r\n//# sourceMappingURL=gw3Connection.js.map\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = __webpack_require__(13);\r\nvar gw3_1 = __webpack_require__(60);\r\nvar hc_1 = __webpack_require__(62);\r\nvar ws_1 = __webpack_require__(65);\r\nvar gw3Connection_1 = __webpack_require__(56);\r\nvar gw1_1 = __webpack_require__(59);\r\nvar hc_2 = __webpack_require__(63);\r\nvar inproc_1 = __webpack_require__(64);\r\nexports.default = (function (settings) {\r\n    settings = settings || {};\r\n    settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n    settings.reconnectInterval = settings.reconnectInterval || 500;\r\n    var connection = new connection_1.default(settings);\r\n    var logger = settings.logger;\r\n    if (!logger) {\r\n        throw new Error(\"please pass a logger object\");\r\n    }\r\n    var protocol = new hc_1.default();\r\n    var transport = new hc_2.default();\r\n    var outsideHC = settings.gdVersion !== 2 || settings.force;\r\n    if (outsideHC) {\r\n        if (settings.gw && settings.gw.facade && settings.gw.token && settings.protocolVersion === 3) {\r\n            transport = new inproc_1.default(settings.gw.token, settings.gw.facade, logger.subLogger(\"inproc\"));\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            transport = new ws_1.default(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        if (settings.protocolVersion === 3) {\r\n            var gw3Connection = new gw3Connection_1.default(settings);\r\n            var gw3Port = gw3_1.default(gw3Connection, settings, logger.subLogger(\"gw3\"));\r\n            gw3Connection.init(transport, gw3Port);\r\n            return gw3Connection.toAPI();\r\n        }\r\n        else {\r\n            protocol = new gw1_1.default(connection, settings);\r\n        }\r\n    }\r\n    connection.init(transport, protocol);\r\n    return connection.toAPI();\r\n});\r\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(\"glue-core\", type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _a = this.specs[name].types; _i < _a.length; _i++) {\r\n            var type = _a[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                this.connection.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\r\nexports.MessageReplayerImpl = MessageReplayerImpl;\r\n//# sourceMappingURL=messageReplayer.js.map\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GW1Protocol = (function () {\r\n    function GW1Protocol(connection, settings) {\r\n        this._connection = connection;\r\n        this._settings = settings;\r\n    }\r\n    GW1Protocol.prototype.processStringMessage = function (message) {\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj.message,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    GW1Protocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify({\r\n            type: type,\r\n            message: message,\r\n            id: id,\r\n        });\r\n    };\r\n    GW1Protocol.prototype.login = function (message) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var sendOptions = {\r\n                retryInterval: _this._settings.reconnectInterval,\r\n                maxRetries: _this._settings.reconnectAttempts\r\n            };\r\n            _this._connection.send(\"hello\", \"hello\", {}, null, sendOptions)\r\n                .then(function () { return resolve({ application: undefined }); })\r\n                .catch(reject);\r\n        });\r\n    };\r\n    GW1Protocol.prototype.logout = function () {\r\n    };\r\n    GW1Protocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n        return function () {\r\n        };\r\n    };\r\n    GW1Protocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    GW1Protocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return GW1Protocol;\r\n}());\r\nexports.default = GW1Protocol;\r\n//# sourceMappingURL=gw1.js.map\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3Domain_1 = __webpack_require__(61);\r\nvar callback_registry_1 = __webpack_require__(1);\r\nfunction default_1(connection, settings, logger) {\r\n    var datePrefix = \"#T42_DATE#\";\r\n    var datePrefixLen = datePrefix.length;\r\n    var dateMinLen = datePrefixLen + 1;\r\n    var datePrefixFirstChar = datePrefix[0];\r\n    var registry = callback_registry_1.default();\r\n    var globalDomain;\r\n    var isLoggedIn = false;\r\n    var shouldTryLogin = true;\r\n    var initialLogin = true;\r\n    var initialLoginAttempts = 3;\r\n    var initialLoginAttemptsInterval = 500;\r\n    var pingTimer;\r\n    var sessions = [];\r\n    var loginConfig;\r\n    connection.disconnected(handleDisconnected.bind(this));\r\n    ping();\r\n    function processStringMessage(message) {\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, datePrefixLen) !== datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    }\r\n    function createStringMessage(product, type, message, id) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    }\r\n    function processObjectMessage(message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    }\r\n    function createObjectMessage(product, type, message, id) {\r\n        return message;\r\n    }\r\n    function login(config) {\r\n        logger.debug(\"logging in...\");\r\n        loginConfig = config;\r\n        if (!loginConfig) {\r\n            loginConfig = { username: \"\", password: \"\" };\r\n        }\r\n        shouldTryLogin = true;\r\n        return new Promise(function (resolve, reject) {\r\n            var authentication = {};\r\n            connection.gatewayToken = config.gatewayToken;\r\n            if (connection.gatewayToken) {\r\n                authentication.method = \"gateway-token\";\r\n                authentication.token = connection.gatewayToken;\r\n            }\r\n            else if (config.token) {\r\n                authentication.method = \"access-token\";\r\n                authentication.token = config.token;\r\n            }\r\n            else if (config.username) {\r\n                authentication.method = \"secret\";\r\n                authentication.login = config.username;\r\n                authentication.secret = config.password;\r\n            }\r\n            else {\r\n                throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n            }\r\n            var helloMsg = {\r\n                type: \"hello\",\r\n                identity: settings.identity,\r\n                authentication: authentication,\r\n            };\r\n            globalDomain = gw3Domain_1.default(\"global\", connection, logger, [\r\n                \"welcome\",\r\n                \"token\"\r\n            ]);\r\n            var sendOptions = { skipPeerId: true };\r\n            if (initialLogin) {\r\n                sendOptions.retryInterval = settings.reconnectInterval;\r\n                sendOptions.maxRetries = settings.reconnectAttempts;\r\n            }\r\n            globalDomain.send(helloMsg, undefined, sendOptions)\r\n                .then(function (msg) {\r\n                initialLogin = false;\r\n                logger.debug(\"login successful with PeerId \" + msg.peer_id);\r\n                connection.peerId = msg.peer_id;\r\n                connection.resolvedIdentity = msg.resolved_identity;\r\n                connection.availableDomains = msg.available_domains;\r\n                if (msg.options) {\r\n                    connection.token = msg.options.access_token;\r\n                    connection.info = msg.options.info;\r\n                }\r\n                setLoggedIn(true);\r\n                resolve(msg.resolved_identity);\r\n            })\r\n                .catch(function (err) {\r\n                logger.error(\"error sending hello message - \" + err);\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function logout() {\r\n        logger.debug(\"logging out...\");\r\n        shouldTryLogin = false;\r\n        if (pingTimer) {\r\n            clearTimeout(pingTimer);\r\n        }\r\n        sessions.forEach(function (session) {\r\n            session.leave();\r\n        });\r\n    }\r\n    function loggedIn(callback) {\r\n        if (isLoggedIn) {\r\n            callback();\r\n        }\r\n        return registry.add(\"onLoggedIn\", callback);\r\n    }\r\n    function domain(domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = gw3Domain_1.default(domainName, connection, domainLogger, successMessages, errorMessages);\r\n            sessions.push(session);\r\n        }\r\n        return session;\r\n    }\r\n    function handleDisconnected() {\r\n        setLoggedIn(false);\r\n        var tryToLogin = shouldTryLogin;\r\n        if (tryToLogin && initialLogin) {\r\n            if (initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            initialLoginAttempts--;\r\n        }\r\n        logger.debug(\"disconnected - will try new login?\" + shouldTryLogin);\r\n        if (shouldTryLogin) {\r\n            connection.login(loginConfig)\r\n                .catch(function () {\r\n                setTimeout(handleDisconnected, 1000);\r\n            });\r\n        }\r\n    }\r\n    function setLoggedIn(value) {\r\n        isLoggedIn = value;\r\n        if (isLoggedIn) {\r\n            registry.execute(\"onLoggedIn\");\r\n        }\r\n    }\r\n    function ping() {\r\n        if (!shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (isLoggedIn) {\r\n            connection.send(\"\", \"\", { type: \"ping\" });\r\n        }\r\n        pingTimer = setTimeout(ping, 30 * 1000);\r\n    }\r\n    function authToken() {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        return globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    }\r\n    return {\r\n        processStringMessage: processStringMessage,\r\n        createStringMessage: createStringMessage,\r\n        createObjectMessage: createObjectMessage,\r\n        processObjectMessage: processObjectMessage,\r\n        login: login,\r\n        logout: logout,\r\n        loggedIn: loggedIn,\r\n        domain: domain,\r\n        authToken: authToken,\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3.js.map\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callbackRegistry = __webpack_require__(1);\r\nvar shortid_1 = __webpack_require__(6);\r\nfunction default_1(domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = callbackRegistry();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(domain, \"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(domain, \"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(domain, \"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(domain, sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(domain, sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return;\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        send(leaveMsg).then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.warn(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.info(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid_1.generate();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(domain, domain, msg, undefined, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        connection.send(domain, domain, msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(domain, type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n msg was: \" + JSON.stringify(msg));\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3Domain.js.map\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HCProtocol = (function () {\r\n    function HCProtocol() {\r\n    }\r\n    HCProtocol.prototype.processStringMessage = function (message) {\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    HCProtocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify(message);\r\n    };\r\n    HCProtocol.prototype.login = function (message) {\r\n        return Promise.resolve({ application: undefined });\r\n    };\r\n    HCProtocol.prototype.logout = function () {\r\n    };\r\n    HCProtocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n        return function () {\r\n        };\r\n    };\r\n    HCProtocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    HCProtocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return HCProtocol;\r\n}());\r\nexports.default = HCProtocol;\r\n//# sourceMappingURL=hc.js.map\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HCTransport = (function () {\r\n    function HCTransport() {\r\n        this.connectionId = Math.floor(1e10 * Math.random()).toString();\r\n    }\r\n    HCTransport.prototype.send = function (message, product, type) {\r\n        if (product === \"metrics\") {\r\n            window.htmlContainer.metricsFacade.send(type, message);\r\n        }\r\n        else if (product === \"log\") {\r\n            window.htmlContainer.loggingFacade.send(type, message);\r\n        }\r\n        return Promise.resolve(undefined);\r\n    };\r\n    HCTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    HCTransport.prototype.onMessage = function (callback) {\r\n    };\r\n    HCTransport.prototype.close = function () {\r\n    };\r\n    HCTransport.prototype.open = function () {\r\n    };\r\n    return HCTransport;\r\n}());\r\nexports.default = HCTransport;\r\n//# sourceMappingURL=hc.js.map\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(1);\r\nvar Inproc = (function () {\r\n    function Inproc(token, gw, logger) {\r\n        this.registry = callback_registry_1.default();\r\n        this.gw = gw;\r\n        this.gwToken = token;\r\n        this.logger = logger;\r\n        this.connectToken = this.gw.connect(this.gwToken, this.messageHandler.bind(this));\r\n    }\r\n    Object.defineProperty(Inproc.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Inproc.prototype.sendObject = function (msg) {\r\n        this.logger.debug(JSON.stringify(msg));\r\n        this.gw.send(this.connectToken, msg);\r\n        return Promise.resolve(undefined);\r\n    };\r\n    Inproc.prototype.send = function (msg, product, type) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    Inproc.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    Inproc.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    Inproc.prototype.close = function () {\r\n    };\r\n    Inproc.prototype.open = function () {\r\n    };\r\n    Inproc.prototype.messageHandler = function (msg) {\r\n        if (this.logger.consoleLevel() === \"trace\") {\r\n            this.logger.debug(JSON.stringify(msg));\r\n        }\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return Inproc;\r\n}());\r\nexports.default = Inproc;\r\n//# sourceMappingURL=inproc.js.map\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = __webpack_require__(1);\r\nvar utils_1 = __webpack_require__(11);\r\nvar WebSocket = utils_1.default.isNode() ? __webpack_require__(26) : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this._running = true;\r\n        this._initied = false;\r\n        this._registry = callback_registry_1.default();\r\n        this._settings = settings;\r\n        this._logger = logger;\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, product, type, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            options = options || {};\r\n            _this.waitForSocketConnection(function () {\r\n                try {\r\n                    _this._ws.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject, options.maxRetries, options.retryInterval);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        this._running = true;\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        this._ws.close();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        this._logger.debug(\"initiating _ws to \" + this._settings.ws + \"...\");\r\n        this._ws = new WebSocket(this._settings.ws);\r\n        this._ws.onerror = function (err) {\r\n            _this.notifyStatusChanged(false, err);\r\n        };\r\n        this._ws.onclose = function () {\r\n            _this._logger.debug(\"_ws closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this._ws.onopen = function () {\r\n            _this._logger.debug(\"_ws opened\");\r\n            _this.notifyStatusChanged(true);\r\n        };\r\n        this._ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed, retriesLeft, retryInterval) {\r\n        var _this = this;\r\n        if (!callback) {\r\n            callback = function () { };\r\n        }\r\n        if (!failed) {\r\n            failed = function () { };\r\n        }\r\n        if (retryInterval === undefined) {\r\n            retryInterval = this._settings.reconnectInterval;\r\n        }\r\n        if (retriesLeft !== undefined) {\r\n            if (retriesLeft === 0) {\r\n                failed(\"wait for socket on \" + this._settings.ws + \" failed - no more retries left\");\r\n                return;\r\n            }\r\n            this._logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n        }\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this._settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        if (!this._ws || this._ws.readyState > 1) {\r\n            this.initiateSocket();\r\n        }\r\n        else if (this._ws.readyState === 1) {\r\n            return callback();\r\n        }\r\n        setTimeout(function () {\r\n            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n            _this.waitForSocketConnection(callback, failed, retries, retryInterval);\r\n        }, retryInterval);\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\r\nexports.default = WS;\r\n//# sourceMappingURL=ws.js.map\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3ContextData_1 = __webpack_require__(67);\r\nvar helpers_1 = __webpack_require__(70);\r\nvar msg = __webpack_require__(14);\r\nvar contextMessageReplaySpec_1 = __webpack_require__(10);\r\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\"global\", this._logger, [\r\n            msg.GW_MESSAGE_CONTEXT_CREATED,\r\n            msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            msg.GW_MESSAGE_CONTEXT_DESTROYED,\r\n            msg.GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        this._connection.replayer.drain(contextMessageReplaySpec_1.ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === msg.GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === msg.GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === msg.GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === msg.GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === msg.GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === msg.GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === msg.GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            if (!_this._contextIdToName[createContextMsg.context_id]) {\r\n                _this._contextIdToName[createContextMsg.context_id] = name;\r\n                var contextData = _this._contextNameToData[name] || new gw3ContextData_1.GW3ContextData(createContextMsg.context_id, name, true, null);\r\n                contextData.isAnnounced = true;\r\n                contextData.name = name;\r\n                contextData.contextId = createContextMsg.context_id;\r\n                _this._contextNameToData[name] = contextData;\r\n                contextData.context = createContextMsg.data;\r\n                contextData.sentExplicitSubscription = true;\r\n                if (contextData.context) {\r\n                    _this.invokeUpdateCallbacks(contextData, contextData.context, null);\r\n                }\r\n                return _this.update(name, data).then(function () { return createContextMsg.context_id; });\r\n            }\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, delta);\r\n        }\r\n        var calculatedDelta = this.calculateContextDelta(contextData.context, delta);\r\n        if (!Object.keys(calculatedDelta.added).length\r\n            && !Object.keys(calculatedDelta.updated).length\r\n            && !calculatedDelta.removed.length) {\r\n            return Promise.resolve();\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: calculatedDelta,\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, calculatedDelta, {\r\n                updaterId: gwResponse.peer_id\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    this.subscribe(name, function (data, delta, removed, un) {\r\n                        _this.unsubscribe(un);\r\n                        resolve(data);\r\n                    });\r\n                    return [2];\r\n                });\r\n            }); });\r\n        }\r\n        else {\r\n            return Promise.resolve(contextData.context);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback) {\r\n        var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new gw3ContextData_1.GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context &&\r\n                    contextData.sentExplicitSubscription) {\r\n                    callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextId = this._contextNameToId[name_1];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = helpers_1.applyContextDelta(contextData.context, delta);\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !helpers_1.deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            msg.GW_MESSAGE_CONTEXT_ADDED,\r\n            msg.GW_MESSAGE_CONTEXT_CREATED,\r\n            msg.GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(\"js-contexts\", createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === msg.GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === msg.GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        else if (createdMessageType === msg.GW_MESSAGE_CONTEXT_CREATED) {\r\n        }\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new gw3ContextData_1.GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            msg.GW_MESSAGE_CONTEXT_UPDATED,\r\n            msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            msg.GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(\"js-contexts\", updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === msg.GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new gw3ContextData_1.GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new gw3ContextData_1.GW3ContextData(contextId, contextUpdatedMsg.name, true, null);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        if (updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === msg.GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === msg.GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = helpers_1.applyContextDelta(contextData.context, contextUpdatedMsg.delta);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !helpers_1.deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, null, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, data, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(helpers_1.deepClone(data), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"Callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            msg.GW_MESSAGE_CONTEXT_DESTROYED,\r\n            msg.GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(\"js-contexts\", destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === msg.GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDelta = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: null };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !helpers_1.deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    return GW3Bridge;\r\n}());\r\nexports.GW3Bridge = GW3Bridge;\r\n//# sourceMappingURL=gw3Bridge.js.map\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\r\nexports.GW3ContextData = GW3ContextData;\r\n//# sourceMappingURL=gw3ContextData.js.map\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HCBridge = (function () {\r\n    function HCBridge(config) {\r\n        this._facade = window.htmlContainer.sharedContextFacade;\r\n    }\r\n    HCBridge.prototype.all = function () {\r\n        var allObj = this._facade.all();\r\n        if (!allObj || !allObj.keys) {\r\n            return [];\r\n        }\r\n        return allObj.keys;\r\n    };\r\n    HCBridge.prototype.update = function (name, delta) {\r\n        this._facade.update(name, delta);\r\n        return Promise.resolve();\r\n    };\r\n    HCBridge.prototype.set = function (name, data) {\r\n        this._facade.set(name, data);\r\n        return Promise.resolve();\r\n    };\r\n    HCBridge.prototype.subscribe = function (name, callback) {\r\n        var snapshot = null;\r\n        var key = this._facade.subscribe(name, function (data, delta, removed) {\r\n            if (!key && key !== 0) {\r\n                snapshot = data;\r\n                return;\r\n            }\r\n            callback(data, delta, removed, key);\r\n        });\r\n        if (snapshot) {\r\n            callback(snapshot, snapshot, [], key);\r\n            snapshot = null;\r\n        }\r\n        return Promise.resolve(key);\r\n    };\r\n    HCBridge.prototype.get = function (name) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                this.subscribe(name, function (data, un) {\r\n                    _this.unsubscribe(un);\r\n                    resolve(data);\r\n                });\r\n                return [2];\r\n            });\r\n        }); });\r\n    };\r\n    HCBridge.prototype.unsubscribe = function (key) {\r\n        this._facade.unsubscribe(key);\r\n    };\r\n    return HCBridge;\r\n}());\r\nexports.HCBridge = HCBridge;\r\n//# sourceMappingURL=hcBridge.js.map\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3Bridge_1 = __webpack_require__(66);\r\nvar hcBridge_1 = __webpack_require__(68);\r\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this.config = config;\r\n        try {\r\n            if (config.gdMajorVersion === 2) {\r\n                var hc = window.htmlContainer;\r\n                if (!hc.sharedContextFacade) {\r\n                    throw new Error(\"Your version of HtmlContainer does not support contexts.\"\r\n                        + \" Get version 1.46.0.0 or later to have that feature.\");\r\n                }\r\n                this._bridge = new hcBridge_1.HCBridge(config);\r\n            }\r\n            else if (config.connection.protocolVersion === 3) {\r\n                this._bridge = new gw3Bridge_1.GW3Bridge(config);\r\n            }\r\n            else {\r\n                throw new Error(\"To use the Contexts library you must run in the\"\r\n                    + \" HTML Container or using a connection to Gateway v3.\");\r\n            }\r\n        }\r\n        catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, delta) {\r\n        this.checkName(name);\r\n        return this._bridge.update(name, delta);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name) {\r\n        return this._bridge.get(name);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" ||\r\n            name == \"\") {\r\n            throw new Error(\"'name' must be non-empty string, got '\" + name + \"'\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\r\nexports.ContextsModule = ContextsModule;\r\n//# sourceMappingURL=contextsModule.js.map\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction applyContextDelta(context, delta) {\r\n    if (delta) {\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, null);\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n    }\r\n    return context;\r\n}\r\nexports.applyContextDelta = applyContextDelta;\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    if (obj instanceof Map) {\r\n        Array.from(obj, function (_a) {\r\n            var key = _a[0], val = _a[1];\r\n            return result.set(key, deepClone(val, hash));\r\n        });\r\n    }\r\n    return Object.assign.apply(Object, [result].concat(Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nexports.deepClone = deepClone;\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.deepEqual = deepEqual;\r\n//# sourceMappingURL=helpers.js.map\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contextsModule_1 = __webpack_require__(69);\r\nexports.ContextsModule = contextsModule_1.ContextsModule;\r\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LogLevel = (function () {\r\n    function LogLevel() {\r\n    }\r\n    LogLevel.canPublish = function (level, restriction) {\r\n        var levelIdx = LogLevel.order.indexOf(level);\r\n        var restrictionIdx = LogLevel.order.indexOf(restriction);\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    LogLevel.off = \"off\";\r\n    LogLevel.trace = \"trace\";\r\n    LogLevel.debug = \"debug\";\r\n    LogLevel.info = \"info\";\r\n    LogLevel.warn = \"warn\";\r\n    LogLevel.error = \"error\";\r\n    LogLevel.order = [LogLevel.trace, LogLevel.debug, LogLevel.info, LogLevel.warn, LogLevel.error, LogLevel.off];\r\n    return LogLevel;\r\n}());\r\nexports.default = LogLevel;\r\n//# sourceMappingURL=levels.js.map\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar levels_1 = __webpack_require__(72);\r\nvar LoggerImpl = (function () {\r\n    function LoggerImpl(name, parent, metricSystem) {\r\n        this._subloggers = [];\r\n        this._name = name;\r\n        this._parent = parent;\r\n        if (parent) {\r\n            this._path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this._path = name;\r\n        }\r\n        this._loggerFullName = \"[\" + this._path + \"]\";\r\n        if (typeof metricSystem !== \"undefined\") {\r\n            this.metricsLevel(\"warn\", metricSystem.subSystem(name));\r\n        }\r\n    }\r\n    Object.defineProperty(LoggerImpl.prototype, \"name\", {\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoggerImpl.prototype, \"path\", {\r\n        get: function () {\r\n            return this._path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.subLogger = function (name) {\r\n        var existingSub = this._subloggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new LoggerImpl(name, this);\r\n        this._subloggers.push(sub);\r\n        return sub;\r\n    };\r\n    LoggerImpl.prototype.publishLevel = function (level) {\r\n        if (level !== null && level !== undefined) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || this._parent.publishLevel();\r\n    };\r\n    LoggerImpl.prototype.consoleLevel = function (level) {\r\n        if (level !== null && level !== undefined) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || this._parent.consoleLevel();\r\n    };\r\n    LoggerImpl.prototype.metricsLevel = function (level, metricsSystem) {\r\n        if (level !== null && level !== undefined) {\r\n            this._metricLevel = level;\r\n        }\r\n        if (metricsSystem !== undefined) {\r\n            if (typeof metricsSystem === \"object\" && typeof metricsSystem.objectMetric === \"function\") {\r\n                this._metricSystem = metricsSystem;\r\n            }\r\n            else {\r\n                throw new Error(\"Please specify metric system\");\r\n            }\r\n        }\r\n        return this._metricLevel || this._parent.metricsLevel();\r\n    };\r\n    LoggerImpl.prototype.log = function (message, level) {\r\n        this.publishMessage(level || levels_1.default.info, message);\r\n    };\r\n    LoggerImpl.prototype.trace = function (message) {\r\n        this.log(message, levels_1.default.trace);\r\n    };\r\n    LoggerImpl.prototype.debug = function (message) {\r\n        this.log(message, levels_1.default.debug);\r\n    };\r\n    LoggerImpl.prototype.info = function (message) {\r\n        this.log(message, levels_1.default.info);\r\n    };\r\n    LoggerImpl.prototype.warn = function (message) {\r\n        this.log(message, levels_1.default.warn);\r\n    };\r\n    LoggerImpl.prototype.error = function (message) {\r\n        this.log(message, levels_1.default.error);\r\n    };\r\n    LoggerImpl.prototype.toAPIObject = function () {\r\n        var that = this;\r\n        return {\r\n            name: this.name,\r\n            subLogger: this.subLogger.bind(that),\r\n            publishLevel: this.publishLevel.bind(that),\r\n            consoleLevel: this.consoleLevel.bind(that),\r\n            metricsLevel: this.metricsLevel.bind(that),\r\n            log: this.log.bind(that),\r\n            trace: this.trace.bind(that),\r\n            debug: this.debug.bind(that),\r\n            info: this.info.bind(that),\r\n            warn: this.warn.bind(that),\r\n            error: this.error.bind(that),\r\n        };\r\n    };\r\n    LoggerImpl.prototype.publishMessage = function (level, message) {\r\n        var loggerName = this._loggerFullName;\r\n        if (level === levels_1.default.error) {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message = message + \"\\n\" +\r\n                    (e.stack.split(\"\\n\").slice(3).join(\"\\n\"));\r\n            }\r\n        }\r\n        if (levels_1.default.canPublish(level, this.consoleLevel())) {\r\n            var toPrint = loggerName + \": \" + message;\r\n            switch (level) {\r\n                case levels_1.default.trace:\r\n                    console.trace(toPrint);\r\n                    break;\r\n                case levels_1.default.debug:\r\n                    if (console.debug) {\r\n                        console.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        console.log(toPrint);\r\n                    }\r\n                    break;\r\n                case levels_1.default.info:\r\n                    console.info(toPrint);\r\n                    break;\r\n                case levels_1.default.warn:\r\n                    console.warn(toPrint);\r\n                    break;\r\n                case levels_1.default.error:\r\n                    console.error(toPrint);\r\n                    break;\r\n            }\r\n        }\r\n        if (levels_1.default.canPublish(level, this.publishLevel())) {\r\n            LoggerImpl.GetConnection().send(\"log\", \"LogMessage\", {\r\n                instance: LoggerImpl.Instance,\r\n                level: levels_1.default.order.indexOf(level),\r\n                logger: loggerName,\r\n                message: message,\r\n            });\r\n        }\r\n        if (levels_1.default.canPublish(level, this.metricsLevel())) {\r\n            if (this._metricSystem !== undefined) {\r\n                this._metricSystem.objectMetric(\"LogMessage\", {\r\n                    Level: level,\r\n                    Logger: loggerName,\r\n                    Message: message,\r\n                    Time: new Date(),\r\n                });\r\n                if (level === levels_1.default.error) {\r\n                    this._metricSystem.setState(100, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\nexports.default = LoggerImpl;\r\n//# sourceMappingURL=logger.js.map\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar logger_1 = __webpack_require__(73);\r\nexports.default = (function (settings) {\r\n    var identity = settings.identity;\r\n    if (!identity) {\r\n        throw new Error(\"identity is missing\");\r\n    }\r\n    var identityStr = identity.system + \"\\\\\" + identity.service + \"\\\\\" + identity.instance;\r\n    logger_1.default.Instance = identityStr;\r\n    logger_1.default.GetConnection = settings.getConnection;\r\n    var mainLogger = new logger_1.default(\"main\");\r\n    mainLogger.publishLevel(settings.publish || \"off\");\r\n    mainLogger.consoleLevel(settings.console || \"info\");\r\n    mainLogger.metricsLevel(settings.metrics || \"off\");\r\n    var apiLogger = mainLogger.toAPIObject();\r\n    return apiLogger;\r\n});\r\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar glue_1 = __webpack_require__(16);\r\nvar pjson = __webpack_require__(12);\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = glue_1.default;\r\n}\r\nglue_1.default.default = glue_1.default;\r\nglue_1.default.version = pjson.version;\r\nmodule.exports = glue_1.default;\r\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction addressMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var conflation = definition.conflation;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.ADDRESS;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = addressMetric;\r\n//# sourceMappingURL=address.js.map\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction countMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || 0;\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.COUNT;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    function incrementBy(num) {\r\n        update(_value + num);\r\n    }\r\n    function increment() {\r\n        incrementBy(1);\r\n    }\r\n    function decrement() {\r\n        incrementBy(-1);\r\n    }\r\n    function decrementBy(num) {\r\n        incrementBy(num * -1);\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get path() {\r\n            return _path;\r\n        },\r\n        get value() {\r\n            return _value;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n        incrementBy: incrementBy,\r\n        increment: increment,\r\n        decrement: decrement,\r\n        decrementBy: decrementBy,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = countMetric;\r\n//# sourceMappingURL=count.js.map\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction numberMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _path = parent.path.slice(0);\r\n    var _value = value || 0;\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.NUMBER;\r\n    _path.push(parent.name);\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    function incrementBy(num) {\r\n        update(_value + num);\r\n    }\r\n    function increment() {\r\n        incrementBy(1);\r\n    }\r\n    function decrement() {\r\n        incrementBy(-1);\r\n    }\r\n    function decrementBy(num) {\r\n        incrementBy(num * -1);\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        type: type,\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n        incrementBy: incrementBy,\r\n        increment: increment,\r\n        decrement: decrement,\r\n        decrementBy: decrementBy,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = numberMetric;\r\n//# sourceMappingURL=number.js.map\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar metric_types_1 = __webpack_require__(0);\r\nvar helpers_1 = __webpack_require__(2);\r\nfunction objectMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.OBJECT;\r\n    function update(newValue) {\r\n        mergeValues(newValue);\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    function mergeValues(values) {\r\n        return Object.keys(_value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _value[k] = values[k];\r\n            }\r\n        });\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = objectMetric;\r\n//# sourceMappingURL=object.js.map\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction rateMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.RATE;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = rateMetric;\r\n//# sourceMappingURL=rate.js.map\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction statisticsMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.STATISTICS;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = statisticsMetric;\r\n//# sourceMappingURL=statistics.js.map\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction stringMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.STRING;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        type: type,\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = stringMetric;\r\n//# sourceMappingURL=string.js.map\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction timespanMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.TIMESPAN;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function start() {\r\n        update(true);\r\n    }\r\n    function stop() {\r\n        update(false);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        start: start,\r\n        stop: stop,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = timespanMetric;\r\n//# sourceMappingURL=timespan.js.map\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = __webpack_require__(2);\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction timestampMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.TIMESTAMP;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function now() {\r\n        update(new Date());\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        now: now,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = timestampMetric;\r\n//# sourceMappingURL=timestamp.js.map\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar serializer_1 = __webpack_require__(86);\r\nfunction default_1(connection, config) {\r\n    var DEFAULT_HEARTBEAT_INTERVAL = 3000;\r\n    var heartbeatTimer;\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var _connection = connection;\r\n    var heartbeatInterval = config.heartbeatInterval || DEFAULT_HEARTBEAT_INTERVAL;\r\n    var send = function (type, message) {\r\n        _connection.send(\"metrics\", type, message);\r\n    };\r\n    function sendFull(repo) {\r\n        if (!repo.root) {\r\n            return;\r\n        }\r\n        if (repo.root.subSystems.length === 0) {\r\n            return;\r\n        }\r\n        sendFullSystem(repo.root);\r\n    }\r\n    function sendFullSystem(system) {\r\n        createSystem(system);\r\n        system.subSystems.forEach(function (sub) {\r\n            sendFullSystem(sub);\r\n        });\r\n        system.metrics.forEach(function (metric) {\r\n            createMetric(metric);\r\n        });\r\n    }\r\n    function heartbeat(repo) {\r\n        send(\"HeartbeatMetrics\", {\r\n            publishingInterval: heartbeatInterval,\r\n            instance: repo.instance,\r\n        });\r\n    }\r\n    function createSystem(system) {\r\n        if (system.parent !== undefined) {\r\n            send(\"CreateMetricSystem\", {\r\n                id: system.id,\r\n                instance: system.repo.instance,\r\n                definition: {\r\n                    name: system.name,\r\n                    description: system.description,\r\n                    path: system.path,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    function updateSystem(system, state) {\r\n        send(\"UpdateMetricSystem\", {\r\n            id: system.id,\r\n            instance: system.repo.instance,\r\n            state: state,\r\n        });\r\n    }\r\n    function createMetric(metric) {\r\n        send(\"CreateMetric\", serializer_1.default(metric));\r\n    }\r\n    function updateMetric(metric) {\r\n        send(\"UpdateMetric\", serializer_1.default(metric));\r\n    }\r\n    function init(repo) {\r\n        heartbeat(repo);\r\n        _connection.on(\"metrics\", \"MetricsSnapshotRequest\", function (instanceInfo) {\r\n            if (instanceInfo.Instance !== repo.instance) {\r\n                return;\r\n            }\r\n            sendFull(repo);\r\n        });\r\n        _connection.disconnected(function () { return clearInterval(heartbeatTimer); });\r\n        if (typeof window !== \"undefined\" && typeof window.htmlContainer === \"undefined\") {\r\n            heartbeatTimer = setInterval(function () {\r\n                heartbeat(repo);\r\n            }, heartbeatInterval);\r\n        }\r\n    }\r\n    var me = {\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n        init: init,\r\n    };\r\n    return me;\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw1.js.map\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction metricToMessage(metric) {\r\n    var definition = getMetricDefinition(metric.name, metric.value, metric.path, metric.type, metric.description, metric.period, metric.resolution, metric.conflation);\r\n    function getMetricDefinition(name, value, path, type, description, period, resolution, conflation) {\r\n        var _definition = {\r\n            name: name,\r\n            description: description,\r\n            type: type ? type : getTypeFromValue(value),\r\n            path: path,\r\n            resolution: resolution,\r\n            period: period,\r\n            conflation: conflation,\r\n        };\r\n        if (_definition.type === metric_types_1.default.OBJECT) {\r\n            _definition.Composite = Object.keys(value).reduce(function (arr, key) {\r\n                var val = value[key];\r\n                arr.push(getMetricDefinition(key, val, path));\r\n                return arr;\r\n            }, []);\r\n        }\r\n        return _definition;\r\n    }\r\n    function serializeValue(value, _metric) {\r\n        if (value && value.constructor === Date) {\r\n            return {\r\n                value: {\r\n                    type: _valueTypes.indexOf(\"date\"),\r\n                    value: value.valueOf(),\r\n                    isArray: false,\r\n                },\r\n            };\r\n        }\r\n        if (typeof value === \"object\") {\r\n            return {\r\n                CompositeValue: Object.keys(value).reduce(function (arr, key) {\r\n                    var val = serializeValue(value[key]);\r\n                    val.InnerMetricName = key;\r\n                    arr.push(val);\r\n                    return arr;\r\n                }, []),\r\n            };\r\n        }\r\n        var valueType = _metric ? _metric.getValueType() : undefined;\r\n        valueType = valueType || _valueTypes.indexOf(typeof value);\r\n        return {\r\n            value: {\r\n                type: valueType,\r\n                value: value,\r\n                isArray: false,\r\n            },\r\n        };\r\n    }\r\n    function getTypeFromValue(value) {\r\n        var typeAsString = value.constructor === Date ? \"timestamp\" : typeof value;\r\n        switch (typeAsString) {\r\n            case \"string\":\r\n                return metric_types_1.default.STRING;\r\n            case \"number\":\r\n                return metric_types_1.default.NUMBER;\r\n            case \"timestamp\":\r\n                return metric_types_1.default.TIMESTAMP;\r\n            case \"object\":\r\n                return metric_types_1.default.OBJECT;\r\n        }\r\n        return 0;\r\n    }\r\n    var _valueTypes = [\r\n        \"boolean\",\r\n        \"int\",\r\n        \"number\",\r\n        \"long\",\r\n        \"string\",\r\n        \"date\",\r\n        \"object\",\r\n    ];\r\n    return {\r\n        id: metric.id,\r\n        instance: metric.repo.instance,\r\n        definition: definition,\r\n        value: serializeValue(metric.value, metric),\r\n    };\r\n}\r\nexports.default = metricToMessage;\r\n//# sourceMappingURL=serializer.js.map\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar serializer_1 = __webpack_require__(88);\r\nfunction default_1(connection, config) {\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\", config.logger);\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join(config.identity);\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) {\r\n        if (system.parent === undefined) {\r\n            return;\r\n        }\r\n        joinPromise.then(function () {\r\n            var metric = {\r\n                name: serializer_1.normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [metric],\r\n            };\r\n            session.send(createMetricsMsg);\r\n        });\r\n    };\r\n    var updateSystem = function (system, state) {\r\n        joinPromise.then(function () {\r\n            var shadowedUpdateMetric = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: serializer_1.normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        value: {\r\n                            Description: state.description,\r\n                            Value: state.state,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(shadowedUpdateMetric);\r\n            var stateObj = serializer_1.composeMsgForRootStateMetric(system);\r\n            var rootMetric = {\r\n                type: \"publish\",\r\n                peer_id: connection.peerId,\r\n                values: [{\r\n                        name: \"/State\",\r\n                        value: {\r\n                            Description: stateObj.description,\r\n                            Value: stateObj.value,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(rootMetric);\r\n        });\r\n    };\r\n    var createMetric = function (metric) {\r\n        joinPromise.then(function () {\r\n            var m = serializer_1.serializeMetric(metric);\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [m],\r\n            };\r\n            session.send(createMetricsMsg);\r\n            if (typeof metric.value !== \"undefined\") {\r\n                updateMetric(metric);\r\n            }\r\n        });\r\n    };\r\n    var updateMetric = function (metric) {\r\n        joinPromise.then(function () {\r\n            var value = serializer_1.getMetricValueByType(metric);\r\n            var publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: serializer_1.normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                        value: value,\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(publishMetricsMsg);\r\n        });\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3.js.map\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction getMetricTypeByValue(metric) {\r\n    if ((metric.value && metric.value.constructor === Date) || metric.type === metric_types_1.default.TIMESPAN || metric.type === metric_types_1.default.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof metric.value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof metric.value === \"string\" || metric.type === metric_types_1.default.STRING || metric.type === metric_types_1.default.RATE) {\r\n        return \"string\";\r\n    }\r\n    else if (typeof metric.value === \"object\") {\r\n        return \"object\";\r\n    }\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nexports.serializeMetric = serializeMetric;\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nexports.normalizeMetricName = normalizeMetricName;\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nexports.getMetricValueByType = getMetricValueByType;\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\r\nexports.composeMsgForRootStateMetric = composeMsgForRootStateMetric;\r\n//# sourceMappingURL=serializer.js.map\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3_1 = __webpack_require__(87);\r\nvar gw1_1 = __webpack_require__(85);\r\nvar repository_1 = __webpack_require__(90);\r\nexports.default = (function (settings) {\r\n    var options = {\r\n        connection: settings.connection,\r\n        identity: settings.identity,\r\n        logger: settings.logger,\r\n        heartbeatInterval: settings.heartbeatInterval,\r\n        settings: {},\r\n        clickStream: settings.clickStream,\r\n    };\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var _protocol;\r\n    if (options.connection.protocolVersion === 3) {\r\n        _protocol = gw3_1.default(options.connection, settings);\r\n    }\r\n    else {\r\n        _protocol = gw1_1.default(options.connection, settings);\r\n    }\r\n    var repo = repository_1.default(options, _protocol);\r\n    var rootSystem = repo.root;\r\n    return rootSystem;\r\n});\r\n//# sourceMappingURL=main.js.map\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar system_1 = __webpack_require__(91);\r\nfunction repository(options, protocol) {\r\n    if (!options.identity) {\r\n        throw new Error(\"Identity missing from metrics configuration\");\r\n    }\r\n    if (!options.identity.service || typeof options.identity.service !== \"string\") {\r\n        throw new Error(\"Service missing or invalid in metrics identity configuration\");\r\n    }\r\n    if (!options.identity.system || typeof options.identity.system !== \"string\") {\r\n        throw new Error(\"System missing or invalid in metrics identity configuration\");\r\n    }\r\n    if (!options.identity.instance || typeof options.identity.instance !== \"string\") {\r\n        throw new Error(\"Instance missing or invalid in metrics identity configuration\");\r\n    }\r\n    var identity = options.identity;\r\n    var instance = options.identity.system + \"/\" + options.identity.service + \"/\" + options.identity.instance;\r\n    function _initSystemMetrics(rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: e.target ? target.className : \"\",\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    }\r\n    var me = {\r\n        identity: identity,\r\n        instance: instance,\r\n        get root() {\r\n            return _root;\r\n        },\r\n    };\r\n    protocol.init(me);\r\n    var _root = system_1.default(\"\", me, protocol);\r\n    _initSystemMetrics(_root, options.clickStream || options.clickStream === undefined);\r\n    return me;\r\n}\r\nexports.default = repository;\r\n//# sourceMappingURL=repository.js.map\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar address_1 = __webpack_require__(76);\r\nvar count_1 = __webpack_require__(77);\r\nvar number_1 = __webpack_require__(78);\r\nvar object_1 = __webpack_require__(79);\r\nvar rate_1 = __webpack_require__(80);\r\nvar statistics_1 = __webpack_require__(81);\r\nvar string_1 = __webpack_require__(82);\r\nvar timespan_1 = __webpack_require__(83);\r\nvar timestamp_1 = __webpack_require__(84);\r\nvar metric_types_1 = __webpack_require__(0);\r\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var identity = repo.identity;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric(definition, value) {\r\n        return _getOrCreateMetric.call(me, definition, metric_types_1.default.STRING, value, function (metricDef) { return string_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric(definition, value) {\r\n        return _getOrCreateMetric.call(me, definition, metric_types_1.default.NUMBER, value, function (metricDef) { return number_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function countMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.COUNT, value, function (metricDef) { return count_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function addressMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.ADDRESS, value, function (metricDef) { return address_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.OBJECT, value, function (metricDef) { return object_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function timespanMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.TIMESPAN, value, function (metricDef) { return timespan_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.TIMESTAMP, value, function (metricDef) { return timestamp_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function rateMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.RATE, value, function (metricDef) { return rate_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function statisticsMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.STATISTICS, value, function (metricDef) { return statistics_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function _unionToMetricDef(def) {\r\n        var metricDefinition = {};\r\n        if (typeof def === \"string\") {\r\n            metricDefinition.name = def;\r\n        }\r\n        else {\r\n            metricDefinition = def;\r\n        }\r\n        if (metricDefinition.name === undefined) {\r\n            throw new Error(\"Metric name is required\");\r\n        }\r\n        return metricDefinition;\r\n    }\r\n    function _getOrCreateMetric(definition, expectedType, value, createMetric) {\r\n        var metricDefinition = _unionToMetricDef(definition);\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDefinition.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDefinition.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing.update(value);\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDefinition);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        identity: identity,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric,\r\n        statisticsMetric: statisticsMetric,\r\n        rateMetric: rateMetric,\r\n        timestampMetric: timestampMetric,\r\n        timespanMetric: timespanMetric,\r\n        objectMetric: objectMetric,\r\n        addressMetric: addressMetric,\r\n        countMetric: countMetric,\r\n        numberMetric: numberMetric,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\r\nexports.default = system;\r\n//# sourceMappingURL=system.js.map\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction default_1() {\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        period = now() - startTime;\r\n        return period;\r\n    }\r\n    return {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=timer.js.map\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// tick42-glue-core.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 75);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 741e78748dd52152126e","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    DEFAULT: 0,\r\n    STRING: 1,\r\n    NUMBER: 2,\r\n    COUNT: 3,\r\n    RATE: 4,\r\n    STATISTICS: 6,\r\n    TIMESTAMP: 7,\r\n    ADDRESS: 8,\r\n    TIMESPAN: 10,\r\n    OBJECT: 11\r\n};\r\n//# sourceMappingURL=metric-types.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/const/metric-types.js\n// module id = 0\n// module chunks = 0","\"use strict\";\r\nfunction createRegistry(options) {\r\n    if (options && options.errorHandling\r\n        && typeof options.errorHandling !== \"function\"\r\n        && options.errorHandling !== \"log\"\r\n        && options.errorHandling !== \"silent\"\r\n        && options.errorHandling !== \"throw\") {\r\n        throw new Error(\"Invalid options passed to createRegistry. Prop errorHandling should be [\\\"log\\\" | \\\"silent\\\" | \\\"throw\\\" | (err) => void], but \" + typeof options.errorHandling + \" was passed\");\r\n    }\r\n    var _userErrorHandler = options && typeof options.errorHandling === \"function\" && options.errorHandling;\r\n    var callbacks = {};\r\n    function add(key, callback) {\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey) {\r\n            callbacksForKey = [];\r\n            callbacks[key] = callbacksForKey;\r\n        }\r\n        callbacksForKey.push(callback);\r\n        return function () {\r\n            var allForKey = callbacks[key];\r\n            if (!allForKey) {\r\n                return;\r\n            }\r\n            allForKey = allForKey.reduce(function (acc, element, index) {\r\n                if (!(element === callback && acc.length === index)) {\r\n                    acc.push(element);\r\n                }\r\n                return acc;\r\n            }, []);\r\n            callbacks[key] = allForKey;\r\n        };\r\n    }\r\n    function execute(key) {\r\n        var argumentsArr = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            argumentsArr[_i - 1] = arguments[_i];\r\n        }\r\n        var callbacksForKey = callbacks[key];\r\n        if (!callbacksForKey || callbacksForKey.length === 0) {\r\n            return [];\r\n        }\r\n        var results = [];\r\n        callbacksForKey.forEach(function (callback) {\r\n            try {\r\n                var result = callback.apply(undefined, argumentsArr);\r\n                results.push(result);\r\n            }\r\n            catch (err) {\r\n                results.push(undefined);\r\n                _handleError(err, key);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n    function _handleError(exceptionArtifact, key) {\r\n        var errParam = exceptionArtifact instanceof Error ? exceptionArtifact : new Error(exceptionArtifact);\r\n        if (_userErrorHandler) {\r\n            _userErrorHandler(errParam);\r\n            return;\r\n        }\r\n        var msg = \"[ERROR] callback-registry: User callback for key \\\"\" + key + \"\\\" failed: \" + errParam.stack;\r\n        if (options) {\r\n            switch (options.errorHandling) {\r\n                case \"log\":\r\n                    return console.error(msg);\r\n                case \"silent\":\r\n                    return;\r\n                case \"throw\":\r\n                    throw new Error(msg);\r\n            }\r\n        }\r\n        console.error(msg);\r\n    }\r\n    function clear() {\r\n        callbacks = {};\r\n    }\r\n    return {\r\n        add: add,\r\n        execute: execute,\r\n        clear: clear\r\n    };\r\n}\r\n;\r\ncreateRegistry.default = createRegistry;\r\nmodule.exports = createRegistry;\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/callback-registry/lib/index.js\n// module id = 1\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = {\r\n    validate: function (definition, parent, transport) {\r\n        if (definition === null || typeof definition !== \"object\") {\r\n            throw new Error(\"Missing definition\");\r\n        }\r\n        if (parent === null || typeof parent !== \"object\") {\r\n            throw new Error(\"Missing parent\");\r\n        }\r\n        if (transport === null || typeof transport !== \"object\") {\r\n            throw new Error(\"Missing transport\");\r\n        }\r\n    },\r\n};\r\n//# sourceMappingURL=helpers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/helpers.js\n// module id = 2\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar shortid = require(\"shortid\");\r\nexports.default = shortid;\r\n//# sourceMappingURL=random.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/helpers/random.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shortid/lib/alphabet.js\n// module id = 4\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction convertInfoToInstance(info) {\r\n    if (typeof info !== \"object\") {\r\n        info = {};\r\n    }\r\n    return {\r\n        application: info.ApplicationName,\r\n        environment: info.Environment,\r\n        machine: info.MachineName,\r\n        pid: info.ProcessId,\r\n        region: info.Region,\r\n        service: info.ServiceName,\r\n        user: info.UserName,\r\n        started: info.ProcessStartTime,\r\n    };\r\n}\r\nexports.convertInfoToInstance = convertInfoToInstance;\r\nfunction isStreamingFlagSet(flags) {\r\n    if (typeof flags !== \"number\" || isNaN(flags)) {\r\n        return false;\r\n    }\r\n    var mask = 32;\r\n    var result = flags & mask;\r\n    return result === mask;\r\n}\r\nexports.isStreamingFlagSet = isStreamingFlagSet;\r\nfunction convertInstance(instance) {\r\n    return {\r\n        ApplicationName: instance.application,\r\n        ProcessId: instance.pid,\r\n        MachineName: instance.machine,\r\n        UserName: instance.user,\r\n        Environment: instance.environment,\r\n        Region: instance.region,\r\n    };\r\n}\r\nexports.convertInstance = convertInstance;\r\n//# sourceMappingURL=helpers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw1/helpers.js\n// module id = 5\n// module chunks = 0","'use strict';\nmodule.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shortid/index.js\n// module id = 6\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 7\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction default_1(promise, successCallback, errorCallback) {\r\n    if (typeof successCallback !== \"function\" && typeof errorCallback !== \"function\") {\r\n        return promise;\r\n    }\r\n    if (typeof successCallback !== \"function\") {\r\n        successCallback = function () { };\r\n    }\r\n    else if (typeof errorCallback !== \"function\") {\r\n        errorCallback = function () { };\r\n    }\r\n    promise.then(successCallback, errorCallback);\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=promisify.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/helpers/promisify.js\n// module id = 8\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ServerSubscription = (function () {\r\n    function ServerSubscription(protocol, repoMethod, subscription) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.subscription = subscription;\r\n    }\r\n    Object.defineProperty(ServerSubscription.prototype, \"stream\", {\r\n        get: function () { return this.repoMethod.stream; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"arguments\", {\r\n        get: function () { return this.subscription.arguments || {}; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"branchKey\", {\r\n        get: function () { return this.subscription.branchKey; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ServerSubscription.prototype, \"instance\", {\r\n        get: function () { return this.subscription.instance; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerSubscription.prototype.close = function () {\r\n        this.protocol.server.closeSingleSubscription(this.repoMethod, this.subscription);\r\n    };\r\n    ServerSubscription.prototype.push = function (data) {\r\n        this.protocol.server.pushDataToSingle(this.repoMethod, this.subscription, data);\r\n    };\r\n    return ServerSubscription;\r\n}());\r\nexports.default = ServerSubscription;\r\n//# sourceMappingURL=subscription.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/server/subscription.js\n// module id = 9\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar msg = require(\"./bridges/gw3/gw3Messages\");\r\nexports.ContextMessageReplaySpec = {\r\n    get name() {\r\n        return \"context\";\r\n    },\r\n    get types() {\r\n        return [\r\n            msg.GW_MESSAGE_CREATE_CONTEXT,\r\n            msg.GW_MESSAGE_ACTIVITY_CREATED,\r\n            msg.GW_MESSAGE_ACTIVITY_DESTROYED,\r\n            msg.GW_MESSAGE_CONTEXT_CREATED,\r\n            msg.GW_MESSAGE_CONTEXT_ADDED,\r\n            msg.GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            msg.GW_MESSAGE_DESTROY_CONTEXT,\r\n            msg.GW_MESSAGE_CONTEXT_DESTROYED,\r\n            msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n            msg.GW_MESSAGE_CONTEXT_UPDATED,\r\n            msg.GW_MESSAGE_JOINED_ACTIVITY\r\n        ];\r\n    }\r\n};\r\n//# sourceMappingURL=contextMessageReplaySpec.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/contexts/contextMessageReplaySpec.js\n// module id = 10\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Utils = (function () {\r\n    function Utils() {\r\n    }\r\n    Utils.getGDMajorVersion = function () {\r\n        if (typeof window === \"undefined\") {\r\n            return -1;\r\n        }\r\n        if (!window.glueDesktop) {\r\n            return -1;\r\n        }\r\n        if (!window.glueDesktop.version) {\r\n            return -1;\r\n        }\r\n        var ver = Number(window.glueDesktop.version.substr(0, 1));\r\n        return isNaN(ver) ? -1 : ver;\r\n    };\r\n    Utils.isNode = function () {\r\n        try {\r\n            return Object.prototype.toString.call(global.process) === \"[object process]\";\r\n        }\r\n        catch (e) {\r\n            return false;\r\n        }\r\n    };\r\n    return Utils;\r\n}());\r\nexports.default = Utils;\r\n//# sourceMappingURL=utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/utils.js\n// module id = 11\n// module chunks = 0","module.exports = {\"name\":\"tick42-glue-core\",\"version\":\"4.3.7\",\"description\":\"Glue42 core library including logger, connection, agm and metrics\",\"main\":\"./dist/node/tick42-glue-core.js\",\"types\":\"./glue.d.ts\",\"browser\":\"./dist/web/tick42-glue-core.js\",\"scripts\":{\"init-dev-mode\":\"node ./build/scripts/init-dev-mode.js\",\"remove-installed-dependencies\":\"node ./build/scripts/remove-installed-dependencies.js\",\"clean\":\"node ./build/scripts/clean.js\",\"pre:build\":\"npm run clean && npm run tslint && tsc && set NODE_ENV=development\",\"file-versionify\":\"node ./build/scripts/file-versionify.js\",\"tslint\":\"tslint -t codeFrame ./src/**.ts\",\"tslint:fix\":\"tslint -t codeFrame --fix ./src/**.ts\",\"watch\":\"onchange ./src/**/*.ts -- npm run build:dev\",\"build:dev\":\"npm run pre:build && set NODE_ENV=development && webpack && npm run file-versionify\",\"build:prod\":\"npm run pre:build && set NODE_ENV=development && webpack && set NODE_ENV=production && webpack && npm run file-versionify\",\"docs\":\"typedoc --options typedoc.json ./src\",\"prepublish\":\"npm run build:prod && npm run test:only\",\"test\":\"npm run build:dev && npm run test:only\",\"test:only\":\"mocha ./tests/ --recursive\",\"test:core\":\"mocha ./tests/core\",\"test:agm\":\"mocha ./tests/agm\",\"test:bus\":\"mocha ./tests/bus\"},\"repository\":{\"type\":\"git\",\"url\":\"https://stash.tick42.com/scm/tg/js-glue-core.git\"},\"author\":{\"name\":\"Tick42\",\"url\":\"http://www.glue42.com\"},\"license\":\"ISC\",\"dependencies\":{\"callback-registry\":\"^2.4.0\",\"es6-promise\":\"^4.1.0\",\"shortid\":\"^2.2.6\",\"util-deprecate\":\"^1.0.2\",\"ws\":\"^0.7.2\"},\"devDependencies\":{\"@types/node\":\"^10.7.0\",\"@types/shortid\":\"0.0.29\",\"archiver\":\"^1.3.0\",\"babel-core\":\"^6.25.0\",\"babel-loader\":\"^6.4.1\",\"babel-plugin-add-module-exports\":\"^0.2.1\",\"babel-preset-es2015\":\"^6.16.0\",\"babel-preset-stage-2\":\"^6.22.0\",\"chai\":\"^4.0.2\",\"deep-equal\":\"^1.0.1\",\"mocha\":\"^2.5.3\",\"onchange\":\"3.*\",\"pre-commit\":\"^1.1.3\",\"readline-sync\":\"^1.4.5\",\"shelljs\":\"^0.6.0\",\"tick42-gateway\":\"0.2.7\",\"tick42-webpack-config\":\"4.1.6\",\"tslint\":\"^5.11.0\",\"typescript\":\"^3.0.1\",\"webpack\":\"2.3.3\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./package.json\n// module id = 12\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nvar ConnectionImpl = (function () {\r\n    function ConnectionImpl(settings) {\r\n        this.messageHandlers = {};\r\n        this.ids = 1;\r\n        this.registry = callback_registry_1.default();\r\n        this._connected = false;\r\n        this._settings = settings;\r\n        this._logger = settings.logger;\r\n    }\r\n    ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        this._protocol = protocol;\r\n        this._transport = transport;\r\n        this._transport.onConnectedChanged(this.handleConnectionChanged.bind(this));\r\n        this._transport.onMessage(this.handleTransportMessage.bind(this));\r\n    };\r\n    ConnectionImpl.prototype.send = function (product, type, message, id, options) {\r\n        if (this._transport.isObjectBasedTransport) {\r\n            var msg = this._protocol.createObjectMessage(product, type, message, id);\r\n            return this._transport.sendObject(msg, product, type, options);\r\n        }\r\n        else {\r\n            var strMessage = this._protocol.createStringMessage(product, type, message, id);\r\n            return this._transport.send(strMessage, product, type, options);\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.on = function (product, type, messageHandler) {\r\n        type = type.toLowerCase();\r\n        if (this.messageHandlers[type] === undefined) {\r\n            this.messageHandlers[type] = {};\r\n        }\r\n        var id = this.ids++;\r\n        this.messageHandlers[type][id] = messageHandler;\r\n        return {\r\n            type: type,\r\n            id: id,\r\n        };\r\n    };\r\n    ConnectionImpl.prototype.off = function (info) {\r\n        delete this.messageHandlers[info.type.toLowerCase()][info.id];\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"isConnected\", {\r\n        get: function () {\r\n            return this._connected;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.connected = function (callback) {\r\n        if (this._connected) {\r\n            callback(this._settings.ws || this._settings.http);\r\n        }\r\n        return this.registry.add(\"connected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.disconnected = function (callback) {\r\n        return this.registry.add(\"disconnected\", callback);\r\n    };\r\n    ConnectionImpl.prototype.login = function (authRequest) {\r\n        this._transport.open();\r\n        return this._protocol.login(authRequest);\r\n    };\r\n    ConnectionImpl.prototype.logout = function () {\r\n        this._protocol.logout();\r\n        this._transport.close();\r\n    };\r\n    ConnectionImpl.prototype.loggedIn = function (callback) {\r\n        return this._protocol.loggedIn(callback);\r\n    };\r\n    Object.defineProperty(ConnectionImpl.prototype, \"protocolVersion\", {\r\n        get: function () {\r\n            return this._settings.protocolVersion || 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        return {\r\n            send: that.send.bind(that),\r\n            on: that.on.bind(that),\r\n            off: that.off.bind(that),\r\n            login: that.login.bind(that),\r\n            logout: that.logout.bind(that),\r\n            loggedIn: that.loggedIn.bind(that),\r\n            connected: that.connected.bind(that),\r\n            disconnected: that.disconnected.bind(that),\r\n            get protocolVersion() {\r\n                return that.protocolVersion;\r\n            }\r\n        };\r\n    };\r\n    ConnectionImpl.prototype.distributeMessage = function (message, type) {\r\n        var _this = this;\r\n        var handlers = this.messageHandlers[type.toLowerCase()];\r\n        if (handlers !== undefined) {\r\n            Object.keys(handlers).forEach(function (handlerId) {\r\n                var handler = handlers[handlerId];\r\n                if (handler !== undefined) {\r\n                    try {\r\n                        handler(message);\r\n                    }\r\n                    catch (error) {\r\n                        _this._logger.error(\"Message handler failed with \" + error.stack);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleConnectionChanged = function (connected) {\r\n        if (this._connected === connected) {\r\n            return;\r\n        }\r\n        this._connected = connected;\r\n        if (connected) {\r\n            this.registry.execute(\"connected\");\r\n        }\r\n        else {\r\n            this.registry.execute(\"disconnected\");\r\n        }\r\n    };\r\n    ConnectionImpl.prototype.handleTransportMessage = function (msg) {\r\n        var msgObj;\r\n        if (typeof msg === \"string\") {\r\n            msgObj = this._protocol.processStringMessage(msg);\r\n        }\r\n        else {\r\n            msgObj = this._protocol.processObjectMessage(msg);\r\n        }\r\n        this.distributeMessage(msgObj.msg, msgObj.msgType);\r\n    };\r\n    return ConnectionImpl;\r\n}());\r\nexports.default = ConnectionImpl;\r\n//# sourceMappingURL=connection.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/connection.js\n// module id = 13\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.GW_MESSAGE_CREATE_CONTEXT = \"create-context\";\r\nexports.GW_MESSAGE_ACTIVITY_CREATED = \"created\";\r\nexports.GW_MESSAGE_ACTIVITY_DESTROYED = \"destroyed\";\r\nexports.GW_MESSAGE_CONTEXT_CREATED = \"context-created\";\r\nexports.GW_MESSAGE_CONTEXT_ADDED = \"context-added\";\r\nexports.GW_MESSAGE_SUBSCRIBE_CONTEXT = \"subscribe-context\";\r\nexports.GW_MESSAGE_SUBSCRIBED_CONTEXT = \"subscribed-context\";\r\nexports.GW_MESSAGE_UNSUBSCRIBE_CONTEXT = \"unsubscribe-context\";\r\nexports.GW_MESSAGE_DESTROY_CONTEXT = \"destroy-context\";\r\nexports.GW_MESSAGE_CONTEXT_DESTROYED = \"context-destroyed\";\r\nexports.GW_MESSAGE_UPDATE_CONTEXT = \"update-context\";\r\nexports.GW_MESSAGE_CONTEXT_UPDATED = \"context-updated\";\r\nexports.GW_MESSAGE_JOINED_ACTIVITY = \"joined\";\r\n//# sourceMappingURL=gw3Messages.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/contexts/bridges/gw3/gw3Messages.js\n// module id = 14\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection = {\r\n    protocolVersion: -1,\r\n    send: function (product, type, message, id, options) {\r\n        return Promise.resolve(undefined);\r\n    },\r\n    on: function (product, type, messageHandler) {\r\n        return { type: \"1\", id: 1 };\r\n    },\r\n    off: function (info) {\r\n    },\r\n    login: function (message) {\r\n        return undefined;\r\n    },\r\n    logout: function () {\r\n    },\r\n    loggedIn: function (callback) {\r\n        return undefined;\r\n    },\r\n    connected: function (callback) {\r\n        return undefined;\r\n    },\r\n    disconnected: function (callback) {\r\n        return undefined;\r\n    },\r\n};\r\nexports.default = connection;\r\n//# sourceMappingURL=dummyConnection.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/dummyConnection.js\n// module id = 15\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar main_1 = require(\"./metrics/main\");\r\nvar main_2 = require(\"./connection/main\");\r\nvar main_3 = require(\"./logger/main\");\r\nvar main_4 = require(\"./agm/main\");\r\nvar main_5 = require(\"./bus/main\");\r\nvar config_1 = require(\"./config\");\r\nvar dummyConnection_1 = require(\"./dummyConnection\");\r\nvar timer_1 = require(\"./timer\");\r\nvar utils_1 = require(\"./utils\");\r\nvar dummyConnection_2 = require(\"./dummyConnection\");\r\nvar main_6 = require(\"./contexts/main\");\r\nvar contextMessageReplaySpec_1 = require(\"./contexts/contextMessageReplaySpec\");\r\nvar GlueCore = function (userConfig, ext) {\r\n    var gdVersion = -1;\r\n    var hc;\r\n    var glue42gd;\r\n    if (typeof window !== \"undefined\") {\r\n        gdVersion = utils_1.default.getGDMajorVersion();\r\n        if (gdVersion === 2) {\r\n            hc = window.htmlContainer;\r\n        }\r\n        else if (gdVersion >= 3) {\r\n            glue42gd = window.glue42gd;\r\n        }\r\n    }\r\n    var glueInitTimer = timer_1.default();\r\n    userConfig = userConfig || {};\r\n    ext = ext || {};\r\n    var internalConfig = config_1.default(userConfig, ext, hc, glue42gd, gdVersion);\r\n    var _connection;\r\n    var _agm;\r\n    var _logger;\r\n    var _rootMetrics;\r\n    var _metrics;\r\n    var _contexts;\r\n    var _bus;\r\n    var libs = {};\r\n    function registerLib(name, inner, t) {\r\n        inner.initStartTime = t.startTime;\r\n        if (inner.ready) {\r\n            inner.ready().then(function () {\r\n                inner.initTime = t.stop();\r\n                inner.initEndTime = t.endTime;\r\n            });\r\n        }\r\n        else {\r\n            inner.initTime = t.stop();\r\n            inner.initEndTime = t.endTime;\r\n        }\r\n        libs[name] = inner;\r\n        GlueCore[name] = inner;\r\n    }\r\n    function setupConnection() {\r\n        var initTimer = timer_1.default();\r\n        internalConfig.connection.logger = _logger.subLogger(\"connection\");\r\n        _connection = main_2.default(internalConfig.connection);\r\n        var authPromise = Promise.resolve(internalConfig.auth);\r\n        if (internalConfig.connection && !internalConfig.auth) {\r\n            var protocolVersion = internalConfig.connection.protocolVersion;\r\n            if (!protocolVersion || protocolVersion === 1) {\r\n                registerLib(\"connection\", _connection, initTimer);\r\n                return Promise.resolve({});\r\n            }\r\n            if (protocolVersion === 2) {\r\n                return Promise.reject(\"You need to provide auth information\");\r\n            }\r\n            if (protocolVersion === 3) {\r\n                if (glue42gd) {\r\n                    authPromise = glue42gd.getGWToken().then(function (token) {\r\n                        return {\r\n                            gatewayToken: token\r\n                        };\r\n                    });\r\n                }\r\n                else {\r\n                    authPromise = Promise.reject(\"You need to provide auth information\");\r\n                }\r\n            }\r\n        }\r\n        return authPromise\r\n            .then(function (authConfig) {\r\n            var authRequest;\r\n            if (typeof authConfig === \"string\" || typeof authConfig === \"number\") {\r\n                authRequest = {\r\n                    token: authConfig\r\n                };\r\n            }\r\n            else if (Object.prototype.toString.call(authConfig) === \"[object Object]\") {\r\n                authRequest = authConfig;\r\n            }\r\n            else {\r\n                throw new Error(\"Invalid auth object - \" + JSON.stringify(authConfig));\r\n            }\r\n            return authRequest;\r\n        })\r\n            .then(function (authRequest) {\r\n            return _connection.login(authRequest);\r\n        })\r\n            .then(function (identity) {\r\n            if (identity) {\r\n                if (identity.machine) {\r\n                    internalConfig.agm.instance.machine = identity.machine;\r\n                }\r\n                if (identity.user) {\r\n                    internalConfig.agm.instance.user = identity.user;\r\n                }\r\n            }\r\n            registerLib(\"connection\", _connection, initTimer);\r\n            return internalConfig;\r\n        })\r\n            .catch(function (e) {\r\n            if (_connection) {\r\n                _connection.logout();\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n    function setupLogger() {\r\n        var initTimer = timer_1.default();\r\n        var loggerConfig = {\r\n            identity: internalConfig.identity,\r\n            getConnection: function () {\r\n                return _connection || dummyConnection_1.default;\r\n            },\r\n            publish: internalConfig.logger.publish || \"off\",\r\n            console: internalConfig.logger.console || \"info\",\r\n            metrics: (internalConfig.metrics && internalConfig.logger.metrics) || \"off\"\r\n        };\r\n        _logger = main_3.default(loggerConfig);\r\n        registerLib(\"logger\", _logger, initTimer);\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupMetrics() {\r\n        if (internalConfig.metrics) {\r\n            var initTimer = timer_1.default();\r\n            _rootMetrics = main_1.default({\r\n                identity: internalConfig.metrics.identity,\r\n                connection: internalConfig.metrics ? _connection : dummyConnection_1.default,\r\n                logger: _logger.subLogger(\"metrics\")\r\n            });\r\n            _metrics = _rootMetrics.subSystem(\"App\");\r\n            var reportingSystem_1 = _metrics.subSystem(\"reporting\");\r\n            var def_1 = {\r\n                name: \"features\",\r\n                conflation: 1,\r\n            };\r\n            var _featureMetric_1;\r\n            _metrics.featureMetric = function (name, action, payload) {\r\n                if (typeof name === \"undefined\" || name === \"\") {\r\n                    throw new Error(\"name is mandatory\");\r\n                }\r\n                else if (typeof action === \"undefined\" || action === \"\") {\r\n                    throw new Error(\"action is mandatory\");\r\n                }\r\n                else if (typeof payload === \"undefined\" || payload === \"\") {\r\n                    throw new Error(\"payload is mandatory\");\r\n                }\r\n                if (!_featureMetric_1) {\r\n                    _featureMetric_1 = reportingSystem_1.objectMetric(def_1, { name: name, action: action, payload: payload });\r\n                }\r\n                else {\r\n                    _featureMetric_1.update({\r\n                        name: name,\r\n                        action: action,\r\n                        payload: payload\r\n                    });\r\n                }\r\n            };\r\n            _logger.metricsLevel(\"warn\", _metrics.parent.subSystem(\"LogEvents\"));\r\n            registerLib(\"metrics\", _metrics, initTimer);\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n    function setupAGM() {\r\n        var initTimer = timer_1.default();\r\n        var agmConfig = {\r\n            instance: internalConfig.agm.instance,\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"agm\"),\r\n            forceGW: internalConfig.connection && internalConfig.connection.force,\r\n            gdVersion: gdVersion,\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            main_4.default(agmConfig)\r\n                .then(function (agmLib) {\r\n                _agm = agmLib;\r\n                registerLib(\"agm\", _agm, initTimer);\r\n                resolve(internalConfig);\r\n            })\r\n                .catch(function (err) {\r\n                return reject(err);\r\n            });\r\n        });\r\n    }\r\n    function setupContexts() {\r\n        var hasActivities = (internalConfig.activities && dummyConnection_2.default.protocolVersion === 3);\r\n        var needsContexts = internalConfig.contexts || hasActivities;\r\n        if (needsContexts) {\r\n            var initTimer = timer_1.default();\r\n            _contexts = new main_6.ContextsModule({\r\n                connection: _connection,\r\n                logger: _logger.subLogger(\"contexts\"),\r\n                gdMajorVersion: gdVersion\r\n            });\r\n            registerLib(\"contexts\", _contexts, initTimer);\r\n            return _contexts;\r\n        }\r\n        else {\r\n            var replayer = dummyConnection_2.default.replayer;\r\n            if (replayer) {\r\n                replayer.drain(contextMessageReplaySpec_1.ContextMessageReplaySpec.name, null);\r\n            }\r\n        }\r\n    }\r\n    function setupExternalLibs(externalLibs) {\r\n        try {\r\n            externalLibs.forEach(function (lib) {\r\n                setupExternalLib(lib.name, lib.create);\r\n            });\r\n            return Promise.resolve();\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    function setupExternalLib(name, createCallback) {\r\n        var initTimer = timer_1.default();\r\n        var lib = createCallback(libs);\r\n        if (lib) {\r\n            registerLib(name, lib, initTimer);\r\n        }\r\n    }\r\n    function waitForLibs() {\r\n        var libsReadyPromises = Object.keys(libs).map(function (key) {\r\n            var lib = libs[key];\r\n            return lib.ready ?\r\n                lib.ready() : Promise.resolve();\r\n        });\r\n        return Promise.all(libsReadyPromises);\r\n    }\r\n    function constructGlueObject() {\r\n        var feedbackFunc = function () {\r\n            if (!_agm) {\r\n                return;\r\n            }\r\n            _agm.invoke(\"T42.ACS.Feedback\", {}, \"best\");\r\n        };\r\n        var info = { glueVersion: internalConfig.version };\r\n        glueInitTimer.stop();\r\n        var glue = {\r\n            feedback: feedbackFunc,\r\n            info: info,\r\n            version: internalConfig.version,\r\n            userConfig: userConfig,\r\n            done: function () {\r\n                _connection.logout();\r\n                return Promise.resolve();\r\n            }\r\n        };\r\n        glue.performance = {\r\n            get browser() {\r\n                return window.performance.timing.toJSON();\r\n            },\r\n            get memory() {\r\n                return window.performance.memory;\r\n            },\r\n            get initTimes() {\r\n                var result = Object.keys(glue)\r\n                    .filter(function (key) {\r\n                    if (key === \"initTimes\") {\r\n                        return false;\r\n                    }\r\n                    return glue[key].initTime;\r\n                })\r\n                    .map(function (key) {\r\n                    return {\r\n                        name: key,\r\n                        time: glue[key].initTime,\r\n                        startTime: glue[key].initStartTime,\r\n                        endTime: glue[key].initEndTime\r\n                    };\r\n                });\r\n                result.push({\r\n                    name: \"glue\",\r\n                    startTime: glueInitTimer.startTime,\r\n                    endTime: glueInitTimer.endTime,\r\n                    time: glueInitTimer.period\r\n                });\r\n                return result;\r\n            }\r\n        };\r\n        Object.keys(libs).forEach(function (key) {\r\n            var lib = libs[key];\r\n            glue[key] = lib;\r\n            info[key] = lib.version;\r\n        });\r\n        if (hc && hc.perfDataNeeded && hc.updatePerfData) {\r\n            var delay = hc.perfDataDelay || 100;\r\n            setTimeout(function () {\r\n                hc.updatePerfData(glue.performance);\r\n            }, delay);\r\n        }\r\n        if (glue42gd && glue42gd.updatePerfData) {\r\n            glue42gd.updatePerfData(glue.performance);\r\n        }\r\n        glue.config = {};\r\n        if (ext.enrichGlue) {\r\n            ext.enrichGlue(glue);\r\n        }\r\n        Object.keys(internalConfig).forEach(function (k) {\r\n            glue.config[k] = internalConfig[k];\r\n        });\r\n        if (ext.extOptions) {\r\n            Object.keys(ext.extOptions).forEach(function (k) {\r\n                glue.config[k] = ext.extOptions[k];\r\n            });\r\n        }\r\n        return glue;\r\n    }\r\n    function setupBus() {\r\n        if (!internalConfig.bus) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        var initTimer = timer_1.default();\r\n        var busSettings = {\r\n            connection: _connection,\r\n            logger: _logger.subLogger(\"bus\")\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            main_5.default(busSettings)\r\n                .then(function (busLib) {\r\n                _bus = busLib;\r\n                registerLib(\"bus\", _bus, initTimer);\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                return reject(err);\r\n            });\r\n        });\r\n    }\r\n    return setupLogger()\r\n        .then(setupConnection)\r\n        .then(function () { return Promise.all([setupMetrics(), setupAGM(), setupContexts(), setupBus()]); })\r\n        .then(function () {\r\n        return setupExternalLibs(internalConfig.libs || []);\r\n    })\r\n        .then(waitForLibs)\r\n        .then(constructGlueObject)\r\n        .catch(function (err) {\r\n        return Promise.reject({\r\n            err: err,\r\n            libs: libs\r\n        });\r\n    });\r\n};\r\nexports.default = GlueCore;\r\n//# sourceMappingURL=glue.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/glue.js\n// module id = 16\n// module chunks = 0","/**\n * Secure random string generator with custom alphabet.\n *\n * Alphabet must contain 256 symbols or less. Otherwise, the generator\n * will not be secure.\n *\n * @param {generator} random The random bytes generator.\n * @param {string} alphabet Symbols to be used in new random string.\n * @param {size} size The number of symbols in new random string.\n *\n * @return {string} Random string.\n *\n * @example\n * const format = require('nanoid/format')\n *\n * function random (size) {\n *   const result = []\n *   for (let i = 0; i < size; i++) {\n *     result.push(randomByte())\n *   }\n *   return result\n * }\n *\n * format(random, \"abcdef\", 5) //=> \"fbaef\"\n *\n * @name format\n * @function\n */\nmodule.exports = function (random, alphabet, size) {\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  var step = Math.ceil(1.6 * mask * size / alphabet.length)\n\n  var id = ''\n  while (true) {\n    var bytes = random(step)\n    for (var i = 0; i < step; i++) {\n      var byte = bytes[i] & mask\n      if (alphabet[byte]) {\n        id += alphabet[byte]\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\n/**\n * @callback generator\n * @param {number} bytes The number of bytes to generate.\n * @return {number[]} Random bytes.\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/nanoid/format.js\n// module id = 17\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shortid/lib/build.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shortid/lib/generate.js\n// module id = 20\n// module chunks = 0","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shortid/lib/index.js\n// module id = 21\n// module chunks = 0","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shortid/lib/is-valid.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shortid/lib/random/random-byte-browser.js\n// module id = 23\n// module chunks = 0","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shortid/lib/random/random-from-seed.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nmodule.exports = 0;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/shortid/lib/util/cluster-worker-id-browser.js\n// module id = 25\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar global = (function() { return this; })();\n\n/**\n * WebSocket constructor.\n */\n\nvar WebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WebSocket ? ws : null;\n\n/**\n * WebSocket constructor.\n *\n * The third `opts` options object gets ignored in web browsers, since it's\n * non-standard, and throws a TypeError if passed to the constructor.\n * See: https://github.com/einaros/ws/issues/227\n *\n * @param {String} uri\n * @param {Array} protocols (optional)\n * @param {Object) opts (optional)\n * @api public\n */\n\nfunction ws(uri, protocols, opts) {\n  var instance;\n  if (protocols) {\n    instance = new WebSocket(uri, protocols);\n  } else {\n    instance = new WebSocket(uri);\n  }\n  return instance;\n}\n\nif (WebSocket) ws.prototype = WebSocket.prototype;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ws/lib/browser.js\n// module id = 26\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar client_1 = require(\"./client/client\");\r\nvar server_1 = require(\"./server/server\");\r\nvar AGMImpl = (function () {\r\n    function AGMImpl(protocol, clientRepository, serverRepository, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n        this.client = new client_1.default(protocol, clientRepository, instance, configuration);\r\n        this.server = new server_1.default(protocol, serverRepository, instance, configuration);\r\n    }\r\n    AGMImpl.prototype.serverRemoved = function (callback) {\r\n        return this.client.serverRemoved(callback);\r\n    };\r\n    AGMImpl.prototype.serverAdded = function (callback) {\r\n        return this.client.serverAdded(callback);\r\n    };\r\n    AGMImpl.prototype.serverMethodRemoved = function (callback) {\r\n        return this.client.serverMethodRemoved(callback);\r\n    };\r\n    AGMImpl.prototype.serverMethodAdded = function (callback) {\r\n        return this.client.serverMethodAdded(callback);\r\n    };\r\n    AGMImpl.prototype.methodRemoved = function (callback) {\r\n        return this.client.methodRemoved(callback);\r\n    };\r\n    AGMImpl.prototype.methodAdded = function (callback) {\r\n        return this.client.methodAdded(callback);\r\n    };\r\n    AGMImpl.prototype.methodsForInstance = function (instance) {\r\n        return this.client.methodsForInstance(instance);\r\n    };\r\n    AGMImpl.prototype.methods = function (methodFilter) {\r\n        return this.client.methods(methodFilter);\r\n    };\r\n    AGMImpl.prototype.servers = function (methodFilter) {\r\n        return this.client.servers(methodFilter);\r\n    };\r\n    AGMImpl.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        return this.client.subscribe(method, options, successCallback, errorCallback);\r\n    };\r\n    AGMImpl.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        return this.server.createStream(streamDef, callbacks, successCallback, errorCallback);\r\n    };\r\n    AGMImpl.prototype.unregister = function (methodFilter) {\r\n        return this.server.unregister(methodFilter);\r\n    };\r\n    AGMImpl.prototype.registerAsync = function (methodDefinition, callback) {\r\n        return this.server.registerAsync(methodDefinition, callback);\r\n    };\r\n    AGMImpl.prototype.register = function (methodDefinition, callback) {\r\n        return this.server.register(methodDefinition, callback);\r\n    };\r\n    AGMImpl.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        return this.client.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n    };\r\n    AGMImpl.prototype.updateInstance = function (newInstance) {\r\n        if (this.instance.machine === undefined) {\r\n            this.instance.machine = newInstance.MachineName || newInstance.machine;\r\n        }\r\n        if (this.instance.user === undefined) {\r\n            this.instance.user = newInstance.UserName || newInstance.user;\r\n        }\r\n        if (this.instance.environment === undefined) {\r\n            this.instance.environment = newInstance.Environment || newInstance.environment;\r\n        }\r\n        if (this.instance.region === undefined) {\r\n            this.instance.region = newInstance.Region || newInstance.region;\r\n        }\r\n    };\r\n    return AGMImpl;\r\n}());\r\nexports.default = AGMImpl;\r\n//# sourceMappingURL=agm.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/agm.js\n// module id = 27\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar invoke_1 = require(\"./invoke\");\r\nvar promisify_1 = require(\"../helpers/promisify\");\r\nvar Client = (function () {\r\n    function Client(protocol, repo, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.repo = repo;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n        this.clientInvocations = new invoke_1.default(protocol);\r\n    }\r\n    Client.prototype.subscribe = function (method, options, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var callProtocolSubscribe = function (targetServers, stream, successProxy, errorProxy) {\r\n            _this.protocol.client.subscribe(stream, options.arguments, targetServers, { methodResponseTimeout: options.waitTimeoutMs }, successProxy, errorProxy);\r\n        };\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (sub) {\r\n                resolve(sub);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            var methodDef;\r\n            if (typeof method === \"string\") {\r\n                methodDef = { name: method };\r\n            }\r\n            else {\r\n                methodDef = method;\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            var target = options.target;\r\n            if (target === undefined) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\", \"best\", or an instance.' });\r\n            }\r\n            if (options.methodResponseTimeout === undefined) {\r\n                options.methodResponseTimeout = options.method_response_timeout;\r\n                if (options.methodResponseTimeout === undefined) {\r\n                    options.methodResponseTimeout = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (options.waitTimeoutMs === undefined) {\r\n                options.waitTimeoutMs = options.wait_for_method_timeout;\r\n                if (options.waitTimeoutMs === undefined) {\r\n                    options.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            var delayStep = 500;\r\n            var delayTillNow = 0;\r\n            var currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n            if (currentServers.length > 0) {\r\n                callProtocolSubscribe(currentServers, currentServers[0].methods[0], successProxy, errorProxy);\r\n            }\r\n            else {\r\n                var retry_1 = function () {\r\n                    delayTillNow += delayStep;\r\n                    currentServers = _this.getServerMethodsByFilterAndTarget(methodDef, target);\r\n                    if (currentServers.length > 0) {\r\n                        var streamInfo = currentServers[0].methods[0];\r\n                        callProtocolSubscribe(currentServers, streamInfo, successProxy, errorProxy);\r\n                    }\r\n                    else if (delayTillNow >= options.waitTimeoutMs) {\r\n                        var def = typeof method === \"string\" ? { name: method } : method;\r\n                        var info = {\r\n                            id: undefined,\r\n                            info: def,\r\n                            getInfoForUser: function () {\r\n                                return methodDef;\r\n                            },\r\n                            protocolState: undefined,\r\n                        };\r\n                        callProtocolSubscribe(currentServers, info, successProxy, errorProxy);\r\n                    }\r\n                    else {\r\n                        setTimeout(retry_1, delayStep);\r\n                    }\r\n                };\r\n                setTimeout(retry_1, delayStep);\r\n            }\r\n        });\r\n        return promisify_1.default(promise, successCallback, errorCallback);\r\n    };\r\n    Client.prototype.servers = function (methodFilter) {\r\n        return this.getServers(methodFilter).map(function (serverMethodMap) {\r\n            return serverMethodMap.server.getInfoForUser();\r\n        });\r\n    };\r\n    Client.prototype.methods = function (methodFilter) {\r\n        return this.getMethods(methodFilter).map(function (m) {\r\n            return m.getInfoForUser();\r\n        });\r\n    };\r\n    Client.prototype.methodsForInstance = function (instance) {\r\n        return this.getMethodsForInstance(instance).map(function (m) {\r\n            return m.getInfoForUser();\r\n        });\r\n    };\r\n    Client.prototype.methodAdded = function (callback) {\r\n        return this.repo.onMethodAdded(function (method) {\r\n            callback(method.getInfoForUser());\r\n        });\r\n    };\r\n    Client.prototype.methodRemoved = function (callback) {\r\n        return this.repo.onMethodRemoved(function (method) {\r\n            callback(method.getInfoForUser());\r\n        });\r\n    };\r\n    Client.prototype.serverAdded = function (callback) {\r\n        return this.repo.onServerAdded(function (server) {\r\n            callback(server.getInfoForUser());\r\n        });\r\n    };\r\n    Client.prototype.serverRemoved = function (callback) {\r\n        return this.repo.onServerRemoved(function (server, reason) {\r\n            callback(server.getInfoForUser(), reason);\r\n        });\r\n    };\r\n    Client.prototype.serverMethodAdded = function (callback) {\r\n        return this.repo.onServerMethodAdded(function (server, method) {\r\n            callback({ server: server.getInfoForUser(), method: method.getInfoForUser() });\r\n        });\r\n    };\r\n    Client.prototype.serverMethodRemoved = function (callback) {\r\n        return this.repo.onServerMethodRemoved(function (server, method) {\r\n            callback({ server: server.getInfoForUser(), method: method.getInfoForUser() });\r\n        });\r\n    };\r\n    Client.prototype.invoke = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            var successProxy = function (args) {\r\n                resolve(args);\r\n            };\r\n            var errorProxy = function (err) {\r\n                reject(err);\r\n            };\r\n            if (!argumentObj) {\r\n                argumentObj = {};\r\n            }\r\n            if (!target) {\r\n                target = \"best\";\r\n            }\r\n            if (typeof target === \"string\" && target !== \"all\" && target !== \"best\") {\r\n                reject({ message: '\"' + target + '\" is not a valid target. Valid targets are \"all\" and \"best\".' });\r\n            }\r\n            if (!additionalOptions) {\r\n                additionalOptions = {};\r\n            }\r\n            if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                additionalOptions.methodResponseTimeoutMs = additionalOptions.method_response_timeout;\r\n                if (additionalOptions.methodResponseTimeoutMs === undefined) {\r\n                    additionalOptions.methodResponseTimeoutMs = _this.configuration.methodResponseTimeout;\r\n                }\r\n            }\r\n            if (additionalOptions.waitTimeoutMs === undefined) {\r\n                additionalOptions.waitTimeoutMs = additionalOptions.wait_for_method_timeout;\r\n                if (additionalOptions.waitTimeoutMs === undefined) {\r\n                    additionalOptions.waitTimeoutMs = _this.configuration.waitTimeoutMs;\r\n                }\r\n            }\r\n            if (additionalOptions.waitTimeoutMs !== undefined && typeof additionalOptions.waitTimeoutMs !== \"number\") {\r\n                reject({ message: '\"' + additionalOptions.waitTimeoutMs + '\" is not a valid number for \\'waitTimeoutMs\\'' });\r\n                return;\r\n            }\r\n            if (typeof argumentObj !== \"object\") {\r\n                reject({ message: \"The method arguments must be an object.\" });\r\n                return;\r\n            }\r\n            if (typeof methodFilter === \"string\") {\r\n                methodFilter = { name: methodFilter };\r\n            }\r\n            var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodFilter, target);\r\n            if (serversMethodMap.length === 0) {\r\n                _this.invokeUnExisting(methodFilter, argumentObj, target, additionalOptions, successProxy, errorProxy);\r\n            }\r\n            else if (serversMethodMap.length === 1) {\r\n                var serverMethodPair = serversMethodMap[0];\r\n                _this.clientInvocations.invoke(serverMethodPair.methods[0], argumentObj, serverMethodPair.server, additionalOptions, successProxy, errorProxy);\r\n            }\r\n            else {\r\n                _this.invokeOnAll(serversMethodMap, argumentObj, additionalOptions, successProxy, errorProxy);\r\n            }\r\n        });\r\n        return promisify_1.default(promise, success, error);\r\n    };\r\n    Client.prototype.invokeUnExisting = function (methodFilter, argumentObj, target, additionalOptions, success, error) {\r\n        var _this = this;\r\n        var callError = function () {\r\n            error({\r\n                method: methodFilter,\r\n                called_with: argumentObj,\r\n                message: \"Can not find a method matching \" + JSON.stringify(methodFilter) + \" with server filter \" + JSON.stringify(target),\r\n                executed_by: undefined,\r\n                returned: undefined,\r\n                status: undefined,\r\n            });\r\n        };\r\n        if (additionalOptions.waitTimeoutMs === 0) {\r\n            callError();\r\n        }\r\n        else {\r\n            var delayStep_1 = 500;\r\n            var delayTillNow_1 = 0;\r\n            var retry_2 = function () {\r\n                delayTillNow_1 += delayStep_1;\r\n                var serversMethodMap = _this.getServerMethodsByFilterAndTarget(methodFilter, target);\r\n                if (serversMethodMap.length > 0) {\r\n                    _this.invoke(methodFilter, argumentObj, target, additionalOptions, success, error);\r\n                }\r\n                else if (delayTillNow_1 >= additionalOptions.waitTimeoutMs) {\r\n                    callError();\r\n                }\r\n                else {\r\n                    setTimeout(retry_2, delayStep_1);\r\n                }\r\n            };\r\n            setTimeout(retry_2, delayStep_1);\r\n        }\r\n    };\r\n    Client.prototype.invokeOnAll = function (serverMethodsMap, argumentObj, additionalOptions, success, error) {\r\n        var _this = this;\r\n        var successes = [];\r\n        var errors = [];\r\n        var successCallback = function (result) {\r\n            successes.push(result);\r\n            sendResponse();\r\n        };\r\n        var errorCallback = function (err) {\r\n            errors.push(err);\r\n            sendResponse();\r\n        };\r\n        var sendResponse = function () {\r\n            if (successes.length + errors.length < serverMethodsMap.length) {\r\n                return;\r\n            }\r\n            if (successes.length !== 0) {\r\n                var result_1 = successes.reduce(function (obj, invResult) {\r\n                    obj.method = invResult.method;\r\n                    obj.called_with = invResult.called_with;\r\n                    obj.returned = invResult.returned;\r\n                    obj.all_return_values.push({\r\n                        executed_by: invResult.executed_by,\r\n                        returned: invResult.returned,\r\n                        called_with: invResult.called_with,\r\n                        method: invResult.method,\r\n                        message: undefined,\r\n                        status: undefined,\r\n                    });\r\n                    obj.executed_by = invResult.executed_by;\r\n                    return obj;\r\n                }, { all_return_values: [] });\r\n                if (errors.length !== 0) {\r\n                    result_1.all_errors = [];\r\n                    errors.forEach(function (obj) {\r\n                        result_1.all_errors.push({\r\n                            executed_by: obj.executed_by,\r\n                            called_with: obj.called_with,\r\n                            name: obj.method.name,\r\n                            message: obj.message,\r\n                        });\r\n                    });\r\n                }\r\n                success(result_1);\r\n            }\r\n            else if (errors.length !== 0) {\r\n                error(errors.reduce(function (obj, currentError) {\r\n                    obj.method = currentError.method;\r\n                    obj.called_with = currentError.called_with;\r\n                    obj.message = currentError.message;\r\n                    obj.all_errors.push({\r\n                        executed_by: currentError.executed_by,\r\n                        message: currentError.message,\r\n                    });\r\n                    return obj;\r\n                }, { all_errors: [] }));\r\n            }\r\n        };\r\n        serverMethodsMap.forEach(function (serverMethodsPair) {\r\n            _this.clientInvocations.invoke(serverMethodsPair.methods[0], argumentObj, serverMethodsPair.server, additionalOptions, successCallback, errorCallback);\r\n        });\r\n    };\r\n    Client.prototype.filterByTarget = function (target, serverMethodMap) {\r\n        var _this = this;\r\n        var targetServerMethod = [];\r\n        if (typeof target === \"string\") {\r\n            if (target === \"all\") {\r\n                targetServerMethod = serverMethodMap;\r\n            }\r\n            else if (target === \"best\") {\r\n                var matchingMachine = serverMethodMap.filter(function (serverMethodPair) {\r\n                    var serverInfo = serverMethodPair.server.info;\r\n                    return serverInfo.machine === _this.instance.machine;\r\n                })[0];\r\n                if (matchingMachine) {\r\n                    return [matchingMachine];\r\n                }\r\n                targetServerMethod = serverMethodMap[0] !== undefined ? [serverMethodMap[0]] : [];\r\n            }\r\n        }\r\n        else {\r\n            if (!Array.isArray(target)) {\r\n                target = [target];\r\n            }\r\n            if (Array.isArray(target)) {\r\n                targetServerMethod = target.reduce(function (matches, filter) {\r\n                    var myMatches = serverMethodMap.filter(function (serverMethodPair) {\r\n                        return _this.instanceMatch(filter, serverMethodPair.server.info);\r\n                    });\r\n                    return matches.concat(myMatches);\r\n                }, []);\r\n            }\r\n        }\r\n        return targetServerMethod;\r\n    };\r\n    Client.prototype.instanceMatch = function (instanceFilter, instanceDefinition) {\r\n        return this.containsProps(instanceFilter, instanceDefinition);\r\n    };\r\n    Client.prototype.methodMatch = function (methodFilter, methodDefinition) {\r\n        return this.containsProps(methodFilter, methodDefinition);\r\n    };\r\n    Client.prototype.containsProps = function (filter, object) {\r\n        return Object.keys(filter).reduce(function (match, prop) {\r\n            if (!filter[prop] || typeof filter[prop] === \"function\") {\r\n                return match;\r\n            }\r\n            if (filter[prop].constructor === RegExp) {\r\n                if (!filter[prop].test(object[prop])) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return match;\r\n                }\r\n            }\r\n            else {\r\n                if (String(filter[prop]).toLowerCase() !== String(object[prop]).toLowerCase()) {\r\n                    return false;\r\n                }\r\n                else {\r\n                    return match;\r\n                }\r\n            }\r\n        }, true);\r\n    };\r\n    Client.prototype.getMethods = function (methodFilter) {\r\n        var _this = this;\r\n        if (methodFilter === undefined) {\r\n            return this.repo.getMethods();\r\n        }\r\n        if (typeof methodFilter === \"string\") {\r\n            methodFilter = { name: methodFilter };\r\n        }\r\n        return this.repo.getMethods().filter(function (method) {\r\n            return _this.methodMatch(methodFilter, method.info);\r\n        });\r\n    };\r\n    Client.prototype.getMethodsForInstance = function (instanceFilter) {\r\n        var _this = this;\r\n        var allServers = this.repo.getServers();\r\n        var matchingServers = allServers.filter(function (server) {\r\n            return _this.instanceMatch(instanceFilter, server.info);\r\n        });\r\n        if (matchingServers.length === 0) {\r\n            return [];\r\n        }\r\n        var resultMethodsObject = {};\r\n        if (matchingServers.length === 1) {\r\n            resultMethodsObject = matchingServers[0].methods;\r\n        }\r\n        else {\r\n            matchingServers.forEach(function (server) {\r\n                Object.keys(server.methods).forEach(function (methodKey) {\r\n                    var method = server.methods[methodKey];\r\n                    resultMethodsObject[method.id] = method;\r\n                });\r\n            });\r\n        }\r\n        return Object.keys(resultMethodsObject)\r\n            .map(function (key) {\r\n            return resultMethodsObject[key];\r\n        });\r\n    };\r\n    Client.prototype.getServers = function (methodFilter) {\r\n        var _this = this;\r\n        var servers = this.repo.getServers();\r\n        if (methodFilter === undefined) {\r\n            return servers.map(function (server) {\r\n                return { server: server };\r\n            });\r\n        }\r\n        var methods = this.getMethods(methodFilter);\r\n        if (methods === undefined) {\r\n            return [];\r\n        }\r\n        return servers.reduce(function (prev, current) {\r\n            var methodsForServer = _this.repo.getServerMethodsById(current.id);\r\n            var matchingMethods = methodsForServer.filter(function (method) {\r\n                return _this.methodMatch(methodFilter, method.info);\r\n            });\r\n            if (matchingMethods.length > 0) {\r\n                prev.push({ server: current, methods: matchingMethods });\r\n            }\r\n            return prev;\r\n        }, []);\r\n    };\r\n    Client.prototype.getServerMethodsByFilterAndTarget = function (methodFilter, target) {\r\n        var serversMethodMap = this.getServers(methodFilter);\r\n        return this.filterByTarget(target, serversMethodMap);\r\n    };\r\n    return Client;\r\n}());\r\nexports.default = Client;\r\n//# sourceMappingURL=client.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/client/client.js\n// module id = 28\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = require(\"../helpers/random\");\r\nvar ClientInvocations = (function () {\r\n    function ClientInvocations(_protocol) {\r\n        var _this = this;\r\n        this._protocol = _protocol;\r\n        this._pendingCallbacks = {};\r\n        _protocol.client.onInvocationResult(function (invocationId, executedBy, status, result, resultMessage) {\r\n            return _this.processInvocationResult(invocationId, executedBy, status, result, resultMessage);\r\n        });\r\n    }\r\n    ClientInvocations.prototype.invoke = function (method, argumentsObj, target, stuff, success, error) {\r\n        var invocationId = random_1.default();\r\n        this.registerInvocation(invocationId, {\r\n            method: method,\r\n            calledWith: argumentsObj,\r\n        }, success, error, stuff.methodResponseTimeoutMs);\r\n        this._protocol.client.invoke(invocationId, method, argumentsObj, target, stuff);\r\n    };\r\n    ClientInvocations.prototype.registerInvocation = function (invocationId, invocationInfo, success, error, timeout) {\r\n        var _this = this;\r\n        this._pendingCallbacks[invocationId] = { invocationInfo: invocationInfo, success: success, error: error };\r\n        setTimeout(function () {\r\n            if (_this._pendingCallbacks[invocationId] === undefined) {\r\n                return;\r\n            }\r\n            error({\r\n                method: invocationInfo.method.getInfoForUser(),\r\n                called_with: invocationInfo.calledWith,\r\n                executed_by: undefined,\r\n                status: undefined,\r\n                returned: undefined,\r\n                message: \"Invocation timeout (\" + timeout + \" ms) reached\",\r\n            });\r\n            delete _this._pendingCallbacks[invocationId];\r\n        }, timeout);\r\n    };\r\n    ClientInvocations.prototype.processInvocationResult = function (invocationId, executedBy, status, result, resultMessage) {\r\n        var callback = this._pendingCallbacks[invocationId];\r\n        if (callback === undefined) {\r\n            return;\r\n        }\r\n        if (status === 0 && typeof callback.success === \"function\") {\r\n            callback.success({\r\n                method: callback.invocationInfo.method.getInfoForUser(),\r\n                called_with: callback.invocationInfo.calledWith,\r\n                executed_by: executedBy,\r\n                returned: result,\r\n                message: resultMessage,\r\n                status: status,\r\n            });\r\n        }\r\n        else if (typeof callback.error === \"function\") {\r\n            callback.error({\r\n                method: callback.invocationInfo.method.getInfoForUser(),\r\n                called_with: callback.invocationInfo.calledWith,\r\n                executed_by: executedBy,\r\n                message: resultMessage,\r\n                status: status,\r\n                returned: result,\r\n            });\r\n        }\r\n        delete this._pendingCallbacks[invocationId];\r\n    };\r\n    return ClientInvocations;\r\n}());\r\nexports.default = ClientInvocations;\r\n//# sourceMappingURL=invoke.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/client/invoke.js\n// module id = 29\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nvar ClientRepository = (function () {\r\n    function ClientRepository() {\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n        this.callbacks = callback_registry_1.default();\r\n    }\r\n    ClientRepository.prototype.addServer = function (info, serverId) {\r\n        var _this = this;\r\n        var current = this.servers[serverId];\r\n        if (current) {\r\n            return current.id;\r\n        }\r\n        var serverEntry = {\r\n            id: serverId,\r\n            info: info,\r\n            methods: {},\r\n            getInfoForUser: function () {\r\n                var serverInfo = _this.createUserServerInfo(serverEntry.info);\r\n                serverInfo.getMethods = function () {\r\n                    return _this.getServerMethodsById(serverEntry.id).map(function (m) {\r\n                        return m.getInfoForUser();\r\n                    });\r\n                };\r\n                serverInfo.getStreams = function () {\r\n                    return _this.getServerMethodsById(serverEntry.id)\r\n                        .filter(function (method) {\r\n                        return method.info.supportsStreaming;\r\n                    })\r\n                        .map(function (m) {\r\n                        return m.getInfoForUser();\r\n                    });\r\n                };\r\n                return serverInfo;\r\n            },\r\n        };\r\n        this.servers[serverId] = serverEntry;\r\n        this.callbacks.execute(\"onServerAdded\", serverEntry);\r\n        return serverId;\r\n    };\r\n    ClientRepository.prototype.removeServerById = function (id, reason) {\r\n        var _this = this;\r\n        var server = this.servers[id];\r\n        Object.keys(server.methods).forEach(function (methodId) {\r\n            _this.removeServerMethod(id, methodId);\r\n        });\r\n        delete this.servers[id];\r\n        this.callbacks.execute(\"onServerRemoved\", server, reason);\r\n    };\r\n    ClientRepository.prototype.addServerMethod = function (serverId, method, protocolState) {\r\n        if (!protocolState) {\r\n            protocolState = {};\r\n        }\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var methodId = this.createMethodId(method);\r\n        if (server.methods[methodId]) {\r\n            return;\r\n        }\r\n        var that = this;\r\n        var methodEntity = {\r\n            id: methodId,\r\n            info: method,\r\n            getInfoForUser: function () {\r\n                var result = that.createUserMethodInfo(methodEntity.info);\r\n                result.getServers = function () {\r\n                    return that.getServersByMethod(methodId);\r\n                };\r\n                return result;\r\n            },\r\n            protocolState: protocolState,\r\n        };\r\n        server.methods[methodId] = methodEntity;\r\n        if (!this.methodsCount[methodId]) {\r\n            this.methodsCount[methodId] = 0;\r\n            this.callbacks.execute(\"onMethodAdded\", methodEntity);\r\n        }\r\n        this.methodsCount[methodId] = this.methodsCount[methodId] + 1;\r\n        this.callbacks.execute(\"onServerMethodAdded\", server, methodEntity);\r\n    };\r\n    ClientRepository.prototype.createMethodId = function (methodInfo) {\r\n        var accepts = methodInfo.accepts !== undefined ? methodInfo.accepts : \"\";\r\n        var returns = methodInfo.returns !== undefined ? methodInfo.returns : \"\";\r\n        return (methodInfo.name + accepts + returns).toLowerCase();\r\n    };\r\n    ClientRepository.prototype.removeServerMethod = function (serverId, methodId) {\r\n        var server = this.servers[serverId];\r\n        if (!server) {\r\n            throw new Error(\"server does not exists\");\r\n        }\r\n        var method = server.methods[methodId];\r\n        delete server.methods[methodId];\r\n        this.methodsCount[methodId] = this.methodsCount[methodId] - 1;\r\n        if (this.methodsCount[methodId] === 0) {\r\n            this.callbacks.execute(\"onMethodRemoved\", method);\r\n        }\r\n        this.callbacks.execute(\"onServerMethodRemoved\", server, method);\r\n    };\r\n    ClientRepository.prototype.getMethods = function () {\r\n        var _this = this;\r\n        var allMethods = {};\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                var method = server.methods[methodId];\r\n                allMethods[method.id] = method;\r\n            });\r\n        });\r\n        var methodsAsArray = Object.keys(allMethods).map(function (id) {\r\n            return allMethods[id];\r\n        });\r\n        return methodsAsArray;\r\n    };\r\n    ClientRepository.prototype.getServers = function () {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            allServers.push(server);\r\n        });\r\n        return allServers;\r\n    };\r\n    ClientRepository.prototype.getServerMethodsById = function (serverId) {\r\n        var server = this.servers[serverId];\r\n        return Object.keys(server.methods).map(function (id) {\r\n            return server.methods[id];\r\n        });\r\n    };\r\n    ClientRepository.prototype.onServerAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerAdded\", callback);\r\n        this.getServers().forEach(function (server) {\r\n            callback(server);\r\n        });\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodAdded\", callback);\r\n        this.getMethods().forEach(function (method) {\r\n            callback(method);\r\n        });\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodAdded = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodAdded\", callback);\r\n        this.getServers().forEach(function (server) {\r\n            var methods = server.methods;\r\n            Object.keys(methods).forEach(function (methodId) {\r\n                callback(server, methods[methodId]);\r\n            });\r\n        });\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.onServerMethodRemoved = function (callback) {\r\n        var unsubscribeFunc = this.callbacks.add(\"onServerMethodRemoved\", callback);\r\n        return unsubscribeFunc;\r\n    };\r\n    ClientRepository.prototype.getServerById = function (id) {\r\n        return this.servers[id];\r\n    };\r\n    ClientRepository.prototype.reset = function () {\r\n        this.servers = {};\r\n        this.methodsCount = {};\r\n    };\r\n    ClientRepository.prototype.createUserServerInfo = function (serverInfo) {\r\n        return {\r\n            machine: serverInfo.machine,\r\n            pid: serverInfo.pid,\r\n            user: serverInfo.user,\r\n            application: serverInfo.application,\r\n            environment: serverInfo.environment,\r\n            region: serverInfo.region,\r\n            instance: serverInfo.instance,\r\n            windowId: serverInfo.windowId,\r\n            peerId: serverInfo.peerId,\r\n        };\r\n    };\r\n    ClientRepository.prototype.createUserMethodInfo = function (methodInfo) {\r\n        var result = {\r\n            name: methodInfo.name,\r\n            accepts: methodInfo.accepts,\r\n            returns: methodInfo.returns,\r\n            description: methodInfo.description,\r\n            displayName: methodInfo.displayName,\r\n            objectTypes: methodInfo.objectTypes,\r\n            supportsStreaming: methodInfo.supportsStreaming,\r\n        };\r\n        result.object_types = methodInfo.objectTypes;\r\n        result.display_name = methodInfo.displayName;\r\n        result.version = methodInfo.version;\r\n        return result;\r\n    };\r\n    ClientRepository.prototype.getServersByMethod = function (id) {\r\n        var _this = this;\r\n        var allServers = [];\r\n        Object.keys(this.servers).forEach(function (serverId) {\r\n            var server = _this.servers[serverId];\r\n            Object.keys(server.methods).forEach(function (methodId) {\r\n                if (methodId === id) {\r\n                    allServers.push(server.getInfoForUser());\r\n                }\r\n            });\r\n        });\r\n        return allServers;\r\n    };\r\n    return ClientRepository;\r\n}());\r\nexports.default = ClientRepository;\r\n//# sourceMappingURL=repository.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/client/repository.js\n// module id = 30\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar promisify_1 = require(\"../helpers/promisify\");\r\nvar NativeAGM = (function () {\r\n    function NativeAGM(instance, helpers, agmFacade) {\r\n        this.instance = instance;\r\n        this.helpers = helpers;\r\n        this.agmFacade = agmFacade;\r\n        this.protocolVersion = this.agmFacade.protocolVersion;\r\n    }\r\n    NativeAGM.prototype.register = function (name, handler) {\r\n        var methodInfoAsObject = this.helpers.stringToObject(name, \"name\");\r\n        this.helpers.validateMethodInfo(methodInfoAsObject);\r\n        if (this.protocolVersion && this.protocolVersion >= 3) {\r\n            this.agmFacade.register(JSON.stringify(methodInfoAsObject), handler, true);\r\n        }\r\n        else {\r\n            this.agmFacade.register(JSON.stringify(methodInfoAsObject), function (arg, caller) {\r\n                var methodResult = handler(JSON.parse(arg), caller);\r\n                return JSON.stringify(methodResult);\r\n            });\r\n        }\r\n    };\r\n    NativeAGM.prototype.registerAsync = function (name, handler) {\r\n        if (!this.agmFacade.registerAsync) {\r\n            throw new Error(\"not supported in that version of HtmlContainer\");\r\n        }\r\n        var methodInfoAsObject = this.helpers.stringToObject(name, \"name\");\r\n        this.helpers.validateMethodInfo(methodInfoAsObject);\r\n        this.agmFacade.registerAsync(methodInfoAsObject, function (args, instance, tracker) {\r\n            handler(args, instance, function (successArgs) {\r\n                tracker.success(successArgs);\r\n            }, function (error) {\r\n                tracker.error(error);\r\n            });\r\n        });\r\n    };\r\n    NativeAGM.prototype.unregister = function (definition) {\r\n        this.agmFacade.unregister(JSON.stringify(this.helpers.stringToObject(definition, \"name\")));\r\n    };\r\n    NativeAGM.prototype.invoke = function (method, argumentObj, target, options, success, error) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (argumentObj === undefined) {\r\n                argumentObj = {};\r\n            }\r\n            if (typeof argumentObj !== \"object\") {\r\n                reject({ message: \"The method arguments must be an object.\" });\r\n            }\r\n            if (options === undefined) {\r\n                options = {};\r\n            }\r\n            target = _this.helpers.targetArgToObject(target);\r\n            if (_this.agmFacade.invoke2) {\r\n                _this.agmFacade.invoke2(JSON.stringify(_this.helpers.stringToObject(method, \"name\")), argumentObj, JSON.stringify(target), JSON.stringify(options), function (a) {\r\n                    resolve(a);\r\n                }, function (err) {\r\n                    reject(err);\r\n                });\r\n            }\r\n            else {\r\n                var successProxy = void 0;\r\n                var errorProxy = void 0;\r\n                successProxy = function (args) {\r\n                    var parsed = JSON.parse(args);\r\n                    resolve(parsed);\r\n                };\r\n                errorProxy = function (args) {\r\n                    var parsed = JSON.parse(args);\r\n                    reject(parsed);\r\n                };\r\n                _this.agmFacade.invoke(JSON.stringify(_this.helpers.stringToObject(method, \"name\")), JSON.stringify(argumentObj), JSON.stringify(target), JSON.stringify(options), successProxy, errorProxy);\r\n            }\r\n        });\r\n        return promisify_1.default(promise, success, error);\r\n    };\r\n    NativeAGM.prototype.createStream = function (methodDefinition, options, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (typeof methodDefinition === \"string\") {\r\n                methodDefinition = {\r\n                    name: methodDefinition,\r\n                    getServers: function () { return []; },\r\n                };\r\n            }\r\n            if (!options) {\r\n                options = {\r\n                    subscriptionRequestHandler: undefined,\r\n                    subscriptionAddedHandler: undefined,\r\n                    subscriptionRemovedHandler: undefined,\r\n                };\r\n            }\r\n            _this.agmFacade.createStream2(JSON.stringify(methodDefinition), options.subscriptionRequestHandler, options.subscriptionAddedHandler, options.subscriptionRemovedHandler, function (stream) {\r\n                resolve(stream);\r\n            }, function (error) {\r\n                reject(error);\r\n            });\r\n        });\r\n        return promisify_1.default(promise, successCallback, errorCallback);\r\n    };\r\n    NativeAGM.prototype.subscribe = function (methodDefinition, parameters, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (typeof methodDefinition === \"undefined\") {\r\n                reject(\"method definition param is required\");\r\n            }\r\n            if (parameters === undefined) {\r\n                parameters = {};\r\n            }\r\n            parameters.args = JSON.stringify(parameters.arguments || {});\r\n            parameters.target = _this.helpers.targetArgToObject(parameters.target);\r\n            var name;\r\n            if (typeof methodDefinition === \"string\") {\r\n                name = methodDefinition;\r\n            }\r\n            else {\r\n                name = methodDefinition.name;\r\n            }\r\n            _this.agmFacade.subscribe2(name, JSON.stringify(parameters), function (sub) {\r\n                resolve(sub);\r\n            }, function (error) {\r\n                reject(error);\r\n            });\r\n        });\r\n        return promisify_1.default(promise, successCallback, errorCallback);\r\n    };\r\n    NativeAGM.prototype.servers = function (filter) {\r\n        var _this = this;\r\n        var jsonResult = this.agmFacade.servers(JSON.stringify(this.helpers.stringToObject(filter, \"name\")));\r\n        var parsedResult = this.helpers.agmParse(jsonResult);\r\n        return parsedResult.map(function (server) {\r\n            return _this.transformServerObject(server);\r\n        });\r\n    };\r\n    NativeAGM.prototype.methods = function (filter) {\r\n        var _this = this;\r\n        var jsonResult = this.agmFacade.methods(JSON.stringify(this.helpers.stringToObject(filter, \"name\")));\r\n        var parsedResult = this.helpers.agmParse(jsonResult);\r\n        return parsedResult.map(function (method) {\r\n            return _this.transformMethodObject(method);\r\n        });\r\n    };\r\n    NativeAGM.prototype.methodAdded = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.methodAdded(function (method) {\r\n            if (subscribed) {\r\n                callback(_this.transformMethodObject(method));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.methodRemoved = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.methodRemoved(function (method) {\r\n            if (subscribed) {\r\n                callback(_this.transformMethodObject(method));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverAdded = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverAdded(function (server) {\r\n            if (subscribed) {\r\n                callback(_this.transformServerObject(server));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverRemoved = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverRemoved(function (server) {\r\n            if (subscribed) {\r\n                callback(_this.transformServerObject(server));\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverMethodAdded = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverMethodAdded(function (info) {\r\n            if (subscribed) {\r\n                callback({\r\n                    server: _this.transformServerObject(info.server),\r\n                    method: _this.transformMethodObject(info.method),\r\n                });\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.serverMethodRemoved = function (callback) {\r\n        var _this = this;\r\n        var subscribed = true;\r\n        this.agmFacade.serverMethodRemoved(function (info) {\r\n            if (subscribed) {\r\n                callback({\r\n                    server: _this.transformServerObject(info.server),\r\n                    method: _this.transformMethodObject(info.method),\r\n                });\r\n            }\r\n        });\r\n        return function () {\r\n            subscribed = false;\r\n        };\r\n    };\r\n    NativeAGM.prototype.methodsForInstance = function (server) {\r\n        var jsonResult = this.agmFacade.methodsForInstance(JSON.stringify(server));\r\n        var methods = this.helpers.agmParse(jsonResult);\r\n        return methods.map(this.transformMethodObject);\r\n    };\r\n    NativeAGM.prototype.transformMethodObject = function (method) {\r\n        var _this = this;\r\n        if (!method) {\r\n            return undefined;\r\n        }\r\n        if (!method.displayName) {\r\n            method.displayName = method.display_name;\r\n        }\r\n        if (!method.objectTypes) {\r\n            method.objectTypes = method.object_types;\r\n        }\r\n        method.getServers = function () {\r\n            return _this.servers(method.name);\r\n        };\r\n        return method;\r\n    };\r\n    NativeAGM.prototype.transformServerObject = function (server) {\r\n        var _this = this;\r\n        if (!server) {\r\n            return undefined;\r\n        }\r\n        server.getMethods = function () {\r\n            return _this.methodsForInstance(server);\r\n        };\r\n        server.getStreams = function () {\r\n            return _this.methodsForInstance(server).filter(function (method) {\r\n                return method.supportsStreaming;\r\n            });\r\n        };\r\n        return server;\r\n    };\r\n    return NativeAGM;\r\n}());\r\nexports.NativeAGM = NativeAGM;\r\n//# sourceMappingURL=agm.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/hc/agm.js\n// module id = 31\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Helpers = (function () {\r\n    function Helpers(facade) {\r\n        this.facade = facade;\r\n        this.dateTimeIdentifier = facade.jsonValueDatePrefix;\r\n        this.lenOfIdentifier = this.dateTimeIdentifier.length;\r\n    }\r\n    Helpers.prototype.agmParse = function (str) {\r\n        var _this = this;\r\n        return JSON.parse(str, function (k, v) {\r\n            if (typeof v !== \"string\") {\r\n                return v;\r\n            }\r\n            if (v[0] !== _this.dateTimeIdentifier[0]) {\r\n                return v;\r\n            }\r\n            if (v.indexOf(_this.dateTimeIdentifier) !== 0) {\r\n                return v;\r\n            }\r\n            var unixTimestampMs = v.substr(_this.lenOfIdentifier);\r\n            return new Date(parseFloat(unixTimestampMs));\r\n        });\r\n    };\r\n    Helpers.prototype.targetArgToObject = function (target) {\r\n        var _this = this;\r\n        target = target || \"best\";\r\n        if (typeof target === \"string\") {\r\n            if (target !== \"all\" && target !== \"best\") {\r\n                throw new Error(target + \" is not a valid target. Valid targets are 'all' and 'best'\");\r\n            }\r\n            return { target: target };\r\n        }\r\n        else {\r\n            if (!Array.isArray(target)) {\r\n                target = [target];\r\n            }\r\n            target = target.map(function (e) {\r\n                return _this.convertInstanceToRegex(e);\r\n            });\r\n            return { serverFilter: target };\r\n        }\r\n    };\r\n    Helpers.prototype.convertInstanceToRegex = function (instance) {\r\n        var instanceConverted = {};\r\n        Object.keys(instance).forEach(function (key) {\r\n            var propValue = instance[key];\r\n            instanceConverted[key] = propValue;\r\n            if (typeof propValue === \"undefined\" || propValue === null) {\r\n                return;\r\n            }\r\n            if (typeof propValue === \"string\" && propValue !== \"\") {\r\n                instanceConverted[key] = \"^\" + instance[key] + \"$\";\r\n            }\r\n            else if (instance[key].constructor === RegExp) {\r\n                instanceConverted[key] = instance[key].source;\r\n            }\r\n            else {\r\n                instanceConverted[key] = instance[key];\r\n            }\r\n        });\r\n        return instanceConverted;\r\n    };\r\n    Helpers.prototype.validateMethodInfo = function (methodInfo) {\r\n        if (typeof methodInfo === \"undefined\") {\r\n            throw Error(\"methodInfo is required argument\");\r\n        }\r\n        if (!methodInfo.name) {\r\n            throw Error(\"methodInfo object must contain name property\");\r\n        }\r\n        if (methodInfo.objectTypes) {\r\n            methodInfo.object_types = methodInfo.objectTypes;\r\n        }\r\n        if (methodInfo.displayName) {\r\n            methodInfo.display_name = methodInfo.displayName;\r\n        }\r\n    };\r\n    Helpers.prototype.stringToObject = function (param, stringPropName) {\r\n        if (typeof param === \"string\") {\r\n            var obj = {};\r\n            obj[stringPropName] = param;\r\n            return obj;\r\n        }\r\n        return param;\r\n    };\r\n    return Helpers;\r\n}());\r\nexports.Helpers = Helpers;\r\n//# sourceMappingURL=helpers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/hc/helpers.js\n// module id = 32\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar agm_1 = require(\"./agm\");\r\nvar helpers_1 = require(\"./helpers\");\r\nfunction default_1(configuration) {\r\n    var facade = window.htmlContainer.jsAgmFacade;\r\n    var cfgAsString = createConfig(configuration);\r\n    return new Promise(function (resolve, reject) {\r\n        var successInit = function (instance) {\r\n            var nativeAGM = new agm_1.NativeAGM(instance, new helpers_1.Helpers(facade), facade);\r\n            nativeAGM.create_stream = nativeAGM.createStream;\r\n            nativeAGM.methods_for_instance = nativeAGM.methodsForInstance;\r\n            nativeAGM.method_added = nativeAGM.methodAdded;\r\n            nativeAGM.method_removed = nativeAGM.methodRemoved;\r\n            nativeAGM.server_added = nativeAGM.serverAdded;\r\n            nativeAGM.server_removed = nativeAGM.serverRemoved;\r\n            nativeAGM.server_method_added = nativeAGM.serverMethodAdded;\r\n            nativeAGM.server_method_removed = nativeAGM.serverMethodRemoved;\r\n            resolve(nativeAGM);\r\n        };\r\n        if (facade.protocolVersion && facade.protocolVersion >= 5 && facade.initAsync) {\r\n            facade.initAsync(cfgAsString, successInit, function (err) {\r\n                reject(err);\r\n            });\r\n        }\r\n        else {\r\n            var instance = facade.init(cfgAsString);\r\n            successInit(instance);\r\n        }\r\n    });\r\n}\r\nexports.default = default_1;\r\nvar createConfig = function (configuration) {\r\n    if (configuration !== undefined && configuration.metrics !== undefined) {\r\n        configuration.metrics.metricsIdentity = configuration.metrics.identity;\r\n        var metricsConfig = {\r\n            metricsIdentity: configuration.metrics.metricsIdentity,\r\n            path: configuration.metrics.path,\r\n        };\r\n        configuration.metrics = metricsConfig;\r\n    }\r\n    delete configuration.logger;\r\n    return JSON.stringify(configuration);\r\n};\r\n//# sourceMappingURL=native.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/hc/native.js\n// module id = 33\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = require(\"./helpers/random\");\r\nfunction createOwnInstance(userSubmittedProperties, resolvedIdentity, peerId) {\r\n    var document = global.document || global.process;\r\n    var instance = {\r\n        application: document.title + random_1.default(),\r\n        pid: Math.floor(Math.random() * 10000000000),\r\n    };\r\n    instance.peerId = peerId;\r\n    if (typeof userSubmittedProperties === \"object\") {\r\n        if (userSubmittedProperties.application !== undefined) {\r\n            instance.application = userSubmittedProperties.application;\r\n        }\r\n        instance.machine = userSubmittedProperties.machine;\r\n        instance.user = userSubmittedProperties.user;\r\n        instance.environment = userSubmittedProperties.environment;\r\n        instance.region = userSubmittedProperties.region;\r\n    }\r\n    if (typeof resolvedIdentity !== \"undefined\") {\r\n        instance.user = resolvedIdentity.user;\r\n        instance.instance = resolvedIdentity.instance;\r\n        instance.application = resolvedIdentity.application;\r\n        instance.pid = resolvedIdentity.process;\r\n        instance.machine = resolvedIdentity.machine;\r\n        instance.environment = resolvedIdentity.environment;\r\n        instance.region = resolvedIdentity.region;\r\n        instance.windowId = resolvedIdentity.windowId;\r\n    }\r\n    return instance;\r\n}\r\nexports.createOwnInstance = createOwnInstance;\r\n//# sourceMappingURL=instance.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/instance.js\n// module id = 34\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar instance_1 = require(\"./instance\");\r\nvar native_1 = require(\"./hc/native\");\r\nvar factory_1 = require(\"./protocols/gw1/factory\");\r\nvar factory_2 = require(\"./protocols/gw3/factory\");\r\nvar agm_1 = require(\"./agm\");\r\nvar repository_1 = require(\"./client/repository\");\r\nvar repository_2 = require(\"./server/repository\");\r\nexports.default = (function (configuration) {\r\n    if (!configuration.forceGW && configuration.gdVersion === 2) {\r\n        return native_1.default(configuration);\r\n    }\r\n    if (typeof configuration === \"undefined\") {\r\n        throw new Error(\"configuration is required\");\r\n    }\r\n    if (typeof configuration.connection === \"undefined\") {\r\n        throw new Error(\"configuration.connections is required\");\r\n    }\r\n    var connection = configuration.connection;\r\n    if (typeof configuration.methodResponseTimeout !== \"number\") {\r\n        configuration.methodResponseTimeout = 3000;\r\n    }\r\n    if (typeof configuration.waitTimeoutMs !== \"number\") {\r\n        configuration.waitTimeoutMs = 3000;\r\n    }\r\n    var myIdentity = connection.resolvedIdentity;\r\n    var myInstance = instance_1.createOwnInstance(configuration.instance, myIdentity, connection.peerId);\r\n    var clientRepository = new repository_1.default();\r\n    var serverRepository = new repository_2.default();\r\n    var protocolPromise;\r\n    var agmImpl;\r\n    if (connection.protocolVersion === 3) {\r\n        protocolPromise = factory_2.default(myInstance, connection, clientRepository, serverRepository, configuration, function () { return agmImpl; });\r\n    }\r\n    else {\r\n        protocolPromise = factory_1.default(myInstance, connection, clientRepository, serverRepository, configuration, function () { return agmImpl; });\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        protocolPromise.then(function (protocol) {\r\n            agmImpl = new agm_1.default(protocol, clientRepository, serverRepository, myInstance, configuration);\r\n            resolve(agmImpl);\r\n        }).catch(function (err) {\r\n            reject(err);\r\n        });\r\n    });\r\n});\r\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/main.js\n// module id = 35\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = require(\"./../../helpers/random\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(configuration, instance, sendRequest, nextResponseSubject) {\r\n        this.configuration = configuration;\r\n        this.instance = instance;\r\n        this.sendRequest = sendRequest;\r\n        this.nextResponseSubject = nextResponseSubject;\r\n        this.subscriptionsList = {};\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (stream, args, targetServers, options, success, error) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: stream.getInfoForUser(),\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n                called_with: args,\r\n            });\r\n            return;\r\n        }\r\n        var subscriptionId = \"subscriptionId_\" + random_1.default();\r\n        var pendingSub = this.registerSubscription(subscriptionId, stream, args, success, error, options.methodResponseTimeout);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: stream.getInfoForUser(),\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n                called_with: args,\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var responseSubject = _this.nextResponseSubject();\r\n            var requestSubject = stream.info.requestSubject;\r\n            pendingSub.trackedServers.push({\r\n                server: undefined,\r\n                streamId: undefined,\r\n                streamSubjects: {\r\n                    global: undefined,\r\n                    private: undefined,\r\n                },\r\n                methodRequestSubject: requestSubject,\r\n                methodResponseSubject: responseSubject,\r\n            });\r\n            var message = {\r\n                EventStreamAction: 1,\r\n                MethodRequestSubject: requestSubject,\r\n                MethodResponseSubject: responseSubject,\r\n                Client: helpers_1.convertInstance(_this.instance),\r\n                Context: {\r\n                    ArgumentsJson: args,\r\n                    InvocationId: subscriptionId,\r\n                    MethodName: stream.info.name,\r\n                    ExecutionServer: target.server.info,\r\n                    Timeout: options.methodResponseTimeout,\r\n                },\r\n            };\r\n            _this.sendRequest(message);\r\n        });\r\n    };\r\n    ClientStreaming.prototype.processPublisherMsg = function (msg) {\r\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\r\n            return;\r\n        }\r\n        if (msg.EventStreamAction === 2) {\r\n            this.serverIsKickingASubscriber(msg);\r\n        }\r\n        else if (msg.EventStreamAction === 3) {\r\n            this.serverAcknowledgesGoodSubscription(msg);\r\n        }\r\n        else if (msg.EventStreamAction === 5) {\r\n            this.serverHasPushedSomeDataIntoTheStream(msg);\r\n        }\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subscriptionId, method, args, success, error, timeout) {\r\n        var _this = this;\r\n        this.subscriptionsList[subscriptionId] = {\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            arguments: args,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: [],\r\n                onClosed: [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n        };\r\n        this.subscriptionsList[subscriptionId].timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subscriptionId] === undefined) {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subscriptionId];\r\n            if (subscription.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method,\r\n                    called_with: args,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \"ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subscriptionId];\r\n            }\r\n            else if (subscription.status === STATUS_SUBSCRIBED &&\r\n                subscription.trackedServers.length > 0) {\r\n                subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                    return (typeof server.streamId === \"string\" && server.streamId !== \"\");\r\n                });\r\n                subscription.timeoutId = undefined;\r\n                if (subscription.trackedServers.length === 0) {\r\n                    var closersCount = subscription.queued.closers.length;\r\n                    var closingServer_1 = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n                    subscription.handlers.onClosed.forEach(function (callback) {\r\n                        if (typeof callback === \"function\") {\r\n                            callback({\r\n                                message: ON_CLOSE_MSG_SERVER_INIT,\r\n                                requestArguments: subscription.arguments,\r\n                                server: closingServer_1,\r\n                                stream: subscription.method,\r\n                            });\r\n                        }\r\n                    });\r\n                    delete _this.subscriptionsList[subscriptionId];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return this.subscriptionsList[subscriptionId];\r\n    };\r\n    ClientStreaming.prototype.serverIsKickingASubscriber = function (msg) {\r\n        var _this = this;\r\n        var keys = Object.keys(this.subscriptionsList);\r\n        if (typeof msg.InvocationId === \"string\" && msg.InvocationId !== \"\") {\r\n            keys = keys.filter(function (k) { return k === msg.InvocationId; });\r\n        }\r\n        var deletionsList = [];\r\n        keys.forEach(function (key) {\r\n            if (typeof _this.subscriptionsList[key] !== \"object\") {\r\n                return;\r\n            }\r\n            _this.subscriptionsList[key].trackedServers = _this.subscriptionsList[key].trackedServers.filter(function (server) {\r\n                var isRejecting = (server.methodRequestSubject === msg.MethodRequestSubject && server.methodResponseSubject === msg.MethodResponseSubject);\r\n                var isKicking = (server.streamId === msg.StreamId &&\r\n                    (server.streamSubjects.global === msg.EventStreamSubject || server.streamSubjects.private === msg.EventStreamSubject));\r\n                var isRejectingOrKicking = isRejecting || isKicking;\r\n                return !isRejectingOrKicking;\r\n            });\r\n            if (_this.subscriptionsList[key].trackedServers.length === 0) {\r\n                deletionsList.push(key);\r\n            }\r\n        });\r\n        deletionsList.forEach(function (key) {\r\n            if (typeof _this.subscriptionsList[key] !== \"object\") {\r\n                return;\r\n            }\r\n            if (_this.subscriptionsList[key].status === STATUS_AWAITING_ACCEPT &&\r\n                typeof _this.subscriptionsList[key].timeoutId === \"number\") {\r\n                var reason = (typeof msg.ResultMessage === \"string\" && msg.ResultMessage !== \"\") ?\r\n                    ' Publisher said \"' + msg.ResultMessage + '\".' :\r\n                    \" No reason given.\";\r\n                var callArgs = typeof _this.subscriptionsList[key].arguments === \"object\" ?\r\n                    JSON.stringify(_this.subscriptionsList[key].arguments) :\r\n                    \"{}\";\r\n                _this.subscriptionsList[key].error(ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs);\r\n                clearTimeout(_this.subscriptionsList[key].timeoutId);\r\n            }\r\n            else {\r\n                _this.subscriptionsList[key].handlers.onClosed.forEach(function (callback) {\r\n                    if (typeof callback !== \"function\") {\r\n                        return;\r\n                    }\r\n                    callback({\r\n                        message: ON_CLOSE_MSG_SERVER_INIT,\r\n                        requestArguments: _this.subscriptionsList[key].arguments,\r\n                        server: helpers_1.convertInfoToInstance(msg.Server),\r\n                        stream: _this.subscriptionsList[key].method,\r\n                    });\r\n                });\r\n            }\r\n            delete _this.subscriptionsList[key];\r\n        });\r\n    };\r\n    ClientStreaming.prototype.serverAcknowledgesGoodSubscription = function (msg) {\r\n        var _this = this;\r\n        var subscriptionId = msg.InvocationId;\r\n        var subscription = this.subscriptionsList[subscriptionId];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        var acceptingServer = subscription.trackedServers.filter(function (server) {\r\n            return (server.methodRequestSubject === msg.MethodRequestSubject &&\r\n                server.methodResponseSubject === msg.MethodResponseSubject);\r\n        })[0];\r\n        if (typeof acceptingServer !== \"object\") {\r\n            return;\r\n        }\r\n        var isFirstResponse = (subscription.status === STATUS_AWAITING_ACCEPT);\r\n        subscription.status = STATUS_SUBSCRIBED;\r\n        var privateStreamSubject = this.generatePrivateStreamSubject(subscription.method.name);\r\n        if (typeof acceptingServer.streamId === \"string\" && acceptingServer.streamId !== \"\") {\r\n            return;\r\n        }\r\n        acceptingServer.server = helpers_1.convertInfoToInstance(msg.Server);\r\n        acceptingServer.streamId = msg.StreamId;\r\n        acceptingServer.streamSubjects.global = msg.EventStreamSubject;\r\n        acceptingServer.streamSubjects.private = privateStreamSubject;\r\n        var confirmatoryRequest = {\r\n            EventStreamAction: 3,\r\n            EventStreamSubject: privateStreamSubject,\r\n            StreamId: msg.StreamId,\r\n            MethodRequestSubject: msg.MethodRequestSubject,\r\n            MethodResponseSubject: acceptingServer.methodResponseSubject,\r\n            Client: helpers_1.convertInstance(this.instance),\r\n            Context: {\r\n                ArgumentsJson: subscription.arguments,\r\n                MethodName: subscription.method.name,\r\n            },\r\n        };\r\n        this.sendRequest(confirmatoryRequest);\r\n        if (isFirstResponse) {\r\n            subscription.success({\r\n                onData: function (dataCallback) {\r\n                    if (typeof dataCallback !== \"function\") {\r\n                        throw new TypeError(\"The data callback must be a function.\");\r\n                    }\r\n                    this.handlers.onData.push(dataCallback);\r\n                    if (this.handlers.onData.length === 1 && this.queued.data.length > 0) {\r\n                        this.queued.data.forEach(function (dataItem) {\r\n                            dataCallback(dataItem);\r\n                        });\r\n                    }\r\n                }.bind(subscription),\r\n                onClosed: function (closedCallback) {\r\n                    if (typeof closedCallback !== \"function\") {\r\n                        throw new TypeError(\"The callback must be a function.\");\r\n                    }\r\n                    this.handlers.onClosed.push(closedCallback);\r\n                }.bind(subscription),\r\n                onFailed: function () { },\r\n                close: function () { return _this.closeSubscription(subscription, subscriptionId); },\r\n                requestArguments: subscription.arguments,\r\n                serverInstance: helpers_1.convertInfoToInstance(msg.Server),\r\n                stream: subscription.method,\r\n            });\r\n        }\r\n    };\r\n    ClientStreaming.prototype.serverHasPushedSomeDataIntoTheStream = function (msg) {\r\n        var _loop_1 = function (key) {\r\n            if (this_1.subscriptionsList.hasOwnProperty(key) && typeof this_1.subscriptionsList[key] === \"object\") {\r\n                var isPrivateData = void 0;\r\n                var trackedServersFound = this_1.subscriptionsList[key].trackedServers.filter(function (ls) {\r\n                    return (ls.streamId === msg.StreamId &&\r\n                        (ls.streamSubjects.global === msg.EventStreamSubject ||\r\n                            ls.streamSubjects.private === msg.EventStreamSubject));\r\n                });\r\n                if (trackedServersFound.length === 0) {\r\n                    isPrivateData = undefined;\r\n                }\r\n                else if (trackedServersFound[0].streamSubjects.global === msg.EventStreamSubject) {\r\n                    isPrivateData = false;\r\n                }\r\n                else if (trackedServersFound[0].streamSubjects.private === msg.EventStreamSubject) {\r\n                    isPrivateData = true;\r\n                }\r\n                if (isPrivateData !== undefined) {\r\n                    var receivedStreamData_1 = {\r\n                        data: msg.ResultContextJson,\r\n                        server: helpers_1.convertInfoToInstance(msg.Server),\r\n                        requestArguments: this_1.subscriptionsList[key].arguments || {},\r\n                        message: msg.ResultMessage,\r\n                        private: isPrivateData,\r\n                    };\r\n                    var onDataHandlers = this_1.subscriptionsList[key].handlers.onData;\r\n                    var queuedData = this_1.subscriptionsList[key].queued.data;\r\n                    if (Array.isArray(onDataHandlers)) {\r\n                        if (onDataHandlers.length > 0) {\r\n                            onDataHandlers.forEach(function (callback) {\r\n                                if (typeof callback === \"function\") {\r\n                                    callback(receivedStreamData_1);\r\n                                }\r\n                            });\r\n                        }\r\n                        else {\r\n                            queuedData.push(receivedStreamData_1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var this_1 = this;\r\n        for (var key in this.subscriptionsList) {\r\n            _loop_1(key);\r\n        }\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (sub, subId) {\r\n        var _this = this;\r\n        var responseSubject = this.nextResponseSubject();\r\n        sub.trackedServers.forEach(function (server) {\r\n            _this.sendRequest({\r\n                EventStreamAction: 2,\r\n                Client: helpers_1.convertInstance(_this.instance),\r\n                MethodRequestSubject: server.methodRequestSubject,\r\n                MethodResponseSubject: responseSubject,\r\n                StreamId: server.streamId,\r\n                EventStreamSubject: server.streamSubjects.private,\r\n            });\r\n        });\r\n        sub.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback === \"function\") {\r\n                callback({\r\n                    message: ON_CLOSE_MSG_CLIENT_INIT,\r\n                    requestArguments: sub.arguments || {},\r\n                    server: sub.trackedServers[sub.trackedServers.length - 1].server,\r\n                    stream: sub.method,\r\n                });\r\n            }\r\n        });\r\n        delete this.subscriptionsList[subId];\r\n    };\r\n    ClientStreaming.prototype.generatePrivateStreamSubject = function (methodName) {\r\n        var appInfo = helpers_1.convertInstance(this.instance);\r\n        return \"ESSpriv-jsb_\" +\r\n            appInfo.ApplicationName +\r\n            \"_on_\" +\r\n            methodName +\r\n            \"_\" +\r\n            random_1.default();\r\n    };\r\n    return ClientStreaming;\r\n}());\r\nexports.default = ClientStreaming;\r\n//# sourceMappingURL=client-streaming.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw1/client-streaming.js\n// module id = 36\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = require(\"../../helpers/random\");\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nvar client_streaming_1 = require(\"./client-streaming\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar numberMissingHeartbeatsToRemove = 3;\r\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(connection, instance, configuration, repository) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n        this.repository = repository;\r\n        this.respCounter = 0;\r\n        this.callbacks = callback_registry_1.default();\r\n        this.timers = {};\r\n        this.timers = {};\r\n        this.streaming = new client_streaming_1.default(configuration, instance, function (msg) {\r\n            connection.send(\"agm\", \"MethodInvocationRequestMessage\", msg);\r\n        }, function () { return _this.nextResponseSubject(); });\r\n        this.listenForEvents();\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, args, targetServers, options, success, error) {\r\n        this.streaming.subscribe(stream, args, targetServers, options, success, error);\r\n    };\r\n    ClientProtocol.prototype.onInvocationResult = function (callback) {\r\n        this.callbacks.add(\"onResult\", callback);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target, stuff) {\r\n        var methodInfo = method.info;\r\n        var message = {\r\n            MethodRequestSubject: methodInfo.requestSubject,\r\n            MethodResponseSubject: this.nextResponseSubject(),\r\n            Client: helpers_1.convertInstance(this.instance),\r\n            Context: {\r\n                ArgumentsJson: args,\r\n                InvocationId: id,\r\n                MethodName: methodInfo.name,\r\n                ExecutionServer: target.info,\r\n                Timeout: stuff.methodResponseTimeoutMs,\r\n            },\r\n        };\r\n        this.connection.send(\"agm\", \"MethodInvocationRequestMessage\", message);\r\n    };\r\n    ClientProtocol.prototype.nextResponseSubject = function () {\r\n        return \"resp_\" + (this.respCounter++) + \"_\" + random_1.default();\r\n    };\r\n    ClientProtocol.prototype.createServerInfo = function (instance) {\r\n        return {\r\n            machine: instance.MachineName,\r\n            pid: instance.ProcessId,\r\n            user: instance.UserName,\r\n            application: instance.ApplicationName,\r\n            environment: instance.Environment,\r\n            region: instance.Region,\r\n        };\r\n    };\r\n    ClientProtocol.prototype.createMethod = function (methodInfo) {\r\n        var method = methodInfo.Method;\r\n        return {\r\n            name: method.Name,\r\n            accepts: method.InputSignature,\r\n            returns: method.ResultSignature,\r\n            requestSubject: methodInfo.MethodRequestSubject,\r\n            description: method.Description,\r\n            displayName: method.DisplayName,\r\n            version: method.Version,\r\n            objectTypes: method.ObjectTypeRestrictions,\r\n            supportsStreaming: helpers_1.isStreamingFlagSet(method.Flags),\r\n        };\r\n    };\r\n    ClientProtocol.prototype.createServerId = function (serverInfo) {\r\n        if (serverInfo === undefined) {\r\n            return undefined;\r\n        }\r\n        return [serverInfo.application,\r\n            serverInfo.user,\r\n            serverInfo.machine,\r\n            serverInfo.started,\r\n            serverInfo.pid].join(\"/\").toLowerCase();\r\n    };\r\n    ClientProtocol.prototype.processServerPresence = function (presence, isPresence) {\r\n        var instance = presence.Instance;\r\n        var serverInfo = this.createServerInfo(instance);\r\n        var serverId = this.createServerId(serverInfo);\r\n        if (isPresence) {\r\n            serverId = this.repository.addServer(serverInfo, serverId);\r\n            if (presence.PublishingInterval) {\r\n                this.scheduleTimeout(serverId, presence.PublishingInterval);\r\n            }\r\n        }\r\n        else if (presence.PublishingInterval === 0) {\r\n            var server = this.repository.getServerById(serverId);\r\n            if (typeof server !== \"undefined\") {\r\n                this.repository.removeServerById(serverId);\r\n            }\r\n        }\r\n        if (presence.MethodDefinitions !== undefined) {\r\n            this.updateServerMethods(serverId, presence.MethodDefinitions);\r\n        }\r\n    };\r\n    ClientProtocol.prototype.scheduleTimeout = function (serverId, duration) {\r\n        var _this = this;\r\n        if (duration === -1) {\r\n            return;\r\n        }\r\n        var timer = this.timers[serverId];\r\n        if (timer !== undefined) {\r\n            clearTimeout(timer);\r\n        }\r\n        this.timers[serverId] = setTimeout(function () {\r\n            _this.repository.removeServerById(serverId);\r\n        }, duration * (numberMissingHeartbeatsToRemove + 1));\r\n    };\r\n    ClientProtocol.prototype.updateServerMethods = function (serverId, newMethods) {\r\n        var _this = this;\r\n        var oldMethods = this.repository.getServerMethodsById(serverId);\r\n        var newMethodsReduced = newMethods\r\n            .map(function (nm) { return _this.createMethod(nm); })\r\n            .reduce(function (obj, method) {\r\n            var methodId = _this.repository.createMethodId(method);\r\n            obj[methodId] = method;\r\n            return obj;\r\n        }, {});\r\n        oldMethods.forEach(function (method) {\r\n            if (newMethodsReduced[method.id] === undefined) {\r\n                _this.repository.removeServerMethod(serverId, method.id);\r\n            }\r\n            else {\r\n                delete newMethodsReduced[method.id];\r\n            }\r\n        });\r\n        Object.keys(newMethodsReduced).forEach(function (key) {\r\n            var method = newMethodsReduced[key];\r\n            _this.repository.addServerMethod(serverId, method);\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleInvokeResultMessage = function (message) {\r\n        if (message && message.EventStreamAction && message.EventStreamAction !== 0) {\r\n            this.streaming.processPublisherMsg(message);\r\n            return;\r\n        }\r\n        var server = message.Server ? this.createServerInfo(message.Server) : undefined;\r\n        var result = message.ResultContextJson;\r\n        if (result && Object.keys(result).length === 0) {\r\n            result = undefined;\r\n        }\r\n        this.callbacks.execute(\"onResult\", message.InvocationId, server, message.Status, result, message.ResultMessage);\r\n    };\r\n    ClientProtocol.prototype.listenForEvents = function () {\r\n        var _this = this;\r\n        this.connection.on(\"agm\", \"ServerPresenceMessage\", function (msg) {\r\n            _this.processServerPresence(msg, true);\r\n        });\r\n        this.connection.on(\"agm\", \"ServerHeartbeatMessage\", function (msg) {\r\n            _this.processServerPresence(msg, false);\r\n        });\r\n        this.connection.on(\"agm\", \"MethodInvocationResultMessage\", function (msg) {\r\n            _this.handleInvokeResultMessage(msg);\r\n        });\r\n    };\r\n    return ClientProtocol;\r\n}());\r\nexports.default = ClientProtocol;\r\n//# sourceMappingURL=client.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw1/client.js\n// module id = 37\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar server_1 = require(\"./server\");\r\nvar client_1 = require(\"./client\");\r\nfunction default_1(instance, connection, clientRepository, serverRepository, configuration, getAGM) {\r\n    var unsubscribe = connection.on(\"agm\", \"Instance\", function (newInstance) {\r\n        getAGM().updateInstance(newInstance);\r\n        connection.off(unsubscribe);\r\n    });\r\n    var server = new server_1.default(connection, instance, configuration, serverRepository);\r\n    var client = new client_1.default(connection, instance, configuration, clientRepository);\r\n    return new Promise(function (resolve) {\r\n        resolve({\r\n            server: server,\r\n            client: client,\r\n        });\r\n    });\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=factory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw1/factory.js\n// module id = 38\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = require(\"./../../helpers/random\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(connection, instance) {\r\n        this.connection = connection;\r\n        this.instance = instance;\r\n    }\r\n    ServerStreaming.prototype.isStreamMsg = function (msg, method) {\r\n        return (msg &&\r\n            msg.EventStreamAction &&\r\n            msg.EventStreamAction !== 0 &&\r\n            typeof method === \"object\" &&\r\n            method.definition.supportsStreaming === true);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = null;\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            return (branches === null || (Boolean(br) && typeof br.key === \"string\" && branches.indexOf(br.key) >= 0));\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        var server = helpers_1.convertInstance(this.instance);\r\n        streamIdList.forEach(function (streamId) {\r\n            _this.sendResult({\r\n                EventStreamAction: 5,\r\n                EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n                MethodName: streamingMethod.protocolState.method.Method.Name,\r\n                MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n                ResultContextJson: data,\r\n                Server: server,\r\n                StreamId: streamId,\r\n            });\r\n        });\r\n    };\r\n    ServerStreaming.prototype.closeAllSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        var streamList = streamingMethod.protocolState.branchKeyToStreamIdMap;\r\n        if (typeof branchKey === \"string\") {\r\n            streamList = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (br) {\r\n                return (typeof br === \"object\" && br.key === branchKey);\r\n            });\r\n        }\r\n        streamList.forEach(function (br) {\r\n            var streamId = br.streamId;\r\n            _this.sendResult({\r\n                EventStreamAction: 2,\r\n                EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n                MethodName: streamingMethod.protocolState.method.Method.Name,\r\n                MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n                Server: helpers_1.convertInstance(_this.instance),\r\n                StreamId: streamId,\r\n                Status: 0,\r\n            });\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        return this.getUniqueBranchNames(streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = streamingMethod.protocolState.subscriptions;\r\n        }\r\n        else {\r\n            subscriptions = streamingMethod.protocolState.subscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (handlerFunc) {\r\n        if (typeof handlerFunc !== \"function\") {\r\n            return;\r\n        }\r\n        this.subAddedHandler = handlerFunc;\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (handlerFunc) {\r\n        if (typeof handlerFunc !== \"function\") {\r\n            return;\r\n        }\r\n        this.subRemovedHandler = handlerFunc;\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (handlerFunc) {\r\n        if (typeof handlerFunc !== \"function\") {\r\n            return;\r\n        }\r\n        this.requestHandler = handlerFunc;\r\n    };\r\n    ServerStreaming.prototype.generateNewStreamId = function (streamingMethodName) {\r\n        var appInfo = helpers_1.convertInstance(this.instance);\r\n        return \"streamId-jsb_of_\" +\r\n            streamingMethodName +\r\n            \"__by_\" +\r\n            appInfo.ApplicationName +\r\n            \"_\" +\r\n            random_1.default();\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        var msg = requestContext.msg;\r\n        this.sendResult({\r\n            EventStreamAction: 2,\r\n            EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n            MethodName: streamingMethod.protocolState.method.Method.Name,\r\n            MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n            MethodResponseSubject: msg.MethodResponseSubject,\r\n            MethodVersion: streamingMethod.protocolState.method.Method.Version,\r\n            ResultMessage: reason,\r\n            Server: helpers_1.convertInstance(this.instance),\r\n            StreamId: \"default_rejection_streamId\",\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (streamingMethod, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this.sendResult({\r\n            EventStreamAction: 5,\r\n            EventStreamSubject: subscription.privateEventStreamSubject,\r\n            MethodName: streamingMethod.protocolState.method.Method.Name,\r\n            MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n            ResultContextJson: data,\r\n            Server: helpers_1.convertInstance(this.instance),\r\n            StreamId: subscription.streamId,\r\n        });\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        this.closeIndividualSubscription(streamingMethod, subscription.streamId, subscription.privateEventStreamSubject, true);\r\n    };\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var msg = requestContext.msg;\r\n        this.sendResult({\r\n            EventStreamAction: 3,\r\n            EventStreamSubject: streamingMethod.protocolState.globalEventStreamSubject,\r\n            InvocationId: msg.Context.InvocationId,\r\n            MethodName: streamingMethod.protocolState.method.Method.Name,\r\n            MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n            MethodResponseSubject: msg.MethodResponseSubject,\r\n            MethodVersion: streamingMethod.protocolState.method.Method.Version,\r\n            ResultMessage: \"Accepted\",\r\n            Server: helpers_1.convertInstance(this.instance),\r\n            StreamId: streamId,\r\n        });\r\n    };\r\n    ServerStreaming.prototype.processSubscriberMsg = function (msg, streamingMethod) {\r\n        if (!(msg && msg.EventStreamAction && msg.EventStreamAction !== 0)) {\r\n            return;\r\n        }\r\n        if (msg.EventStreamAction === 1) {\r\n            this.clientWishesToSubscribe(msg, streamingMethod);\r\n        }\r\n        else if (msg.EventStreamAction === 2) {\r\n            this.clientWishesToUnsubscribe(msg, streamingMethod);\r\n        }\r\n        else if (msg.EventStreamAction === 3) {\r\n            this.clientAcknowledgesItDidSubscribe(msg, streamingMethod);\r\n        }\r\n        else if (msg.EventStreamAction === 4) {\r\n            this.clientPerSubHeartbeat(msg);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.sendResult = function (message) {\r\n        if (typeof message !== \"object\") {\r\n            throw new Error(\"Invalid message.\");\r\n        }\r\n        if (typeof message.Status !== \"number\") {\r\n            message.Status = 0;\r\n        }\r\n        this.connection.send(\"agm\", \"MethodInvocationResultMessage\", message);\r\n    };\r\n    ServerStreaming.prototype.clientWishesToSubscribe = function (msg, streamingMethod) {\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.Context.ArgumentsJson || {},\r\n            instance: helpers_1.convertInfoToInstance(msg.Client),\r\n        };\r\n        if (typeof this.requestHandler === \"function\") {\r\n            this.requestHandler(requestContext, streamingMethod);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.clientWishesToUnsubscribe = function (msg, streamingMethod) {\r\n        if (!(streamingMethod &&\r\n            Array.isArray(streamingMethod.protocolState.subscriptions) &&\r\n            streamingMethod.protocolState.subscriptions.length > 0)) {\r\n            return;\r\n        }\r\n        this.closeIndividualSubscription(streamingMethod, msg.StreamId, msg.EventStreamSubject, false);\r\n    };\r\n    ServerStreaming.prototype.clientAcknowledgesItDidSubscribe = function (msg, streamingMethod) {\r\n        if (typeof msg.StreamId !== \"string\" || msg.StreamId === \"\") {\r\n            return;\r\n        }\r\n        var branchKey = this.getBranchKey(streamingMethod, msg.StreamId);\r\n        if (typeof branchKey !== \"string\") {\r\n            return;\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.subscriptions)) {\r\n            return;\r\n        }\r\n        var subscription = {\r\n            branchKey: branchKey,\r\n            instance: helpers_1.convertInfoToInstance(msg.Client),\r\n            arguments: msg.Context.ArgumentsJson,\r\n            streamId: msg.StreamId,\r\n            privateEventStreamSubject: msg.EventStreamSubject,\r\n            methodResponseSubject: msg.MethodResponseSubject,\r\n        };\r\n        streamingMethod.protocolState.subscriptions.push(subscription);\r\n        if (typeof this.subAddedHandler === \"function\") {\r\n            this.subAddedHandler(subscription, streamingMethod);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.clientPerSubHeartbeat = function (msg) {\r\n    };\r\n    ServerStreaming.prototype.getBranchKey = function (streamingMethod, streamId) {\r\n        if (typeof streamId !== \"string\" || typeof streamingMethod !== \"object\") {\r\n            return;\r\n        }\r\n        var needle = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.streamId === streamId;\r\n        })[0];\r\n        if (typeof needle !== \"object\" || typeof needle.key !== \"string\") {\r\n            return;\r\n        }\r\n        return needle.key;\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.generateNewStreamId(streamingMethod.protocolState.method.Method.Name);\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    ServerStreaming.prototype.closeIndividualSubscription = function (streamingMethod, streamId, privateEventStreamSubject, sendKickMessage) {\r\n        var subscription = streamingMethod.protocolState.subscriptions.filter(function (subItem) {\r\n            return (subItem.privateEventStreamSubject === privateEventStreamSubject &&\r\n                subItem.streamId === streamId);\r\n        })[0];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        var initialLength = streamingMethod.protocolState.subscriptions.length;\r\n        streamingMethod.protocolState.subscriptions = streamingMethod.protocolState.subscriptions.filter(function (subItem) {\r\n            return !(subItem.privateEventStreamSubject === subscription.privateEventStreamSubject &&\r\n                subItem.streamId === subscription.streamId);\r\n        });\r\n        var filteredLength = streamingMethod.protocolState.subscriptions.length;\r\n        if (filteredLength !== (initialLength - 1)) {\r\n            return;\r\n        }\r\n        if (sendKickMessage === true) {\r\n            this.sendResult({\r\n                EventStreamAction: 2,\r\n                EventStreamSubject: privateEventStreamSubject,\r\n                MethodName: streamingMethod.protocolState.method.Method.Name,\r\n                MethodRequestSubject: streamingMethod.protocolState.method.MethodRequestSubject,\r\n                MethodResponseSubject: subscription.methodResponseSubject,\r\n                MethodVersion: streamingMethod.protocolState.method.Method.Version,\r\n                ResponseContextJson: {},\r\n                Server: helpers_1.convertInstance(this.instance),\r\n                StreamId: subscription.streamId,\r\n                Status: 0,\r\n            });\r\n        }\r\n        if (typeof this.subRemovedHandler === \"function\") {\r\n            this.subRemovedHandler(subscription, streamingMethod);\r\n        }\r\n    };\r\n    ServerStreaming.prototype.getUniqueBranchNames = function (streamingMethod) {\r\n        var keysWithDuplicates = streamingMethod.protocolState.subscriptions.map(function (sub) {\r\n            var result = null;\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                result = sub.branchKey;\r\n            }\r\n            return result;\r\n        });\r\n        var seen = [];\r\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\r\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\r\n                return false;\r\n            }\r\n            seen.push(bKey);\r\n            return true;\r\n        });\r\n        return branchArray;\r\n    };\r\n    return ServerStreaming;\r\n}());\r\nexports.default = ServerStreaming;\r\n//# sourceMappingURL=server-streaming.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw1/server-streaming.js\n// module id = 39\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar random_1 = require(\"../../helpers/random\");\r\nvar server_streaming_1 = require(\"./server-streaming\");\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nvar helpers_1 = require(\"./helpers\");\r\nvar HeartbeatInterval = 5000;\r\nvar PresenceInterval = 10000;\r\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(connection, instance, configuration, serverRepository) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        this.instance = instance;\r\n        this.serverRepository = serverRepository;\r\n        this.invocationMessagesMap = {};\r\n        this.reqCounter = 0;\r\n        this.callbacks = callback_registry_1.default();\r\n        this.streaming = new server_streaming_1.default(connection, instance);\r\n        connection.on(\"agm\", \"MethodInvocationRequestMessage\", function (msg) { return _this.handleMethodInvocationMessage(msg); });\r\n        connection.disconnected(this.stopTimers.bind(this));\r\n        this.sendHeartbeat();\r\n        if (this.heartbeatTimer === undefined) {\r\n            this.heartbeatTimer = setInterval(function () { return _this.sendHeartbeat(); }, HeartbeatInterval);\r\n        }\r\n        this.getBranchList = this.streaming.getBranchList;\r\n        this.getSubscriptionList = this.streaming.getSubscriptionList;\r\n        this.closeAllSubscriptions = this.streaming.closeAllSubscriptions;\r\n        this.closeSingleSubscription = this.streaming.closeSingleSubscription;\r\n        this.pushDataToSingle = this.streaming.pushDataToSingle;\r\n        this.pushData = this.streaming.pushData;\r\n        this.onSubRequest = this.streaming.onSubRequest;\r\n        this.acceptRequestOnBranch = this.streaming.acceptRequestOnBranch;\r\n        this.rejectRequest = this.streaming.rejectRequest;\r\n        this.onSubAdded = this.streaming.onSubAdded;\r\n        this.onSubRemoved = this.streaming.onSubRemoved;\r\n    }\r\n    ServerProtocol.prototype.stopTimers = function () {\r\n        clearInterval(this.presenceTimer);\r\n        clearInterval(this.heartbeatTimer);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (info) {\r\n        this.sendPresence();\r\n        return Promise.resolve();\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, success, error) {\r\n        var reqSubj = this.nextRequestSubject();\r\n        repoMethod.protocolState.method = this.createNewMethodMessage(repoMethod.definition, reqSubj, false);\r\n        this.announceNewMethod();\r\n        success();\r\n        return Promise.resolve();\r\n    };\r\n    ServerProtocol.prototype.createStream = function (repoMethod, success, error) {\r\n        var reqSubj = this.nextRequestSubject();\r\n        var streamConverted = this.createNewMethodMessage(repoMethod.definition, reqSubj, true);\r\n        repoMethod.protocolState.method = streamConverted;\r\n        repoMethod.protocolState.globalEventStreamSubject = repoMethod.definition.name + \".jsStream.\" + random_1.default();\r\n        repoMethod.protocolState.subscriptions = [];\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        this.announceNewMethod();\r\n        success();\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (executedMethod, invocationId, err, result) {\r\n        var message = this.invocationMessagesMap[invocationId];\r\n        if (!message) {\r\n            return;\r\n        }\r\n        if (message.MethodResponseSubject === \"null\") {\r\n            return;\r\n        }\r\n        if (executedMethod === undefined) {\r\n            return;\r\n        }\r\n        var resultMessage = {\r\n            MethodRequestSubject: message.MethodRequestSubject,\r\n            MethodResponseSubject: message.MethodResponseSubject,\r\n            MethodName: executedMethod.protocolState.method.Method.Name,\r\n            InvocationId: invocationId,\r\n            ResultContextJson: result,\r\n            Server: helpers_1.convertInstance(this.instance),\r\n            ResultMessage: err,\r\n            Status: err ? 1 : 0,\r\n        };\r\n        this.connection.send(\"agm\", \"MethodInvocationResultMessage\", resultMessage);\r\n        delete this.invocationMessagesMap[invocationId];\r\n    };\r\n    ServerProtocol.prototype.nextRequestSubject = function () {\r\n        return \"req_\" + (this.reqCounter++) + \"_\" + random_1.default();\r\n    };\r\n    ServerProtocol.prototype.sendHeartbeat = function () {\r\n        this.connection.send(\"agm\", \"ServerHeartbeatMessage\", this.constructHeartbeat());\r\n    };\r\n    ServerProtocol.prototype.constructHeartbeat = function () {\r\n        return {\r\n            PublishingInterval: HeartbeatInterval,\r\n            Instance: helpers_1.convertInstance(this.instance),\r\n        };\r\n    };\r\n    ServerProtocol.prototype.constructPresence = function () {\r\n        var methods = this.serverRepository.getList();\r\n        return {\r\n            PublishingInterval: PresenceInterval,\r\n            Instance: helpers_1.convertInstance(this.instance),\r\n            MethodDefinitions: methods.map(function (m) { return m.protocolState.method; }),\r\n        };\r\n    };\r\n    ServerProtocol.prototype.sendPresence = function () {\r\n        this.connection.send(\"agm\", \"ServerPresenceMessage\", this.constructPresence());\r\n    };\r\n    ServerProtocol.prototype.announceNewMethod = function () {\r\n        var _this = this;\r\n        this.sendPresence();\r\n        if (this.presenceTimer === undefined) {\r\n            this.presenceTimer = setInterval(function () { return _this.sendPresence(); }, PresenceInterval);\r\n        }\r\n    };\r\n    ServerProtocol.prototype.handleMethodInvocationMessage = function (message) {\r\n        var subject = message.MethodRequestSubject;\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.protocolState.method.MethodRequestSubject === subject;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        if (this.streaming.isStreamMsg(message, method)) {\r\n            this.streaming.processSubscriberMsg(message, method);\r\n            return;\r\n        }\r\n        var invocationId = message.Context.InvocationId;\r\n        this.invocationMessagesMap[invocationId] = message;\r\n        var invocationArgs = {\r\n            args: message.Context.ArgumentsJson,\r\n            instance: helpers_1.convertInfoToInstance(message.Client),\r\n        };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    ServerProtocol.prototype.createNewMethodMessage = function (methodIdentifier, subject, stream) {\r\n        if (typeof methodIdentifier === \"string\") {\r\n            methodIdentifier = { name: methodIdentifier };\r\n        }\r\n        if (typeof methodIdentifier.version !== \"number\") {\r\n            methodIdentifier.version = 0;\r\n        }\r\n        return {\r\n            Method: {\r\n                Name: methodIdentifier.name,\r\n                InputSignature: methodIdentifier.accepts,\r\n                ResultSignature: methodIdentifier.returns,\r\n                Description: methodIdentifier.description,\r\n                DisplayName: methodIdentifier.displayName,\r\n                Version: methodIdentifier.version,\r\n                ObjectTypeRestrictions: methodIdentifier.objectTypes,\r\n                Flags: stream ? 32 : undefined,\r\n            },\r\n            MethodRequestSubject: subject,\r\n        };\r\n    };\r\n    return ServerProtocol;\r\n}());\r\nexports.default = ServerProtocol;\r\n//# sourceMappingURL=server.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw1/server.js\n// module id = 40\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar STATUS_AWAITING_ACCEPT = \"awaitingAccept\";\r\nvar STATUS_SUBSCRIBED = \"subscribed\";\r\nvar ERR_MSG_SUB_FAILED = \"Subscription failed.\";\r\nvar ERR_MSG_SUB_REJECTED = \"Subscription rejected.\";\r\nvar ON_CLOSE_MSG_SERVER_INIT = \"ServerInitiated\";\r\nvar ON_CLOSE_MSG_CLIENT_INIT = \"ClientInitiated\";\r\nvar ClientStreaming = (function () {\r\n    function ClientStreaming(instance, session, repository, logger) {\r\n        var _this = this;\r\n        this.instance = instance;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.subscriptionsList = {};\r\n        this.subscriptionIdToLocalKeyMap = {};\r\n        this.nextSubLocalKey = 0;\r\n        this.handleErrorSubscribing = function (errorResponse) {\r\n            var tag = errorResponse._tag;\r\n            var subLocalKey = tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                return server.serverId !== tag.serverId;\r\n            });\r\n            if (pendingSub.trackedServers.length <= 0) {\r\n                clearTimeout(pendingSub.timeoutId);\r\n                if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                    var reason = (typeof errorResponse.reason === \"string\" && errorResponse.reason !== \"\") ?\r\n                        ' Publisher said \"' + errorResponse.reason + '\".' :\r\n                        \" No reason given.\";\r\n                    var callArgs = typeof pendingSub.arguments === \"object\" ?\r\n                        JSON.stringify(pendingSub.arguments) :\r\n                        \"{}\";\r\n                    pendingSub.error({\r\n                        message: ERR_MSG_SUB_REJECTED + reason + \" Called with:\" + callArgs,\r\n                        called_with: pendingSub.arguments,\r\n                        method: pendingSub.method.getInfoForUser(),\r\n                    });\r\n                }\r\n                else if (pendingSub.status === STATUS_SUBSCRIBED) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                }\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n        };\r\n        this.handleSubscribed = function (msg) {\r\n            var subLocalKey = msg._tag.subLocalKey;\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (typeof pendingSub !== \"object\") {\r\n                return;\r\n            }\r\n            var serverId = msg._tag.serverId;\r\n            var acceptingServer = pendingSub.trackedServers\r\n                .filter(function (server) {\r\n                return server.serverId === serverId;\r\n            })[0];\r\n            if (typeof acceptingServer !== \"object\") {\r\n                return;\r\n            }\r\n            acceptingServer.subscriptionId = msg.subscription_id;\r\n            _this.subscriptionIdToLocalKeyMap[msg.subscription_id] = subLocalKey;\r\n            var isFirstResponse = (pendingSub.status === STATUS_AWAITING_ACCEPT);\r\n            pendingSub.status = STATUS_SUBSCRIBED;\r\n            var that = _this;\r\n            if (isFirstResponse) {\r\n                pendingSub.success({\r\n                    onData: function (dataCallback) {\r\n                        if (typeof dataCallback !== \"function\") {\r\n                            throw new TypeError(\"The data callback must be a function.\");\r\n                        }\r\n                        pendingSub.handlers.onData.push(dataCallback);\r\n                        if (pendingSub.handlers.onData.length === 1 && pendingSub.queued.data.length > 0) {\r\n                            pendingSub.queued.data.forEach(function (dataItem) {\r\n                                dataCallback(dataItem);\r\n                            });\r\n                        }\r\n                    },\r\n                    onClosed: function (closedCallback) {\r\n                        if (typeof closedCallback !== \"function\") {\r\n                            throw new TypeError(\"The callback must be a function.\");\r\n                        }\r\n                        pendingSub.handlers.onClosed.push(closedCallback);\r\n                    },\r\n                    onFailed: function () {\r\n                    },\r\n                    close: function () { return that.closeSubscription(subLocalKey); },\r\n                    requestArguments: pendingSub.arguments,\r\n                    serverInstance: that.repository.getServerById(serverId).getInfoForUser(),\r\n                    stream: pendingSub.method.info,\r\n                });\r\n            }\r\n        };\r\n        this.handleEventData = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var trackedServersFound = subscription.trackedServers.filter(function (server) {\r\n                return server.subscriptionId === msg.subscription_id;\r\n            });\r\n            if (trackedServersFound.length !== 1) {\r\n                return;\r\n            }\r\n            var isPrivateData = msg.oob && msg.snapshot;\r\n            var sendingServerId = trackedServersFound[0].serverId;\r\n            var receivedStreamData = function () {\r\n                return {\r\n                    data: msg.data,\r\n                    server: _this.repository.getServerById(sendingServerId).getInfoForUser(),\r\n                    requestArguments: subscription.arguments || {},\r\n                    message: null,\r\n                    private: isPrivateData,\r\n                };\r\n            };\r\n            var onDataHandlers = subscription.handlers.onData;\r\n            var queuedData = subscription.queued.data;\r\n            if (onDataHandlers.length > 0) {\r\n                onDataHandlers.forEach(function (callback) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(receivedStreamData());\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                queuedData.push(receivedStreamData());\r\n            }\r\n        };\r\n        this.handleSubscriptionCancelled = function (msg) {\r\n            var subLocalKey = _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n            if (typeof subLocalKey === \"undefined\") {\r\n                return;\r\n            }\r\n            var subscription = _this.subscriptionsList[subLocalKey];\r\n            if (typeof subscription !== \"object\") {\r\n                return;\r\n            }\r\n            var expectedNewLength = subscription.trackedServers.length - 1;\r\n            subscription.trackedServers = subscription.trackedServers.filter(function (server) {\r\n                if (server.subscriptionId === msg.subscription_id) {\r\n                    subscription.queued.closers.push(server.serverId);\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                }\r\n            });\r\n            if (subscription.trackedServers.length !== expectedNewLength) {\r\n                return;\r\n            }\r\n            if (subscription.trackedServers.length <= 0) {\r\n                clearTimeout(subscription.timeoutId);\r\n                _this.callOnClosedHandlers(subscription);\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            delete _this.subscriptionIdToLocalKeyMap[msg.subscription_id];\r\n        };\r\n        session.on(\"subscribed\", this.handleSubscribed);\r\n        session.on(\"event\", this.handleEventData);\r\n        session.on(\"subscription-cancelled\", this.handleSubscriptionCancelled);\r\n    }\r\n    ClientStreaming.prototype.subscribe = function (streamingMethod, argumentObj, targetServers, stuff, success, error) {\r\n        var _this = this;\r\n        if (targetServers.length === 0) {\r\n            error({\r\n                method: streamingMethod.getInfoForUser(),\r\n                called_with: argumentObj,\r\n                message: ERR_MSG_SUB_FAILED + \" No available servers matched the target params.\",\r\n            });\r\n            return;\r\n        }\r\n        var subLocalKey = this.getNextSubscriptionLocalKey();\r\n        var pendingSub = this.registerSubscription(subLocalKey, streamingMethod, argumentObj, success, error, stuff.methodResponseTimeout);\r\n        if (typeof pendingSub !== \"object\") {\r\n            error({\r\n                method: streamingMethod.getInfoForUser(),\r\n                called_with: argumentObj,\r\n                message: ERR_MSG_SUB_FAILED + \" Unable to register the user callbacks.\",\r\n            });\r\n            return;\r\n        }\r\n        targetServers.forEach(function (target) {\r\n            var serverId = target.server.id;\r\n            pendingSub.trackedServers.push({\r\n                serverId: serverId,\r\n                subscriptionId: undefined,\r\n            });\r\n            var msg = {\r\n                type: \"subscribe\",\r\n                server_id: serverId,\r\n                method_id: streamingMethod.protocolState.id,\r\n                arguments_kv: argumentObj,\r\n            };\r\n            _this.session.send(msg, { serverId: serverId, subLocalKey: subLocalKey })\r\n                .then(function (m) { return _this.handleSubscribed(m); })\r\n                .catch(function (err) { return _this.handleErrorSubscribing(err); });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.getNextSubscriptionLocalKey = function () {\r\n        var current = this.nextSubLocalKey;\r\n        this.nextSubLocalKey += 1;\r\n        return current;\r\n    };\r\n    ClientStreaming.prototype.registerSubscription = function (subLocalKey, method, args, success, error, timeout) {\r\n        var _this = this;\r\n        this.subscriptionsList[subLocalKey] = {\r\n            status: STATUS_AWAITING_ACCEPT,\r\n            method: method,\r\n            arguments: args,\r\n            success: success,\r\n            error: error,\r\n            trackedServers: [],\r\n            handlers: {\r\n                onData: [],\r\n                onClosed: [],\r\n            },\r\n            queued: {\r\n                data: [],\r\n                closers: [],\r\n            },\r\n            timeoutId: undefined,\r\n        };\r\n        this.subscriptionsList[subLocalKey].timeoutId = setTimeout(function () {\r\n            if (_this.subscriptionsList[subLocalKey] === undefined) {\r\n                return;\r\n            }\r\n            var pendingSub = _this.subscriptionsList[subLocalKey];\r\n            if (pendingSub.status === STATUS_AWAITING_ACCEPT) {\r\n                error({\r\n                    method: method.getInfoForUser(),\r\n                    called_with: args,\r\n                    message: ERR_MSG_SUB_FAILED + \" Subscription attempt timed out after \" + timeout + \" ms.\",\r\n                });\r\n                delete _this.subscriptionsList[subLocalKey];\r\n            }\r\n            else if (pendingSub.status === STATUS_SUBSCRIBED && pendingSub.trackedServers.length > 0) {\r\n                pendingSub.trackedServers = pendingSub.trackedServers.filter(function (server) {\r\n                    return (typeof server.subscriptionId !== \"undefined\");\r\n                });\r\n                delete pendingSub.timeoutId;\r\n                if (pendingSub.trackedServers.length <= 0) {\r\n                    _this.callOnClosedHandlers(pendingSub);\r\n                    delete _this.subscriptionsList[subLocalKey];\r\n                }\r\n            }\r\n        }, timeout);\r\n        return this.subscriptionsList[subLocalKey];\r\n    };\r\n    ClientStreaming.prototype.callOnClosedHandlers = function (subscription, reason) {\r\n        var closersCount = subscription.queued.closers.length;\r\n        var closingServerId = (closersCount > 0) ? subscription.queued.closers[closersCount - 1] : null;\r\n        var closingServer = null;\r\n        if (typeof closingServerId === \"number\") {\r\n            closingServer = this.repository.getServerById(closingServerId).getInfoForUser();\r\n        }\r\n        subscription.handlers.onClosed.forEach(function (callback) {\r\n            if (typeof callback !== \"function\") {\r\n                return;\r\n            }\r\n            callback({\r\n                message: reason || ON_CLOSE_MSG_SERVER_INIT,\r\n                requestArguments: subscription.arguments,\r\n                server: closingServer,\r\n                stream: subscription.method,\r\n            });\r\n        });\r\n    };\r\n    ClientStreaming.prototype.closeSubscription = function (subLocalKey) {\r\n        var _this = this;\r\n        var subscription = this.subscriptionsList[subLocalKey];\r\n        if (typeof subscription !== \"object\") {\r\n            return;\r\n        }\r\n        subscription.trackedServers.forEach(function (server) {\r\n            if (typeof server.subscriptionId === \"undefined\") {\r\n                return;\r\n            }\r\n            _this.session.sendFireAndForget({\r\n                type: \"unsubscribe\",\r\n                subscription_id: server.subscriptionId,\r\n                reason_uri: \"\",\r\n                reason: ON_CLOSE_MSG_CLIENT_INIT,\r\n            });\r\n            delete _this.subscriptionIdToLocalKeyMap[server.subscriptionId];\r\n        });\r\n        subscription.trackedServers = [];\r\n        this.callOnClosedHandlers(subscription, ON_CLOSE_MSG_CLIENT_INIT);\r\n        delete this.subscriptionsList[subLocalKey];\r\n    };\r\n    return ClientStreaming;\r\n}());\r\nexports.default = ClientStreaming;\r\n//# sourceMappingURL=client-streaming.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw3/client-streaming.js\n// module id = 41\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nvar client_streaming_1 = require(\"./client-streaming\");\r\nvar ClientProtocol = (function () {\r\n    function ClientProtocol(instance, session, repository, logger) {\r\n        var _this = this;\r\n        this.instance = instance;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.logger = logger;\r\n        this.callbacks = callback_registry_1.default();\r\n        session.on(\"peer-added\", function (msg) { return _this.handlePeerAdded(msg); });\r\n        session.on(\"peer-removed\", function (msg) { return _this.handlePeerRemoved(msg); });\r\n        session.on(\"methods-added\", function (msg) { return _this.handleMethodsAddedMessage(msg); });\r\n        session.on(\"methods-removed\", function (msg) { return _this.handleMethodsRemovedMessage(msg); });\r\n        this.streaming = new client_streaming_1.default(instance, session, repository, logger);\r\n    }\r\n    ClientProtocol.prototype.subscribe = function (stream, args, targetServers, options, success, error) {\r\n        this.streaming.subscribe(stream, args, targetServers, options, success, error);\r\n    };\r\n    ClientProtocol.prototype.invoke = function (id, method, args, target) {\r\n        var _this = this;\r\n        var serverId = target.id;\r\n        var methodId = method.protocolState.id;\r\n        var msg = {\r\n            type: \"call\",\r\n            server_id: serverId,\r\n            method_id: methodId,\r\n            arguments_kv: args,\r\n        };\r\n        this.session.send(msg, { invocationId: id, serverId: serverId })\r\n            .then(function (m) { return _this.handleResultMessage(m); })\r\n            .catch(function (err) { return _this.handleInvocationError(err); });\r\n    };\r\n    ClientProtocol.prototype.onInvocationResult = function (callback) {\r\n        this.callbacks.add(\"onResult\", callback);\r\n    };\r\n    ClientProtocol.prototype.handlePeerAdded = function (msg) {\r\n        var newPeerId = msg.new_peer_id;\r\n        var remoteId = msg.identity;\r\n        var pid = Number(remoteId.process);\r\n        var serverInfo = {\r\n            machine: remoteId.machine,\r\n            pid: isNaN(pid) ? remoteId.process : pid,\r\n            instance: remoteId.instance,\r\n            application: remoteId.application,\r\n            environment: remoteId.environment,\r\n            region: remoteId.region,\r\n            user: remoteId.user,\r\n            windowId: remoteId.windowId,\r\n            peerId: newPeerId,\r\n        };\r\n        this.repository.addServer(serverInfo, newPeerId);\r\n    };\r\n    ClientProtocol.prototype.handlePeerRemoved = function (msg) {\r\n        var removedPeerId = msg.removed_id;\r\n        var reason = msg.reason;\r\n        this.repository.removeServerById(removedPeerId, reason);\r\n    };\r\n    ClientProtocol.prototype.handleMethodsAddedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methods = msg.methods;\r\n        methods.forEach(function (method) {\r\n            var methodInfo = {\r\n                name: method.name,\r\n                displayName: method.display_name,\r\n                description: method.description,\r\n                version: method.version,\r\n                objectTypes: method.object_types || [],\r\n                accepts: method.input_signature,\r\n                returns: method.result_signature,\r\n                supportsStreaming: typeof method.flags !== \"undefined\" ? method.flags.streaming : false,\r\n            };\r\n            _this.repository.addServerMethod(serverId, methodInfo, { id: method.id });\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleMethodsRemovedMessage = function (msg) {\r\n        var _this = this;\r\n        var serverId = msg.server_id;\r\n        var methodIdList = msg.methods;\r\n        var server = this.repository.getServerById(serverId);\r\n        var serverMethodKeys = Object.keys(server.methods);\r\n        serverMethodKeys.forEach(function (methodKey) {\r\n            var method = server.methods[methodKey];\r\n            if (methodIdList.indexOf(method.protocolState.id) > -1) {\r\n                _this.repository.removeServerMethod(serverId, methodKey);\r\n            }\r\n        });\r\n    };\r\n    ClientProtocol.prototype.handleResultMessage = function (msg) {\r\n        var invocationId = msg._tag.invocationId;\r\n        var result = msg.result;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        this.callbacks.execute(\"onResult\", invocationId, server.getInfoForUser(), 0, result, \"\");\r\n    };\r\n    ClientProtocol.prototype.handleInvocationError = function (msg) {\r\n        this.logger.debug(\"handle invocation error \" + JSON.stringify(msg));\r\n        var invocationId = msg._tag.invocationId;\r\n        var serverId = msg._tag.serverId;\r\n        var server = this.repository.getServerById(serverId);\r\n        var message = msg.reason;\r\n        var context = msg.context;\r\n        this.callbacks.execute(\"onResult\", invocationId, server.getInfoForUser(), 1, context, message);\r\n    };\r\n    return ClientProtocol;\r\n}());\r\nexports.default = ClientProtocol;\r\n//# sourceMappingURL=client.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw3/client.js\n// module id = 42\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar server_1 = require(\"./server\");\r\nvar client_1 = require(\"./client\");\r\nfunction default_1(instance, connection, clientRepository, serverRepository, libConfig, getAGM) {\r\n    var logger = libConfig.logger.subLogger(\"gw3-protocol\");\r\n    var resolveReadyPromise;\r\n    var readyPromise = new Promise(function (resolve) {\r\n        resolveReadyPromise = resolve;\r\n    });\r\n    var session = connection.domain(\"agm\", logger.subLogger(\"domain\"), [\"subscribed\"]);\r\n    var server = new server_1.default(instance, session, clientRepository, serverRepository, logger.subLogger(\"server\"));\r\n    var client = new client_1.default(instance, session, clientRepository, logger.subLogger(\"client\"));\r\n    function handleReconnect() {\r\n        logger.info(\"reconnected - will replay registered methods and subscriptions\");\r\n        clientRepository.reset();\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        var registeredMethods = serverRepository.getList();\r\n        serverRepository.reset();\r\n        registeredMethods.forEach(function (method) {\r\n            var def = method.definition;\r\n            if (method.theFunction.userCallback) {\r\n                getAGM().register(def, method.theFunction.userCallback);\r\n            }\r\n            else if (method.theFunction.userCallbackAsync) {\r\n                getAGM().registerAsync(def, method.theFunction.userCallbackAsync);\r\n            }\r\n        });\r\n    }\r\n    function handleInitialJoin() {\r\n        clientRepository.addServer(instance, connection.peerId);\r\n        resolveReadyPromise({\r\n            client: client,\r\n            server: server,\r\n        });\r\n        resolveReadyPromise = undefined;\r\n    }\r\n    session.onJoined(function (reconnect) {\r\n        if (reconnect) {\r\n            handleReconnect();\r\n        }\r\n        else {\r\n            handleInitialJoin();\r\n        }\r\n    });\r\n    session.join();\r\n    return readyPromise;\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=factory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw3/factory.js\n// module id = 43\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nvar SUBSCRIPTION_REQUEST = \"onSubscriptionRequest\";\r\nvar SUBSCRIPTION_ADDED = \"onSubscriptionAdded\";\r\nvar SUBSCRIPTION_REMOVED = \"onSubscriptionRemoved\";\r\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(instance, session, repository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.instance = instance;\r\n        this.session = session;\r\n        this.repository = repository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.ERR_URI_SUBSCRIPTION_FAILED = \"com.tick42.agm.errors.subscription.failure\";\r\n        this.callbacks = callback_registry_1.default();\r\n        this.nextStreamId = 0;\r\n        session.on(\"add-interest\", function (msg) { _this.handleAddInterest(msg); });\r\n        session.on(\"remove-interest\", function (msg) { _this.handleRemoveInterest(msg); });\r\n    }\r\n    ServerStreaming.prototype.acceptRequestOnBranch = function (requestContext, streamingMethod, branch) {\r\n        if (typeof branch !== \"string\") {\r\n            branch = \"\";\r\n        }\r\n        if (typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            throw new TypeError(\"The streaming method is missing its subscriptions.\");\r\n        }\r\n        if (!Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            throw new TypeError(\"The streaming method is missing its branches.\");\r\n        }\r\n        var streamId = this.getStreamId(streamingMethod, branch);\r\n        var key = requestContext.msg.subscription_id;\r\n        var subscription = {\r\n            id: key,\r\n            arguments: requestContext.arguments,\r\n            instance: requestContext.instance,\r\n            branchKey: branch,\r\n            streamId: streamId,\r\n            subscribeMsg: requestContext.msg,\r\n        };\r\n        streamingMethod.protocolState.subscriptionsMap[key] = subscription;\r\n        this.session.sendFireAndForget({\r\n            type: \"accepted\",\r\n            subscription_id: key,\r\n            stream_id: streamId,\r\n        });\r\n        this.callbacks.execute(SUBSCRIPTION_ADDED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.rejectRequest = function (requestContext, streamingMethod, reason) {\r\n        if (typeof reason !== \"string\") {\r\n            reason = \"\";\r\n        }\r\n        this.sendSubscriptionFailed(\"Subscription rejected by user. \" + reason, requestContext.msg.subscription_id);\r\n    };\r\n    ServerStreaming.prototype.pushData = function (streamingMethod, data, branches) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || !Array.isArray(streamingMethod.protocolState.branchKeyToStreamIdMap)) {\r\n            return;\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        if (typeof branches === \"string\") {\r\n            branches = [branches];\r\n        }\r\n        else if (!Array.isArray(branches) || branches.length <= 0) {\r\n            branches = null;\r\n        }\r\n        var streamIdList = streamingMethod.protocolState.branchKeyToStreamIdMap\r\n            .filter(function (br) {\r\n            return (branches === null || (Boolean(br) && typeof br.key === \"string\" && branches.indexOf(br.key) >= 0));\r\n        }).map(function (br) {\r\n            return br.streamId;\r\n        });\r\n        streamIdList.forEach(function (streamId) {\r\n            var publishMessage = {\r\n                type: \"publish\",\r\n                stream_id: streamId,\r\n                data: data,\r\n            };\r\n            _this.session.sendFireAndForget(publishMessage);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        var postMessage = {\r\n            type: \"post\",\r\n            subscription_id: subscription.id,\r\n            data: data,\r\n        };\r\n        this.session.sendFireAndForget(postMessage);\r\n    };\r\n    ServerStreaming.prototype.closeSingleSubscription = function (streamingMethod, subscription) {\r\n        delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n        var dropSubscriptionMessage = {\r\n            type: \"drop-subscription\",\r\n            subscription_id: subscription.id,\r\n            reason: \"Server dropping a single subscription\",\r\n        };\r\n        this.session.sendFireAndForget(dropSubscriptionMessage);\r\n        var subscriber = subscription.instance;\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.closeMultipleSubscriptions = function (streamingMethod, branchKey) {\r\n        var _this = this;\r\n        if (typeof streamingMethod !== \"object\" || typeof streamingMethod.protocolState.subscriptionsMap !== \"object\") {\r\n            return;\r\n        }\r\n        var subscriptionsToClose = Object.keys(streamingMethod.protocolState.subscriptionsMap)\r\n            .map(function (key) {\r\n            return streamingMethod.protocolState.subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey === \"string\") {\r\n            subscriptionsToClose = subscriptionsToClose.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        subscriptionsToClose.forEach(function (subscription) {\r\n            delete streamingMethod.protocolState.subscriptionsMap[subscription.id];\r\n            var drop = {\r\n                type: \"drop-subscription\",\r\n                subscription_id: subscription.id,\r\n                reason: \"Server dropping all subscriptions on stream_id: \" + subscription.streamId,\r\n            };\r\n            _this.session.sendFireAndForget(drop);\r\n        });\r\n    };\r\n    ServerStreaming.prototype.getSubscriptionList = function (streamingMethod, branchKey) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var subscriptions = [];\r\n        var allSubscriptions = Object.keys(streamingMethod.protocolState.subscriptionsMap)\r\n            .map(function (key) {\r\n            return streamingMethod.protocolState.subscriptionsMap[key];\r\n        });\r\n        if (typeof branchKey !== \"string\") {\r\n            subscriptions = allSubscriptions;\r\n        }\r\n        else {\r\n            subscriptions = allSubscriptions.filter(function (sub) {\r\n                return sub.branchKey === branchKey;\r\n            });\r\n        }\r\n        return subscriptions;\r\n    };\r\n    ServerStreaming.prototype.getBranchList = function (streamingMethod) {\r\n        if (typeof streamingMethod !== \"object\") {\r\n            return [];\r\n        }\r\n        var allSubscriptions = Object.keys(streamingMethod.protocolState.subscriptionsMap)\r\n            .map(function (key) {\r\n            return streamingMethod.protocolState.subscriptionsMap[key];\r\n        });\r\n        var keysWithDuplicates = allSubscriptions.map(function (sub) {\r\n            var result = null;\r\n            if (typeof sub === \"object\" && typeof sub.branchKey === \"string\") {\r\n                result = sub.branchKey;\r\n            }\r\n            return result;\r\n        });\r\n        var seen = [];\r\n        var branchArray = keysWithDuplicates.filter(function (bKey) {\r\n            if (bKey === null || seen.indexOf(bKey) >= 0) {\r\n                return false;\r\n            }\r\n            seen.push(bKey);\r\n            return true;\r\n        });\r\n        return branchArray;\r\n    };\r\n    ServerStreaming.prototype.onSubAdded = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_ADDED, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRequest = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REQUEST, callback);\r\n    };\r\n    ServerStreaming.prototype.onSubRemoved = function (callback) {\r\n        this.onSubscriptionLifetimeEvent(SUBSCRIPTION_REMOVED, callback);\r\n    };\r\n    ServerStreaming.prototype.handleRemoveInterest = function (msg) {\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (typeof msg.subscription_id !== \"string\" ||\r\n            typeof streamingMethod !== \"object\" ||\r\n            typeof streamingMethod.protocolState.subscriptionsMap[msg.subscription_id] !== \"object\") {\r\n            return;\r\n        }\r\n        var subscription = streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        delete streamingMethod.protocolState.subscriptionsMap[msg.subscription_id];\r\n        this.callbacks.execute(SUBSCRIPTION_REMOVED, subscription, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.onSubscriptionLifetimeEvent = function (eventName, handlerFunc) {\r\n        this.callbacks.add(eventName, handlerFunc);\r\n    };\r\n    ServerStreaming.prototype.getNextStreamId = function () {\r\n        return this.nextStreamId++ + \"\";\r\n    };\r\n    ServerStreaming.prototype.handleAddInterest = function (msg) {\r\n        var caller = this.repository.getServerById(msg.caller_id);\r\n        var instance = (typeof caller.getInfoForUser === \"function\") ? caller.getInfoForUser() : null;\r\n        var requestContext = {\r\n            msg: msg,\r\n            arguments: msg.arguments_kv || {},\r\n            instance: instance,\r\n        };\r\n        var streamingMethod = this.serverRepository.getById(msg.method_id);\r\n        if (streamingMethod === undefined) {\r\n            var errorMsg = \"No method with id \" + msg.method_id + \" on this server.\";\r\n            this.sendSubscriptionFailed(errorMsg, msg.subscription_id);\r\n            return;\r\n        }\r\n        if (streamingMethod.protocolState.subscriptionsMap &&\r\n            streamingMethod.protocolState.subscriptionsMap[msg.subscription_id]) {\r\n            this.sendSubscriptionFailed(\"A subscription with id \" + msg.subscription_id + \" already exists.\", msg.subscription_id);\r\n            return;\r\n        }\r\n        this.callbacks.execute(SUBSCRIPTION_REQUEST, requestContext, streamingMethod);\r\n    };\r\n    ServerStreaming.prototype.sendSubscriptionFailed = function (reason, subscriptionId) {\r\n        var errorMessage = {\r\n            type: \"error\",\r\n            reason_uri: this.ERR_URI_SUBSCRIPTION_FAILED,\r\n            reason: reason,\r\n            request_id: subscriptionId,\r\n        };\r\n        this.session.sendFireAndForget(errorMessage);\r\n    };\r\n    ServerStreaming.prototype.getStreamId = function (streamingMethod, branchKey) {\r\n        if (typeof branchKey !== \"string\") {\r\n            branchKey = \"\";\r\n        }\r\n        var needleBranch = streamingMethod.protocolState.branchKeyToStreamIdMap.filter(function (branch) {\r\n            return branch.key === branchKey;\r\n        })[0];\r\n        var streamId = (needleBranch ? needleBranch.streamId : undefined);\r\n        if (typeof streamId !== \"string\" || streamId === \"\") {\r\n            streamId = this.getNextStreamId();\r\n            streamingMethod.protocolState.branchKeyToStreamIdMap.push({ key: branchKey, streamId: streamId });\r\n        }\r\n        return streamId;\r\n    };\r\n    return ServerStreaming;\r\n}());\r\nexports.default = ServerStreaming;\r\n//# sourceMappingURL=server-streaming.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw3/server-streaming.js\n// module id = 44\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nvar server_streaming_1 = require(\"./server-streaming\");\r\nvar ServerProtocol = (function () {\r\n    function ServerProtocol(instance, session, clientRepository, serverRepository, logger) {\r\n        var _this = this;\r\n        this.session = session;\r\n        this.clientRepository = clientRepository;\r\n        this.serverRepository = serverRepository;\r\n        this.logger = logger;\r\n        this.callbacks = callback_registry_1.default();\r\n        this.streaming = new server_streaming_1.default(instance, session, clientRepository, serverRepository, logger);\r\n        this.session.on(\"invoke\", function (msg) { return _this.handleInvokeMessage(msg); });\r\n    }\r\n    ServerProtocol.prototype.createStream = function (repoMethod, success, error) {\r\n        var isStreaming = true;\r\n        repoMethod.protocolState.subscriptionsMap = {};\r\n        repoMethod.protocolState.branchKeyToStreamIdMap = [];\r\n        this.register(repoMethod, success, error, isStreaming);\r\n    };\r\n    ServerProtocol.prototype.register = function (repoMethod, success, error, isStreaming) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDef, flags, registerMsg;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodDef = repoMethod.definition;\r\n                        repoMethod.protocolState.registrationCallbacks = {\r\n                            success: success,\r\n                            fail: error,\r\n                        };\r\n                        flags = { streaming: isStreaming || false };\r\n                        this.logger.debug('registering method \"' + methodDef.name + '\"');\r\n                        registerMsg = {\r\n                            type: \"register\",\r\n                            methods: [{\r\n                                    id: repoMethod.repoId,\r\n                                    name: methodDef.name,\r\n                                    display_name: methodDef.displayName,\r\n                                    description: methodDef.description,\r\n                                    version: methodDef.version,\r\n                                    flags: flags,\r\n                                    object_types: methodDef.objectTypes || methodDef.object_types,\r\n                                    input_signature: methodDef.accepts,\r\n                                    result_signature: methodDef.returns,\r\n                                    restrictions: undefined,\r\n                                }],\r\n                        };\r\n                        return [4, this.session.send(registerMsg, { methodId: repoMethod.repoId })\r\n                                .then(function (msg) { return _this.handleRegisteredMessage(msg); })\r\n                                .catch(function (err) { return _this.handleErrorRegister(err); })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.onInvoked = function (callback) {\r\n        this.callbacks.add(\"onInvoked\", callback);\r\n    };\r\n    ServerProtocol.prototype.methodInvocationResult = function (method, invocationId, err, result) {\r\n        var msg;\r\n        if (err) {\r\n            msg = {\r\n                type: \"error\",\r\n                request_id: invocationId,\r\n                reason_uri: \"agm.errors.client_error\",\r\n                reason: err,\r\n                context: result,\r\n                peer_id: undefined,\r\n            };\r\n        }\r\n        else {\r\n            msg = {\r\n                type: \"yield\",\r\n                invocation_id: invocationId,\r\n                peer_id: this.session.peerId,\r\n                result: result,\r\n                request_id: undefined,\r\n            };\r\n        }\r\n        this.session.sendFireAndForget(msg);\r\n    };\r\n    ServerProtocol.prototype.unregister = function (method) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var msg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        msg = {\r\n                            type: \"unregister\",\r\n                            methods: [method.repoId],\r\n                        };\r\n                        return [4, this.session.send(msg)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ServerProtocol.prototype.getBranchList = function (method) {\r\n        return this.streaming.getBranchList(method);\r\n    };\r\n    ServerProtocol.prototype.getSubscriptionList = function (method, branchKey) {\r\n        return this.streaming.getSubscriptionList(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.closeAllSubscriptions = function (method, branchKey) {\r\n        this.streaming.closeMultipleSubscriptions(method, branchKey);\r\n    };\r\n    ServerProtocol.prototype.pushData = function (method, data, branches) {\r\n        this.streaming.pushData(method, data, branches);\r\n    };\r\n    ServerProtocol.prototype.pushDataToSingle = function (method, subscription, data) {\r\n        this.streaming.pushDataToSingle(method, subscription, data);\r\n    };\r\n    ServerProtocol.prototype.closeSingleSubscription = function (method, subscription) {\r\n        this.streaming.closeSingleSubscription(method, subscription);\r\n    };\r\n    ServerProtocol.prototype.acceptRequestOnBranch = function (requestContext, method, branch) {\r\n        this.streaming.acceptRequestOnBranch(requestContext, method, branch);\r\n    };\r\n    ServerProtocol.prototype.rejectRequest = function (requestContext, method, reason) {\r\n        this.streaming.rejectRequest(requestContext, method, reason);\r\n    };\r\n    ServerProtocol.prototype.onSubRequest = function (callback) {\r\n        this.streaming.onSubRequest(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubAdded = function (callback) {\r\n        this.streaming.onSubAdded(callback);\r\n    };\r\n    ServerProtocol.prototype.onSubRemoved = function (callback) {\r\n        this.streaming.onSubRemoved(callback);\r\n    };\r\n    ServerProtocol.prototype.handleRegisteredMessage = function (msg) {\r\n        var methodId = msg._tag.methodId;\r\n        var repoMethod = this.serverRepository.getById(methodId);\r\n        if (repoMethod && repoMethod.protocolState.registrationCallbacks) {\r\n            this.logger.debug(\"registered method \" + repoMethod.definition.name + \" with id \" + methodId);\r\n            repoMethod.protocolState.registrationCallbacks.success();\r\n        }\r\n    };\r\n    ServerProtocol.prototype.handleErrorRegister = function (msg) {\r\n        this.logger.warn(JSON.stringify(msg));\r\n        var methodId = msg._tag.methodId;\r\n        var repoMethod = this.serverRepository.getById(methodId);\r\n        if (repoMethod && repoMethod.protocolState.registrationCallbacks) {\r\n            this.logger.debug(\"failed to register method \" + repoMethod.definition.name + \" with id \" + methodId);\r\n            repoMethod.protocolState.registrationCallbacks.fail();\r\n        }\r\n    };\r\n    ServerProtocol.prototype.handleInvokeMessage = function (msg) {\r\n        var invocationId = msg.invocation_id;\r\n        var callerId = msg.caller_id;\r\n        var methodId = msg.method_id;\r\n        var args = msg.arguments_kv;\r\n        this.logger.debug('received invocation for method id \"' + methodId + '\" from peer ' + callerId);\r\n        var methodList = this.serverRepository.getList();\r\n        var method = methodList.filter(function (m) {\r\n            return m.repoId === methodId;\r\n        })[0];\r\n        if (method === undefined) {\r\n            return;\r\n        }\r\n        var client = this.clientRepository.getServerById(callerId);\r\n        var invocationArgs = { args: args, instance: client.getInfoForUser() };\r\n        this.callbacks.execute(\"onInvoked\", method, invocationId, invocationArgs);\r\n    };\r\n    return ServerProtocol;\r\n}());\r\nexports.default = ServerProtocol;\r\n//# sourceMappingURL=server.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/protocols/gw3/server.js\n// module id = 45\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar subscription_1 = require(\"./subscription\");\r\nvar ServerBranch = (function () {\r\n    function ServerBranch(key, protocol, repoMethod) {\r\n        this.key = key;\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n    }\r\n    ServerBranch.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod, this.key);\r\n        return subList.map(function (sub) {\r\n            return new subscription_1.default(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    ServerBranch.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod, this.key);\r\n    };\r\n    ServerBranch.prototype.push = function (data) {\r\n        this.protocol.server.pushData(this.repoMethod, data, [this.key]);\r\n    };\r\n    return ServerBranch;\r\n}());\r\nexports.default = ServerBranch;\r\n//# sourceMappingURL=branch.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/server/branch.js\n// module id = 46\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ServerRepository = (function () {\r\n    function ServerRepository() {\r\n        this.nextId = 0;\r\n        this.methods = [];\r\n    }\r\n    ServerRepository.prototype.add = function (method) {\r\n        if (typeof method !== \"object\") {\r\n            return;\r\n        }\r\n        if (method.repoId !== undefined) {\r\n            return;\r\n        }\r\n        method.repoId = String(this.nextId);\r\n        this.nextId += 1;\r\n        this.methods.push(method);\r\n        return method;\r\n    };\r\n    ServerRepository.prototype.remove = function (repoId) {\r\n        if (typeof repoId !== \"string\") {\r\n            return new TypeError(\"Expecting a string\");\r\n        }\r\n        this.methods = this.methods.filter(function (m) {\r\n            return m.repoId !== repoId;\r\n        });\r\n    };\r\n    ServerRepository.prototype.getById = function (id) {\r\n        if (typeof id !== \"string\") {\r\n            return undefined;\r\n        }\r\n        return this.methods.filter(function (m) {\r\n            return m.repoId === id;\r\n        })[0];\r\n    };\r\n    ServerRepository.prototype.getList = function () {\r\n        return this.methods.map(function (m) { return m; });\r\n    };\r\n    ServerRepository.prototype.length = function () {\r\n        return this.methods.length;\r\n    };\r\n    ServerRepository.prototype.reset = function () {\r\n        this.methods = [];\r\n    };\r\n    return ServerRepository;\r\n}());\r\nexports.default = ServerRepository;\r\n//# sourceMappingURL=repository.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/server/repository.js\n// module id = 47\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Request = (function () {\r\n    function Request(protocol, repoMethod, requestContext) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.requestContext = requestContext;\r\n        this.arguments = requestContext.arguments;\r\n        this.instance = requestContext.instance;\r\n    }\r\n    Request.prototype.accept = function () {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, \"\");\r\n    };\r\n    Request.prototype.acceptOnBranch = function (branch) {\r\n        this.protocol.server.acceptRequestOnBranch(this.requestContext, this.repoMethod, branch);\r\n    };\r\n    Request.prototype.reject = function (reason) {\r\n        this.protocol.server.rejectRequest(this.requestContext, this.repoMethod, reason);\r\n    };\r\n    return Request;\r\n}());\r\nexports.default = Request;\r\n//# sourceMappingURL=request.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/server/request.js\n// module id = 48\n// module chunks = 0","\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar promisify_1 = require(\"../helpers/promisify\");\r\nvar streaming_1 = require(\"./streaming\");\r\nvar stream_1 = require(\"./stream\");\r\nvar Server = (function () {\r\n    function Server(protocol, serverRepository, instance, configuration) {\r\n        this.protocol = protocol;\r\n        this.serverRepository = serverRepository;\r\n        this.instance = instance;\r\n        this.configuration = configuration;\r\n        this.invocations = 0;\r\n        this.streaming = new streaming_1.default(protocol, this);\r\n        this.protocol.server.onInvoked(this.onMethodInvoked.bind(this));\r\n    }\r\n    Server.prototype.register = function (methodDefinition, callback) {\r\n        if (methodDefinition === undefined) {\r\n            return Promise.reject(\"Please supply either a string of the Unique name or an object with property name\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be the callback function\");\r\n        }\r\n        var wrappedCallbackFunction = function (context, resultCallback) {\r\n            try {\r\n                var result = callback(context.args, context.instance);\r\n                resultCallback(null, result);\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, e);\r\n            }\r\n        };\r\n        wrappedCallbackFunction.userCallback = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallbackFunction);\r\n    };\r\n    Server.prototype.registerAsync = function (methodDefinition, callback) {\r\n        if (methodDefinition === undefined) {\r\n            return Promise.reject(\"Please supply either a string of the Unique name or an object with property name\");\r\n        }\r\n        if (typeof callback !== \"function\") {\r\n            return Promise.reject(\"The second parameter must be the callback function\");\r\n        }\r\n        var wrappedCallback = function (context, resultCallback) {\r\n            try {\r\n                callback(context.args, context.instance, function (result) {\r\n                    resultCallback(null, result);\r\n                }, function (e) {\r\n                    resultCallback(e, e);\r\n                });\r\n            }\r\n            catch (e) {\r\n                resultCallback(e, null);\r\n            }\r\n        };\r\n        wrappedCallback.userCallbackAsync = callback;\r\n        return this.registerCore(methodDefinition, wrappedCallback);\r\n    };\r\n    Server.prototype.registerCore = function (method, theFunction) {\r\n        var _this = this;\r\n        var methodDefinition;\r\n        if (typeof method === \"string\") {\r\n            methodDefinition = { name: \"\" + method };\r\n        }\r\n        else {\r\n            methodDefinition = __assign({}, method);\r\n        }\r\n        var nameAlreadyExists = this.serverRepository.getList()\r\n            .some(function (serverMethod) { return serverMethod.definition.name === methodDefinition.name; });\r\n        if (nameAlreadyExists) {\r\n            return Promise.reject(\"Name already exists !\");\r\n        }\r\n        if (methodDefinition.supportsStreaming) {\r\n            return Promise.reject(\"supportsStreaming can not be true ! If you want to create a stream please use glue.agm.createStream\");\r\n        }\r\n        var repoMethod = this.serverRepository.add({\r\n            definition: methodDefinition,\r\n            theFunction: theFunction,\r\n            protocolState: {},\r\n        });\r\n        return this.protocol.server.register(repoMethod, function () {\r\n        }, function () {\r\n            _this.serverRepository.remove(repoMethod.repoId);\r\n        });\r\n    };\r\n    Server.prototype.createStream = function (streamDef, callbacks, successCallback, errorCallback) {\r\n        var _this = this;\r\n        var promise = new Promise(function (resolve, reject) {\r\n            if (typeof streamDef === \"string\") {\r\n                if (streamDef === \"\") {\r\n                    reject(\"Invalid stream name - can not be empty\");\r\n                }\r\n                streamDef = { name: streamDef };\r\n            }\r\n            streamDef.supportsStreaming = true;\r\n            if (!callbacks) {\r\n                callbacks = {};\r\n            }\r\n            if (typeof callbacks.subscriptionRequestHandler !== \"function\") {\r\n                callbacks.subscriptionRequestHandler = function (request) {\r\n                    request.accept();\r\n                };\r\n            }\r\n            var repoMethod = {\r\n                definition: streamDef,\r\n                streamCallbacks: callbacks,\r\n                protocolState: {},\r\n            };\r\n            _this.serverRepository.add(repoMethod);\r\n            _this.protocol.server.createStream(repoMethod, function () {\r\n                var streamFrontObject = new stream_1.default(_this.protocol, repoMethod, _this);\r\n                repoMethod.stream = streamFrontObject;\r\n                resolve(streamFrontObject);\r\n            }, function (err) {\r\n                _this.serverRepository.remove(repoMethod.repoId);\r\n                reject(err);\r\n            });\r\n        });\r\n        return promisify_1.default(promise, successCallback, errorCallback);\r\n    };\r\n    Server.prototype.unregister = function (methodFilter, forStream) {\r\n        if (forStream === void 0) { forStream = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodDefinition, methodToBeRemoved;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (methodFilter === undefined) {\r\n                            return [2, Promise.reject(\"Please supply either a string of the Unique name or an object with property name\")];\r\n                        }\r\n                        if (!(typeof methodFilter === \"function\")) return [3, 2];\r\n                        return [4, this.unregisterWithPredicate(methodFilter, forStream)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                    case 2:\r\n                        if (typeof methodFilter === \"string\") {\r\n                            methodDefinition = { name: methodFilter };\r\n                        }\r\n                        else {\r\n                            methodDefinition = methodFilter;\r\n                        }\r\n                        if (methodDefinition.name === undefined) {\r\n                            return [2, Promise.reject(\"Method with undefined name does not exist !\")];\r\n                        }\r\n                        methodToBeRemoved = this.serverRepository.getList().find(function (serverMethod) {\r\n                            return serverMethod.definition.name === methodDefinition.name\r\n                                && (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodToBeRemoved) {\r\n                            return [2, Promise.reject(\"Method does not exist or it is not registered by your application !\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams([methodToBeRemoved])];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.unregisterWithPredicate = function (filterPredicate, forStream) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var methodsOrStreamsToRemove;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        methodsOrStreamsToRemove = this.serverRepository.getList()\r\n                            .filter(function (sm) { return filterPredicate(sm.definition); })\r\n                            .filter(function (serverMethod) {\r\n                            return (serverMethod.definition.supportsStreaming || false) === forStream;\r\n                        });\r\n                        if (!methodsOrStreamsToRemove || methodsOrStreamsToRemove.length === 0) {\r\n                            return [2, Promise.reject(\"No \" + (forStream ? \"stream\" : \"method\") + \" matches the condition !\")];\r\n                        }\r\n                        return [4, this.removeMethodsOrStreams(methodsOrStreamsToRemove)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.removeMethodsOrStreams = function (methodsToRemove) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4, Promise.all(methodsToRemove.map(function (method) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                switch (_a.label) {\r\n                                    case 0: return [4, this.protocol.server.unregister(method)];\r\n                                    case 1:\r\n                                        _a.sent();\r\n                                        this.serverRepository.remove(method.repoId);\r\n                                        return [2];\r\n                                }\r\n                            });\r\n                        }); }))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Server.prototype.containsProps = function (filter, methodDefinition) {\r\n        var filterProps = Object.keys(filter)\r\n            .filter(function (prop) {\r\n            return typeof filter[prop] !== \"function\"\r\n                && prop !== \"object_types\"\r\n                && prop !== \"display_name\";\r\n        });\r\n        var methodDefProps = Object.keys(methodDefinition);\r\n        var uniqProps = Array.from(new Set(filterProps.concat(methodDefProps)));\r\n        return uniqProps.reduce(function (isMatch, prop) {\r\n            var filterValue = filter[prop];\r\n            var methodDefValue = methodDefinition[prop];\r\n            if (prop === \"supportsStreaming\") {\r\n                methodDefValue = methodDefValue || false;\r\n                filterValue = filterValue || false;\r\n            }\r\n            if (prop === \"objectTypes\" && filterValue !== undefined && methodDefValue !== undefined) {\r\n                if (filterValue.length !== methodDefValue.length) {\r\n                    isMatch = false;\r\n                }\r\n                else {\r\n                    var firstObjType = filterValue.sort();\r\n                    var secondObjTypes_1 = methodDefValue.sort();\r\n                    var hasADifference = firstObjType.some(function (objType, index) { return objType !== secondObjTypes_1[index]; });\r\n                    if (hasADifference) {\r\n                        isMatch = false;\r\n                    }\r\n                }\r\n            }\r\n            else if (filterValue !== methodDefValue) {\r\n                isMatch = false;\r\n            }\r\n            return isMatch;\r\n        }, true);\r\n    };\r\n    Server.prototype.onMethodInvoked = function (methodToExecute, invocationId, invocationArgs) {\r\n        var _this = this;\r\n        if (!methodToExecute) {\r\n            return;\r\n        }\r\n        methodToExecute.theFunction(invocationArgs, function (err, result) {\r\n            if (err) {\r\n                if (typeof err.message === \"string\") {\r\n                    err = err.message;\r\n                }\r\n                else if (typeof err !== \"string\") {\r\n                    try {\r\n                        err = JSON.stringify(err);\r\n                    }\r\n                    catch (unStrException) {\r\n                        err = \"un-stringifyable error in onMethodInvoked ! Top level prop names: \" + Object.keys(err);\r\n                    }\r\n                }\r\n            }\r\n            if (!result || typeof result !== \"object\" || result.constructor === Array) {\r\n                result = { _result: result };\r\n            }\r\n            _this.protocol.server.methodInvocationResult(methodToExecute, invocationId, err, result);\r\n        });\r\n    };\r\n    return Server;\r\n}());\r\nexports.default = Server;\r\n//# sourceMappingURL=server.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/server/server.js\n// module id = 49\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar subscription_1 = require(\"./subscription\");\r\nvar branch_1 = require(\"./branch\");\r\nvar ServerStream = (function () {\r\n    function ServerStream(protocol, repoMethod, server) {\r\n        this.protocol = protocol;\r\n        this.repoMethod = repoMethod;\r\n        this.server = server;\r\n        this.def = repoMethod.definition;\r\n    }\r\n    Object.defineProperty(ServerStream.prototype, \"name\", {\r\n        get: function () { return this.def.name; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.branches = function (key) {\r\n        var _this = this;\r\n        var bList = this.protocol.server.getBranchList(this.repoMethod);\r\n        if (key) {\r\n            if (bList.indexOf(key) > -1) {\r\n                return new branch_1.default(key, this.protocol, this.repoMethod);\r\n            }\r\n            return undefined;\r\n        }\r\n        else {\r\n            return bList.map(function (branchKey) {\r\n                return new branch_1.default(branchKey, _this.protocol, _this.repoMethod);\r\n            });\r\n        }\r\n    };\r\n    ServerStream.prototype.subscriptions = function () {\r\n        var _this = this;\r\n        var subList = this.protocol.server.getSubscriptionList(this.repoMethod);\r\n        return subList.map(function (sub) {\r\n            return new subscription_1.default(_this.protocol, _this.repoMethod, sub);\r\n        });\r\n    };\r\n    Object.defineProperty(ServerStream.prototype, \"definition\", {\r\n        get: function () {\r\n            var def2 = this.def;\r\n            return {\r\n                accepts: def2.accepts,\r\n                description: def2.description,\r\n                displayName: def2.displayName,\r\n                name: def2.name,\r\n                objectTypes: def2.objectTypes,\r\n                returns: def2.returns,\r\n                supportsStreaming: def2.supportsStreaming,\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ServerStream.prototype.close = function () {\r\n        this.protocol.server.closeAllSubscriptions(this.repoMethod);\r\n        this.server.unregister(this.repoMethod.definition, true);\r\n    };\r\n    ServerStream.prototype.push = function (data, branches) {\r\n        if (typeof branches !== \"string\" && !Array.isArray(branches) && branches !== undefined) {\r\n            throw new Error(\"invalid branches should be string or string array\");\r\n        }\r\n        if (typeof data !== \"object\") {\r\n            throw new Error(\"Invalid arguments. Data must be an object.\");\r\n        }\r\n        this.protocol.server.pushData(this.repoMethod, data, branches);\r\n    };\r\n    return ServerStream;\r\n}());\r\nexports.default = ServerStream;\r\n//# sourceMappingURL=stream.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/server/stream.js\n// module id = 50\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar subscription_1 = require(\"./subscription\");\r\nvar request_1 = require(\"./request\");\r\nvar ServerStreaming = (function () {\r\n    function ServerStreaming(protocol, server) {\r\n        var _this = this;\r\n        this.protocol = protocol;\r\n        this.server = server;\r\n        protocol.server.onSubRequest(function (rc, rm) { return _this.handleSubRequest(rc, rm); });\r\n        protocol.server.onSubAdded(function (sub, rm) { return _this.handleSubAdded(sub, rm); });\r\n        protocol.server.onSubRemoved(function (sub, rm) { return _this.handleSubRemoved(sub, rm); });\r\n    }\r\n    ServerStreaming.prototype.handleSubRequest = function (requestContext, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRequestHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var request = new request_1.default(this.protocol, repoMethod, requestContext);\r\n        repoMethod.streamCallbacks.subscriptionRequestHandler(request);\r\n    };\r\n    ServerStreaming.prototype.handleSubAdded = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionAddedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new subscription_1.default(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionAddedHandler(sub);\r\n    };\r\n    ServerStreaming.prototype.handleSubRemoved = function (subscription, repoMethod) {\r\n        if (!(repoMethod &&\r\n            repoMethod.streamCallbacks &&\r\n            typeof repoMethod.streamCallbacks.subscriptionRemovedHandler === \"function\")) {\r\n            return;\r\n        }\r\n        var sub = new subscription_1.default(this.protocol, repoMethod, subscription);\r\n        repoMethod.streamCallbacks.subscriptionRemovedHandler(sub);\r\n    };\r\n    return ServerStreaming;\r\n}());\r\nexports.default = ServerStreaming;\r\n//# sourceMappingURL=streaming.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/agm/server/streaming.js\n// module id = 51\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar protocol_1 = require(\"./protocol\");\r\nvar successMessages = ['subscribed', 'success'];\r\nexports.default = (function (configuration) {\r\n    var connection = configuration.connection, logger = configuration.logger;\r\n    var session = connection.domain('bus', logger, successMessages);\r\n    return new Promise(function (resolve, reject) {\r\n        session.join()\r\n            .then(function () {\r\n            var protocol = protocol_1.default(connection, logger, session);\r\n            resolve(protocol);\r\n        })\r\n            .catch(reject);\r\n    });\r\n});\r\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/bus/main.js\n// module id = 52\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar utils_1 = require(\"./utils\");\r\n;\r\nvar Protocol = (function () {\r\n    function Protocol(connection, logger, session) {\r\n        var _this = this;\r\n        this.publish = function (topic, data, options) {\r\n            var _a = options || {}, _b = _a.routingKey, routingKey = _b === void 0 ? undefined : _b, _c = _a.target, target = _c === void 0 ? undefined : _c;\r\n            var args = utils_1.removeEmptyValues({\r\n                type: 'publish',\r\n                topic: topic,\r\n                data: data,\r\n                peer_id: _this.peerId,\r\n                routing_key: routingKey,\r\n                target_identity: target\r\n            });\r\n            _this.session.send(args);\r\n        };\r\n        this.subscribe = function (topic, callback, options) {\r\n            return new Promise(function (resolve, reject) {\r\n                var _a = options || {}, _b = _a.routingKey, routingKey = _b === void 0 ? undefined : _b, _c = _a.target, target = _c === void 0 ? undefined : _c;\r\n                var args = utils_1.removeEmptyValues({\r\n                    type: 'subscribe',\r\n                    topic: topic,\r\n                    peer_id: _this.peerId,\r\n                    routing_key: routingKey,\r\n                    source: target\r\n                });\r\n                _this.session.send(args)\r\n                    .then(function (response) {\r\n                    var subscription_id = response.subscription_id;\r\n                    _this.subscriptions.push({ subscription_id: subscription_id, topic: topic, callback: callback, source: target });\r\n                    resolve({\r\n                        unsubscribe: function () {\r\n                            _this.session.send({ type: 'unsubscribe', subscription_id: subscription_id, peer_id: _this.peerId });\r\n                            _this.subscriptions = _this.subscriptions.filter(function (s) { return s.subscription_id !== subscription_id; });\r\n                            return Promise.resolve();\r\n                        }\r\n                    });\r\n                })\r\n                    .catch(function (error) { return reject(error); });\r\n            });\r\n        };\r\n        this.watchOnEvent = function () {\r\n            _this.session.on('event', function (args) {\r\n                var data = args.data, subscription_id = args.subscription_id;\r\n                var source = args['publisher-identity'];\r\n                var subscription = _this.subscriptions.find(function (s) { return s.subscription_id === subscription_id; });\r\n                if (subscription) {\r\n                    if (!subscription.source) {\r\n                        subscription.callback(data, subscription.topic, source);\r\n                    }\r\n                    else {\r\n                        if (utils_1.keysMatch(subscription.source, source)) {\r\n                            subscription.callback(data, subscription.topic, source);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        this.connection = connection;\r\n        this.logger = logger;\r\n        this.session = session;\r\n        this.peerId = connection.peerId;\r\n        this.subscriptions = [];\r\n    }\r\n    return Protocol;\r\n}());\r\nfunction default_1(connection, logger, session) {\r\n    var protocol = new Protocol(connection, logger, session);\r\n    protocol.watchOnEvent();\r\n    return protocol;\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=protocol.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/bus/protocol.js\n// module id = 53\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction removeEmptyValues(obj) {\r\n    var cleaned = {};\r\n    Object.keys(obj).forEach(function (key) {\r\n        if (obj[key] !== undefined && obj[key] !== null) {\r\n            cleaned[key] = obj[key];\r\n        }\r\n    });\r\n    return cleaned;\r\n}\r\nexports.removeEmptyValues = removeEmptyValues;\r\nfunction keysMatch(obj1, obj2) {\r\n    var keysObj1 = Object.keys(obj1);\r\n    var allMatch = true;\r\n    keysObj1.forEach(function (key) {\r\n        if (obj1[key] !== obj2[key]) {\r\n            allMatch = false;\r\n        }\r\n    });\r\n    return allMatch;\r\n}\r\nexports.keysMatch = keysMatch;\r\n//# sourceMappingURL=utils.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/bus/utils.js\n// module id = 54\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar shortid_1 = require(\"shortid\");\r\nvar utils_1 = require(\"./utils\");\r\nvar contextMessageReplaySpec_1 = require(\"./contexts/contextMessageReplaySpec\");\r\nvar pjson = require(\"../package.json\");\r\nfunction default_1(configuration, ext, hc, glue42gd, gdVersion) {\r\n    if (typeof window !== \"undefined\") {\r\n        global = global || window;\r\n    }\r\n    global = global || {};\r\n    var uid = shortid_1.generate();\r\n    var masterConfig = global.GLUE_CONFIG || {};\r\n    var dynamicDefaults = global.GLUE_DEFAULT_CONFIG || {};\r\n    var hardDefaults = getHardDefaults();\r\n    var metricsIdentity = {\r\n        system: getConfigProp(\"metrics\", \"system\"),\r\n        service: getConfigProp(\"metrics\", \"service\"),\r\n        instance: getConfigProp(\"metrics\", \"instance\")\r\n    };\r\n    function getMetrics() {\r\n        return ifNotFalse(getConfigProp(\"metrics\"), {\r\n            identity: metricsIdentity\r\n        });\r\n    }\r\n    function getGateway() {\r\n        var force = getConfigProp(\"gateway\", \"force\");\r\n        var gw = hc === undefined || force;\r\n        if (gw) {\r\n            var gwConfig = getConfigProp(\"gateway\");\r\n            var protocolVersion = getConfigProp(\"gateway\", \"protocolVersion\");\r\n            var reconnectInterval = getConfigProp(\"gateway\", \"reconnectInterval\");\r\n            var reconnectAttempts = getConfigProp(\"gateway\", \"reconnectAttempts\");\r\n            var ws = gwConfig.ws;\r\n            var http = gwConfig.http;\r\n            var inproc = gwConfig.inproc;\r\n            if (!ws && !http && !inproc) {\r\n                if (utils_1.default.isNode() || (\"WebSocket\" in window && window.WebSocket.CLOSING === 2)) {\r\n                    ws = getConfigProp(\"gateway\", \"ws\");\r\n                }\r\n                else {\r\n                    http = getConfigProp(\"gateway\", \"http\");\r\n                }\r\n            }\r\n            var windowId = void 0;\r\n            var pid = void 0;\r\n            if (hc) {\r\n                windowId = hc.windowId;\r\n            }\r\n            else if (typeof glue42gd !== \"undefined\") {\r\n                windowId = glue42gd.windowId;\r\n                pid = glue42gd.pid;\r\n            }\r\n            else if (utils_1.default.isNode()) {\r\n                pid = process.pid;\r\n            }\r\n            var replaySpecs = getConfigProp(\"gateway\", \"replaySpecs\") || [];\r\n            replaySpecs.push(contextMessageReplaySpec_1.ContextMessageReplaySpec);\r\n            return {\r\n                identity: {\r\n                    application: getApplication(),\r\n                    windowId: windowId,\r\n                    process: pid,\r\n                },\r\n                reconnectInterval: reconnectInterval,\r\n                ws: ws,\r\n                http: http,\r\n                gw: inproc,\r\n                protocolVersion: protocolVersion,\r\n                reconnectAttempts: reconnectAttempts,\r\n                force: true,\r\n                replaySpecs: replaySpecs,\r\n                gdVersion: gdVersion,\r\n            };\r\n        }\r\n        return { gdVersion: gdVersion };\r\n    }\r\n    function getLogger() {\r\n        return getConfigProp(\"logger\");\r\n    }\r\n    function getAgm() {\r\n        return ifNotFalse(configuration.agm, {\r\n            instance: {\r\n                application: getApplication()\r\n            }\r\n        });\r\n    }\r\n    function getContexts(connectionConfig) {\r\n        if (connectionConfig.protocolVersion < 3) {\r\n            return false;\r\n        }\r\n        var contextConfig = getConfigProp(\"contexts\");\r\n        if (typeof contextConfig === \"boolean\" && !contextConfig) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function getChannels(contextsEnabled) {\r\n        if (!contextsEnabled) {\r\n            return false;\r\n        }\r\n        var channelsConfig = getConfigProp(\"channels\");\r\n        if (typeof channelsConfig === \"boolean\" && !channelsConfig) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function getBus(connectionConfig) {\r\n        var contextConfig = getConfigProp(\"bus\");\r\n        if (typeof contextConfig === \"boolean\" && contextConfig) {\r\n            if (connectionConfig.protocolVersion && connectionConfig.protocolVersion < 3) {\r\n                return false;\r\n            }\r\n            if (gdVersion === 2) {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function getApplication() {\r\n        return getConfigProp(\"application\");\r\n    }\r\n    function getAuth() {\r\n        return getConfigProp(\"auth\");\r\n    }\r\n    function getHardDefaults() {\r\n        function getMetricsDefaults() {\r\n            var documentTitle = typeof document !== \"undefined\" ? document.title : \"unknown\";\r\n            documentTitle = documentTitle || \"none\";\r\n            if (typeof hc === \"undefined\") {\r\n                return {\r\n                    system: \"Connect.Browser\",\r\n                    service: configuration.application || documentTitle,\r\n                    instance: \"~\" + uid\r\n                };\r\n            }\r\n            if (typeof hc.metricsFacade.getIdentity !== \"undefined\") {\r\n                var identity = hc.metricsFacade.getIdentity();\r\n                return {\r\n                    system: identity.system,\r\n                    service: identity.service,\r\n                    instance: identity.instance\r\n                };\r\n            }\r\n            return {\r\n                system: \"HtmlContainer.\" + hc.containerName,\r\n                service: \"JS.\" + hc.browserWindowName,\r\n                instance: \"~\" + hc.machineName\r\n            };\r\n        }\r\n        function getGatewayDefaults() {\r\n            var defaultProtocol = 3;\r\n            var gatewayURL = \"localhost:8385\";\r\n            var defaultWs = \"ws://\" + gatewayURL;\r\n            var defaultHttp = \"http://\" + gatewayURL;\r\n            if (glue42gd) {\r\n                defaultProtocol = 3;\r\n                defaultWs = glue42gd.gwURL;\r\n            }\r\n            return {\r\n                ws: defaultWs,\r\n                http: defaultHttp,\r\n                protocolVersion: defaultProtocol,\r\n                reconnectInterval: 1000\r\n            };\r\n        }\r\n        function getDefaultApplicationName() {\r\n            if (hc) {\r\n                return hc.containerName + \".\" + hc.browserWindowName;\r\n            }\r\n            if (glue42gd) {\r\n                return glue42gd.appName;\r\n            }\r\n            if (typeof window !== \"undefined\" && typeof document !== \"undefined\") {\r\n                return (window.agm_application || document.title) + uid;\r\n            }\r\n            else {\r\n                return \"NodeJS\" + uid;\r\n            }\r\n        }\r\n        function getDefaultLogger() {\r\n            return {\r\n                publish: \"off\",\r\n                console: \"info\",\r\n                metrics: \"off\",\r\n            };\r\n        }\r\n        return {\r\n            application: getDefaultApplicationName(),\r\n            metrics: getMetricsDefaults(),\r\n            agm: {},\r\n            gateway: getGatewayDefaults(),\r\n            logger: getDefaultLogger(),\r\n            bus: false\r\n        };\r\n    }\r\n    function getConfigProp(prop1, prop2) {\r\n        var masterConfigProp1 = masterConfig[prop1];\r\n        var userProp1 = configuration[prop1];\r\n        var dynamicDefaultsProp1 = dynamicDefaults[prop1];\r\n        var hardDefaultsProp1 = hardDefaults[prop1];\r\n        if (prop2) {\r\n            if (masterConfigProp1 && masterConfigProp1[prop2] !== undefined) {\r\n                return masterConfigProp1[prop2];\r\n            }\r\n            if (userProp1 && userProp1[prop2] !== undefined) {\r\n                return userProp1[prop2];\r\n            }\r\n            if (dynamicDefaultsProp1 && dynamicDefaultsProp1[prop2] !== undefined) {\r\n                return dynamicDefaultsProp1[prop2];\r\n            }\r\n            if (hardDefaultsProp1 && hardDefaultsProp1[prop2] !== undefined) {\r\n                return hardDefaultsProp1[prop2];\r\n            }\r\n        }\r\n        else {\r\n            if (masterConfigProp1 !== undefined) {\r\n                return masterConfigProp1;\r\n            }\r\n            if (userProp1 !== undefined) {\r\n                return userProp1;\r\n            }\r\n            if (dynamicDefaultsProp1 !== undefined) {\r\n                return dynamicDefaultsProp1;\r\n            }\r\n            if (hardDefaultsProp1 !== undefined) {\r\n                return hardDefaultsProp1;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    function ifNotFalse(what, then) {\r\n        if (typeof what === \"boolean\" && !what) {\r\n            return undefined;\r\n        }\r\n        else {\r\n            return then;\r\n        }\r\n    }\r\n    var connection = getGateway();\r\n    var contexts = getContexts(connection);\r\n    var channels = getChannels(contexts);\r\n    var bus = getBus(connection);\r\n    return {\r\n        bus: bus,\r\n        identity: metricsIdentity,\r\n        application: getApplication(),\r\n        auth: getAuth(),\r\n        logger: getLogger(),\r\n        connection: connection,\r\n        metrics: getMetrics(),\r\n        agm: getAgm(),\r\n        contexts: contexts,\r\n        channels: channels,\r\n        version: ext.version || pjson.version,\r\n        libs: ext.libs\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=config.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/config.js\n// module id = 55\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = require(\"./connection\");\r\nvar messageReplayer_1 = require(\"./messageReplayer\");\r\nvar GW3ConnectionImpl = (function (_super) {\r\n    __extends(GW3ConnectionImpl, _super);\r\n    function GW3ConnectionImpl(settings) {\r\n        var _this = _super.call(this, settings) || this;\r\n        if (settings.replaySpecs &&\r\n            settings.replaySpecs.length) {\r\n            _this.replayer = new messageReplayer_1.MessageReplayerImpl(settings.replaySpecs);\r\n        }\r\n        return _this;\r\n    }\r\n    GW3ConnectionImpl.prototype.init = function (transport, protocol) {\r\n        _super.prototype.init.call(this, transport, protocol);\r\n        if (this.replayer) {\r\n            this.replayer.init(this);\r\n        }\r\n        this.gw3Protocol = protocol;\r\n    };\r\n    GW3ConnectionImpl.prototype.toAPI = function () {\r\n        var that = this;\r\n        var superAPI = _super.prototype.toAPI.call(this);\r\n        return {\r\n            domain: that.domain.bind(that),\r\n            get peerId() { return that.peerId; },\r\n            get token() { return that.token; },\r\n            get info() { return that.info; },\r\n            get resolvedIdentity() { return that.resolvedIdentity; },\r\n            get availableDomains() { return that.availableDomains; },\r\n            get gatewayToken() { return that.gatewayToken; },\r\n            get replayer() { return that.replayer; },\r\n            on: superAPI.on,\r\n            send: superAPI.send,\r\n            off: superAPI.off,\r\n            login: superAPI.login,\r\n            logout: superAPI.logout,\r\n            loggedIn: superAPI.loggedIn,\r\n            connected: superAPI.connected,\r\n            disconnected: superAPI.disconnected,\r\n            authToken: that.authToken.bind(that),\r\n            get protocolVersion() { return superAPI.protocolVersion; },\r\n        };\r\n    };\r\n    GW3ConnectionImpl.prototype.domain = function (domain, logger, successMessages, errorMessages) {\r\n        return this.gw3Protocol.domain(domain, logger, successMessages, errorMessages);\r\n    };\r\n    GW3ConnectionImpl.prototype.authToken = function () {\r\n        return this.gw3Protocol.authToken();\r\n    };\r\n    return GW3ConnectionImpl;\r\n}(connection_1.default));\r\nexports.default = GW3ConnectionImpl;\r\n//# sourceMappingURL=gw3Connection.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/gw3Connection.js\n// module id = 56\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar connection_1 = require(\"./connection\");\r\nvar gw3_1 = require(\"./protocols/gw3\");\r\nvar hc_1 = require(\"./protocols/hc\");\r\nvar ws_1 = require(\"./transports/ws\");\r\nvar gw3Connection_1 = require(\"./gw3Connection\");\r\nvar gw1_1 = require(\"./protocols/gw1\");\r\nvar hc_2 = require(\"./transports/hc\");\r\nvar inproc_1 = require(\"./transports/inproc\");\r\nexports.default = (function (settings) {\r\n    settings = settings || {};\r\n    settings.reconnectAttempts = settings.reconnectAttempts || 10;\r\n    settings.reconnectInterval = settings.reconnectInterval || 500;\r\n    var connection = new connection_1.default(settings);\r\n    var logger = settings.logger;\r\n    if (!logger) {\r\n        throw new Error(\"please pass a logger object\");\r\n    }\r\n    var protocol = new hc_1.default();\r\n    var transport = new hc_2.default();\r\n    var outsideHC = settings.gdVersion !== 2 || settings.force;\r\n    if (outsideHC) {\r\n        if (settings.gw && settings.gw.facade && settings.gw.token && settings.protocolVersion === 3) {\r\n            transport = new inproc_1.default(settings.gw.token, settings.gw.facade, logger.subLogger(\"inproc\"));\r\n        }\r\n        else if (settings.ws !== undefined) {\r\n            transport = new ws_1.default(settings, logger.subLogger(\"ws\"));\r\n        }\r\n        else {\r\n            throw new Error(\"No connection information specified\");\r\n        }\r\n        if (settings.protocolVersion === 3) {\r\n            var gw3Connection = new gw3Connection_1.default(settings);\r\n            var gw3Port = gw3_1.default(gw3Connection, settings, logger.subLogger(\"gw3\"));\r\n            gw3Connection.init(transport, gw3Port);\r\n            return gw3Connection.toAPI();\r\n        }\r\n        else {\r\n            protocol = new gw1_1.default(connection, settings);\r\n        }\r\n    }\r\n    connection.init(transport, protocol);\r\n    return connection.toAPI();\r\n});\r\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/main.js\n// module id = 57\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar MessageReplayerImpl = (function () {\r\n    function MessageReplayerImpl(specs) {\r\n        this.specsNames = [];\r\n        this.messages = {};\r\n        this.subs = {};\r\n        this.subsRefCount = {};\r\n        this.specs = {};\r\n        for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\r\n            var spec = specs_1[_i];\r\n            this.specs[spec.name] = spec;\r\n            this.specsNames.push(spec.name);\r\n        }\r\n    }\r\n    MessageReplayerImpl.prototype.init = function (connection) {\r\n        var _this = this;\r\n        this.connection = connection;\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var _loop_1 = function (type) {\r\n                var refCount = this_1.subsRefCount[type];\r\n                if (!refCount) {\r\n                    refCount = 0;\r\n                }\r\n                refCount += 1;\r\n                this_1.subsRefCount[type] = refCount;\r\n                if (refCount > 1) {\r\n                    return \"continue\";\r\n                }\r\n                var sub = connection.on(\"glue-core\", type, function (msg) { return _this.processMessage(type, msg); });\r\n                this_1.subs[type] = sub;\r\n            };\r\n            var this_1 = this;\r\n            for (var _b = 0, _c = this.specs[name_1].types; _b < _c.length; _b++) {\r\n                var type = _c[_b];\r\n                _loop_1(type);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.processMessage = function (type, msg) {\r\n        if (this.isDone || !msg) {\r\n            return;\r\n        }\r\n        for (var _i = 0, _a = this.specsNames; _i < _a.length; _i++) {\r\n            var name_2 = _a[_i];\r\n            if (this.specs[name_2].types.indexOf(type) !== -1) {\r\n                var messages = this.messages[name_2] || [];\r\n                this.messages[name_2] = messages;\r\n                messages.push(msg);\r\n            }\r\n        }\r\n    };\r\n    MessageReplayerImpl.prototype.drain = function (name, callback) {\r\n        if (callback) {\r\n            (this.messages[name] || []).forEach(callback);\r\n        }\r\n        delete this.messages[name];\r\n        for (var _i = 0, _a = this.specs[name].types; _i < _a.length; _i++) {\r\n            var type = _a[_i];\r\n            this.subsRefCount[type] -= 1;\r\n            if (this.subsRefCount[type] <= 0) {\r\n                this.connection.off(this.subs[type]);\r\n                delete this.subs[type];\r\n                delete this.subsRefCount[type];\r\n            }\r\n        }\r\n        delete this.specs[name];\r\n        if (!this.specs.length) {\r\n            this.isDone = true;\r\n        }\r\n    };\r\n    return MessageReplayerImpl;\r\n}());\r\nexports.MessageReplayerImpl = MessageReplayerImpl;\r\n//# sourceMappingURL=messageReplayer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/messageReplayer.js\n// module id = 58\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GW1Protocol = (function () {\r\n    function GW1Protocol(connection, settings) {\r\n        this._connection = connection;\r\n        this._settings = settings;\r\n    }\r\n    GW1Protocol.prototype.processStringMessage = function (message) {\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj.message,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    GW1Protocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify({\r\n            type: type,\r\n            message: message,\r\n            id: id,\r\n        });\r\n    };\r\n    GW1Protocol.prototype.login = function (message) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var sendOptions = {\r\n                retryInterval: _this._settings.reconnectInterval,\r\n                maxRetries: _this._settings.reconnectAttempts\r\n            };\r\n            _this._connection.send(\"hello\", \"hello\", {}, null, sendOptions)\r\n                .then(function () { return resolve({ application: undefined }); })\r\n                .catch(reject);\r\n        });\r\n    };\r\n    GW1Protocol.prototype.logout = function () {\r\n    };\r\n    GW1Protocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n        return function () {\r\n        };\r\n    };\r\n    GW1Protocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    GW1Protocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return GW1Protocol;\r\n}());\r\nexports.default = GW1Protocol;\r\n//# sourceMappingURL=gw1.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/protocols/gw1.js\n// module id = 59\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3Domain_1 = require(\"./gw3Domain\");\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nfunction default_1(connection, settings, logger) {\r\n    var datePrefix = \"#T42_DATE#\";\r\n    var datePrefixLen = datePrefix.length;\r\n    var dateMinLen = datePrefixLen + 1;\r\n    var datePrefixFirstChar = datePrefix[0];\r\n    var registry = callback_registry_1.default();\r\n    var globalDomain;\r\n    var isLoggedIn = false;\r\n    var shouldTryLogin = true;\r\n    var initialLogin = true;\r\n    var initialLoginAttempts = 3;\r\n    var initialLoginAttemptsInterval = 500;\r\n    var pingTimer;\r\n    var sessions = [];\r\n    var loginConfig;\r\n    connection.disconnected(handleDisconnected.bind(this));\r\n    ping();\r\n    function processStringMessage(message) {\r\n        var msg = JSON.parse(message, function (key, value) {\r\n            if (typeof value !== \"string\") {\r\n                return value;\r\n            }\r\n            if (value.length < dateMinLen) {\r\n                return value;\r\n            }\r\n            if (value[0] !== datePrefixFirstChar) {\r\n                return value;\r\n            }\r\n            if (value.substring(0, datePrefixLen) !== datePrefix) {\r\n                return value;\r\n            }\r\n            try {\r\n                var milliseconds = parseInt(value.substring(datePrefixLen, value.length), 10);\r\n                if (isNaN(milliseconds)) {\r\n                    return value;\r\n                }\r\n                return new Date(milliseconds);\r\n            }\r\n            catch (ex) {\r\n                return value;\r\n            }\r\n        });\r\n        return {\r\n            msg: msg,\r\n            msgType: msg.type,\r\n        };\r\n    }\r\n    function createStringMessage(product, type, message, id) {\r\n        var oldToJson = Date.prototype.toJSON;\r\n        try {\r\n            Date.prototype.toJSON = function () {\r\n                return datePrefix + this.getTime();\r\n            };\r\n            var result = JSON.stringify(message);\r\n            return result;\r\n        }\r\n        finally {\r\n            Date.prototype.toJSON = oldToJson;\r\n        }\r\n    }\r\n    function processObjectMessage(message) {\r\n        if (!message.type) {\r\n            throw new Error(\"Object should have type property\");\r\n        }\r\n        return {\r\n            msg: message,\r\n            msgType: message.type,\r\n        };\r\n    }\r\n    function createObjectMessage(product, type, message, id) {\r\n        return message;\r\n    }\r\n    function login(config) {\r\n        logger.debug(\"logging in...\");\r\n        loginConfig = config;\r\n        if (!loginConfig) {\r\n            loginConfig = { username: \"\", password: \"\" };\r\n        }\r\n        shouldTryLogin = true;\r\n        return new Promise(function (resolve, reject) {\r\n            var authentication = {};\r\n            connection.gatewayToken = config.gatewayToken;\r\n            if (connection.gatewayToken) {\r\n                authentication.method = \"gateway-token\";\r\n                authentication.token = connection.gatewayToken;\r\n            }\r\n            else if (config.token) {\r\n                authentication.method = \"access-token\";\r\n                authentication.token = config.token;\r\n            }\r\n            else if (config.username) {\r\n                authentication.method = \"secret\";\r\n                authentication.login = config.username;\r\n                authentication.secret = config.password;\r\n            }\r\n            else {\r\n                throw new Error(\"invalid auth message\" + JSON.stringify(config));\r\n            }\r\n            var helloMsg = {\r\n                type: \"hello\",\r\n                identity: settings.identity,\r\n                authentication: authentication,\r\n            };\r\n            globalDomain = gw3Domain_1.default(\"global\", connection, logger, [\r\n                \"welcome\",\r\n                \"token\"\r\n            ]);\r\n            var sendOptions = { skipPeerId: true };\r\n            if (initialLogin) {\r\n                sendOptions.retryInterval = settings.reconnectInterval;\r\n                sendOptions.maxRetries = settings.reconnectAttempts;\r\n            }\r\n            globalDomain.send(helloMsg, undefined, sendOptions)\r\n                .then(function (msg) {\r\n                initialLogin = false;\r\n                logger.debug(\"login successful with PeerId \" + msg.peer_id);\r\n                connection.peerId = msg.peer_id;\r\n                connection.resolvedIdentity = msg.resolved_identity;\r\n                connection.availableDomains = msg.available_domains;\r\n                if (msg.options) {\r\n                    connection.token = msg.options.access_token;\r\n                    connection.info = msg.options.info;\r\n                }\r\n                setLoggedIn(true);\r\n                resolve(msg.resolved_identity);\r\n            })\r\n                .catch(function (err) {\r\n                logger.error(\"error sending hello message - \" + err);\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function logout() {\r\n        logger.debug(\"logging out...\");\r\n        shouldTryLogin = false;\r\n        if (pingTimer) {\r\n            clearTimeout(pingTimer);\r\n        }\r\n        sessions.forEach(function (session) {\r\n            session.leave();\r\n        });\r\n    }\r\n    function loggedIn(callback) {\r\n        if (isLoggedIn) {\r\n            callback();\r\n        }\r\n        return registry.add(\"onLoggedIn\", callback);\r\n    }\r\n    function domain(domainName, domainLogger, successMessages, errorMessages) {\r\n        var session = sessions.filter(function (s) { return s.domain === domainName; })[0];\r\n        if (!session) {\r\n            session = gw3Domain_1.default(domainName, connection, domainLogger, successMessages, errorMessages);\r\n            sessions.push(session);\r\n        }\r\n        return session;\r\n    }\r\n    function handleDisconnected() {\r\n        setLoggedIn(false);\r\n        var tryToLogin = shouldTryLogin;\r\n        if (tryToLogin && initialLogin) {\r\n            if (initialLoginAttempts <= 0) {\r\n                return;\r\n            }\r\n            initialLoginAttempts--;\r\n        }\r\n        logger.debug(\"disconnected - will try new login?\" + shouldTryLogin);\r\n        if (shouldTryLogin) {\r\n            connection.login(loginConfig)\r\n                .catch(function () {\r\n                setTimeout(handleDisconnected, 1000);\r\n            });\r\n        }\r\n    }\r\n    function setLoggedIn(value) {\r\n        isLoggedIn = value;\r\n        if (isLoggedIn) {\r\n            registry.execute(\"onLoggedIn\");\r\n        }\r\n    }\r\n    function ping() {\r\n        if (!shouldTryLogin) {\r\n            return;\r\n        }\r\n        if (isLoggedIn) {\r\n            connection.send(\"\", \"\", { type: \"ping\" });\r\n        }\r\n        pingTimer = setTimeout(ping, 30 * 1000);\r\n    }\r\n    function authToken() {\r\n        var createTokenReq = {\r\n            type: \"create-token\"\r\n        };\r\n        return globalDomain.send(createTokenReq)\r\n            .then(function (res) {\r\n            return res.token;\r\n        });\r\n    }\r\n    return {\r\n        processStringMessage: processStringMessage,\r\n        createStringMessage: createStringMessage,\r\n        createObjectMessage: createObjectMessage,\r\n        processObjectMessage: processObjectMessage,\r\n        login: login,\r\n        logout: logout,\r\n        loggedIn: loggedIn,\r\n        domain: domain,\r\n        authToken: authToken,\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/protocols/gw3.js\n// module id = 60\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callbackRegistry = require(\"callback-registry\");\r\nvar shortid_1 = require(\"shortid\");\r\nfunction default_1(domain, connection, logger, successMessages, errorMessages) {\r\n    if (domain == null) {\r\n        domain = \"global\";\r\n    }\r\n    var isJoined = false;\r\n    var tryReconnecting = false;\r\n    var _latestOptions;\r\n    var _connectionOn = false;\r\n    var callbacks = callbackRegistry();\r\n    connection.disconnected(handleConnectionDisconnected);\r\n    connection.loggedIn(handleConnectionLoggedIn);\r\n    connection.on(domain, \"success\", function (msg) { return handleSuccessMessage(msg); });\r\n    connection.on(domain, \"error\", function (msg) { return handleErrorMessage(msg); });\r\n    connection.on(domain, \"result\", function (msg) { return handleSuccessMessage(msg); });\r\n    if (successMessages) {\r\n        successMessages.forEach(function (sm) {\r\n            connection.on(domain, sm, function (msg) { return handleSuccessMessage(msg); });\r\n        });\r\n    }\r\n    if (errorMessages) {\r\n        errorMessages.forEach(function (sm) {\r\n            connection.on(domain, sm, function (msg) { return handleErrorMessage(msg); });\r\n        });\r\n    }\r\n    var requestsMap = {};\r\n    function join(options) {\r\n        _latestOptions = options;\r\n        return new Promise(function (resolve, reject) {\r\n            if (isJoined) {\r\n                resolve();\r\n                return;\r\n            }\r\n            var joinPromise;\r\n            if (domain === \"global\") {\r\n                joinPromise = _connectionOn ? Promise.resolve({}) : Promise.reject(\"not connected to gateway\");\r\n            }\r\n            else {\r\n                logger.debug(\"joining \" + domain);\r\n                var joinMsg = {\r\n                    type: \"join\",\r\n                    destination: domain,\r\n                    domain: \"global\",\r\n                    options: options,\r\n                };\r\n                joinPromise = send(joinMsg);\r\n            }\r\n            joinPromise\r\n                .then(function () {\r\n                handleJoined();\r\n                resolve();\r\n            })\r\n                .catch(function (err) {\r\n                logger.debug(\"error joining \" + domain + \" domain: \" + JSON.stringify(err));\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n    function leave() {\r\n        if (domain === \"global\") {\r\n            return;\r\n        }\r\n        logger.debug(\"stopping session \" + domain + \"...\");\r\n        var leaveMsg = {\r\n            type: \"leave\",\r\n            destination: domain,\r\n            domain: \"global\",\r\n        };\r\n        send(leaveMsg).then(function () {\r\n            isJoined = false;\r\n            callbacks.execute(\"onLeft\");\r\n        });\r\n    }\r\n    function handleJoined() {\r\n        logger.debug(\"did join \" + domain);\r\n        isJoined = true;\r\n        var wasReconnect = tryReconnecting;\r\n        tryReconnecting = false;\r\n        callbacks.execute(\"onJoined\", wasReconnect);\r\n    }\r\n    function handleConnectionDisconnected() {\r\n        _connectionOn = false;\r\n        logger.warn(\"connection is down\");\r\n        isJoined = false;\r\n        tryReconnecting = true;\r\n        callbacks.execute(\"onLeft\", { disconnected: true });\r\n    }\r\n    function handleConnectionLoggedIn() {\r\n        _connectionOn = true;\r\n        if (tryReconnecting) {\r\n            logger.info(\"connection is now up - trying to reconnect...\");\r\n            join(_latestOptions);\r\n        }\r\n    }\r\n    function onJoined(callback) {\r\n        if (isJoined) {\r\n            callback(false);\r\n        }\r\n        return callbacks.add(\"onJoined\", callback);\r\n    }\r\n    function onLeft(callback) {\r\n        if (!isJoined) {\r\n            callback();\r\n        }\r\n        return callbacks.add(\"onLeft\", callback);\r\n    }\r\n    function handleErrorMessage(msg) {\r\n        if (domain !== msg.domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.error(msg);\r\n    }\r\n    function handleSuccessMessage(msg) {\r\n        if (msg.domain !== domain) {\r\n            return;\r\n        }\r\n        var requestId = msg.request_id;\r\n        var entry = requestsMap[requestId];\r\n        if (!entry) {\r\n            return;\r\n        }\r\n        entry.success(msg);\r\n    }\r\n    function getNextRequestId() {\r\n        return shortid_1.generate();\r\n    }\r\n    function send(msg, tag, options) {\r\n        options = options || {};\r\n        msg.request_id = msg.request_id || getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        if (!options.skipPeerId) {\r\n            msg.peer_id = connection.peerId;\r\n        }\r\n        var requestId = msg.request_id;\r\n        return new Promise(function (resolve, reject) {\r\n            requestsMap[requestId] = {\r\n                success: function (successMsg) {\r\n                    delete requestsMap[requestId];\r\n                    successMsg._tag = tag;\r\n                    resolve(successMsg);\r\n                },\r\n                error: function (errorMsg) {\r\n                    logger.warn(\"GW error - \" + JSON.stringify(errorMsg) + \" for request \" + JSON.stringify(msg));\r\n                    delete requestsMap[requestId];\r\n                    errorMsg._tag = tag;\r\n                    reject(errorMsg);\r\n                },\r\n            };\r\n            connection\r\n                .send(domain, domain, msg, undefined, options)\r\n                .catch(function (err) {\r\n                requestsMap[requestId].error({ err: err });\r\n            });\r\n        });\r\n    }\r\n    function sendFireAndForget(msg) {\r\n        msg.request_id = msg.request_id ? msg.request_id : getNextRequestId();\r\n        msg.domain = msg.domain || domain;\r\n        msg.peer_id = connection.peerId;\r\n        connection.send(domain, domain, msg);\r\n    }\r\n    return {\r\n        join: join,\r\n        leave: leave,\r\n        onJoined: onJoined,\r\n        onLeft: onLeft,\r\n        send: send,\r\n        sendFireAndForget: sendFireAndForget,\r\n        on: function (type, callback) {\r\n            connection.on(domain, type, function (msg) {\r\n                if (msg.domain !== domain) {\r\n                    return;\r\n                }\r\n                try {\r\n                    callback(msg);\r\n                }\r\n                catch (e) {\r\n                    logger.error(\"Callback  failed: \" + e + \" \\n msg was: \" + JSON.stringify(msg));\r\n                }\r\n            });\r\n        },\r\n        loggedIn: function (callback) { return connection.loggedIn(callback); },\r\n        connected: function (callback) { return connection.connected(callback); },\r\n        disconnected: function (callback) { return connection.disconnected(callback); },\r\n        get peerId() {\r\n            return connection.peerId;\r\n        },\r\n        get domain() {\r\n            return domain;\r\n        },\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3Domain.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/protocols/gw3Domain.js\n// module id = 61\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HCProtocol = (function () {\r\n    function HCProtocol() {\r\n    }\r\n    HCProtocol.prototype.processStringMessage = function (message) {\r\n        var messageObj = JSON.parse(message);\r\n        return {\r\n            msg: messageObj,\r\n            msgType: messageObj.type,\r\n        };\r\n    };\r\n    HCProtocol.prototype.createStringMessage = function (product, type, message, id) {\r\n        return JSON.stringify(message);\r\n    };\r\n    HCProtocol.prototype.login = function (message) {\r\n        return Promise.resolve({ application: undefined });\r\n    };\r\n    HCProtocol.prototype.logout = function () {\r\n    };\r\n    HCProtocol.prototype.loggedIn = function (callback) {\r\n        callback();\r\n        return function () {\r\n        };\r\n    };\r\n    HCProtocol.prototype.processObjectMessage = function (message) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    HCProtocol.prototype.createObjectMessage = function (product, type, message, id) {\r\n        throw new Error(\"not supported\");\r\n    };\r\n    return HCProtocol;\r\n}());\r\nexports.default = HCProtocol;\r\n//# sourceMappingURL=hc.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/protocols/hc.js\n// module id = 62\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HCTransport = (function () {\r\n    function HCTransport() {\r\n        this.connectionId = Math.floor(1e10 * Math.random()).toString();\r\n    }\r\n    HCTransport.prototype.send = function (message, product, type) {\r\n        if (product === \"metrics\") {\r\n            window.htmlContainer.metricsFacade.send(type, message);\r\n        }\r\n        else if (product === \"log\") {\r\n            window.htmlContainer.loggingFacade.send(type, message);\r\n        }\r\n        return Promise.resolve(undefined);\r\n    };\r\n    HCTransport.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    HCTransport.prototype.onMessage = function (callback) {\r\n    };\r\n    HCTransport.prototype.close = function () {\r\n    };\r\n    HCTransport.prototype.open = function () {\r\n    };\r\n    return HCTransport;\r\n}());\r\nexports.default = HCTransport;\r\n//# sourceMappingURL=hc.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/transports/hc.js\n// module id = 63\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nvar Inproc = (function () {\r\n    function Inproc(token, gw, logger) {\r\n        this.registry = callback_registry_1.default();\r\n        this.gw = gw;\r\n        this.gwToken = token;\r\n        this.logger = logger;\r\n        this.connectToken = this.gw.connect(this.gwToken, this.messageHandler.bind(this));\r\n    }\r\n    Object.defineProperty(Inproc.prototype, \"isObjectBasedTransport\", {\r\n        get: function () {\r\n            return true;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Inproc.prototype.sendObject = function (msg) {\r\n        this.logger.debug(JSON.stringify(msg));\r\n        this.gw.send(this.connectToken, msg);\r\n        return Promise.resolve(undefined);\r\n    };\r\n    Inproc.prototype.send = function (msg, product, type) {\r\n        return Promise.reject(\"not supported\");\r\n    };\r\n    Inproc.prototype.onMessage = function (callback) {\r\n        return this.registry.add(\"onMessage\", callback);\r\n    };\r\n    Inproc.prototype.onConnectedChanged = function (callback) {\r\n        callback(true);\r\n    };\r\n    Inproc.prototype.close = function () {\r\n    };\r\n    Inproc.prototype.open = function () {\r\n    };\r\n    Inproc.prototype.messageHandler = function (msg) {\r\n        if (this.logger.consoleLevel() === \"trace\") {\r\n            this.logger.debug(JSON.stringify(msg));\r\n        }\r\n        this.registry.execute(\"onMessage\", msg);\r\n    };\r\n    return Inproc;\r\n}());\r\nexports.default = Inproc;\r\n//# sourceMappingURL=inproc.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/transports/inproc.js\n// module id = 64\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar callback_registry_1 = require(\"callback-registry\");\r\nvar utils_1 = require(\"../../utils\");\r\nvar WebSocket = utils_1.default.isNode() ? require(\"ws\") : window.WebSocket;\r\nvar WS = (function () {\r\n    function WS(settings, logger) {\r\n        this._running = true;\r\n        this._initied = false;\r\n        this._registry = callback_registry_1.default();\r\n        this._settings = settings;\r\n        this._logger = logger;\r\n    }\r\n    WS.prototype.onMessage = function (callback) {\r\n        return this._registry.add(\"onMessage\", callback);\r\n    };\r\n    WS.prototype.send = function (msg, product, type, options) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) {\r\n            options = options || {};\r\n            _this.waitForSocketConnection(function () {\r\n                try {\r\n                    _this._ws.send(msg);\r\n                    resolve();\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }, reject, options.maxRetries, options.retryInterval);\r\n        });\r\n    };\r\n    WS.prototype.open = function () {\r\n        this._running = true;\r\n    };\r\n    WS.prototype.close = function () {\r\n        this._running = false;\r\n        this._ws.close();\r\n    };\r\n    WS.prototype.onConnectedChanged = function (callback) {\r\n        return this._registry.add(\"onConnectedChanged\", callback);\r\n    };\r\n    WS.prototype.initiateSocket = function () {\r\n        var _this = this;\r\n        this._logger.debug(\"initiating _ws to \" + this._settings.ws + \"...\");\r\n        this._ws = new WebSocket(this._settings.ws);\r\n        this._ws.onerror = function (err) {\r\n            _this.notifyStatusChanged(false, err);\r\n        };\r\n        this._ws.onclose = function () {\r\n            _this._logger.debug(\"_ws closed\");\r\n            _this.notifyStatusChanged(false);\r\n        };\r\n        this._ws.onopen = function () {\r\n            _this._logger.debug(\"_ws opened\");\r\n            _this.notifyStatusChanged(true);\r\n        };\r\n        this._ws.onmessage = function (message) {\r\n            _this._registry.execute(\"onMessage\", message.data);\r\n        };\r\n    };\r\n    WS.prototype.waitForSocketConnection = function (callback, failed, retriesLeft, retryInterval) {\r\n        var _this = this;\r\n        if (!callback) {\r\n            callback = function () { };\r\n        }\r\n        if (!failed) {\r\n            failed = function () { };\r\n        }\r\n        if (retryInterval === undefined) {\r\n            retryInterval = this._settings.reconnectInterval;\r\n        }\r\n        if (retriesLeft !== undefined) {\r\n            if (retriesLeft === 0) {\r\n                failed(\"wait for socket on \" + this._settings.ws + \" failed - no more retries left\");\r\n                return;\r\n            }\r\n            this._logger.debug(\"will retry \" + retriesLeft + \" more times (every \" + retryInterval + \" ms)\");\r\n        }\r\n        if (!this._running) {\r\n            failed(\"wait for socket on \" + this._settings.ws + \" failed - socket closed by user\");\r\n            return;\r\n        }\r\n        if (!this._ws || this._ws.readyState > 1) {\r\n            this.initiateSocket();\r\n        }\r\n        else if (this._ws.readyState === 1) {\r\n            return callback();\r\n        }\r\n        setTimeout(function () {\r\n            var retries = retriesLeft === undefined ? undefined : retriesLeft - 1;\r\n            _this.waitForSocketConnection(callback, failed, retries, retryInterval);\r\n        }, retryInterval);\r\n    };\r\n    WS.prototype.notifyStatusChanged = function (status, reason) {\r\n        this._registry.execute(\"onConnectedChanged\", status, reason);\r\n    };\r\n    return WS;\r\n}());\r\nexports.default = WS;\r\n//# sourceMappingURL=ws.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/connection/transports/ws.js\n// module id = 65\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3ContextData_1 = require(\"./gw3ContextData\");\r\nvar helpers_1 = require(\"../../helpers\");\r\nvar msg = require(\"./gw3Messages\");\r\nvar contextMessageReplaySpec_1 = require(\"../../contextMessageReplaySpec\");\r\nvar GW3Bridge = (function () {\r\n    function GW3Bridge(config) {\r\n        var _this = this;\r\n        this._contextNameToData = {};\r\n        this._gw3Subscriptions = [];\r\n        this._nextCallbackSubscriptionNumber = 0;\r\n        this._contextNameToId = {};\r\n        this._contextIdToName = {};\r\n        this._connection = config.connection;\r\n        this._logger = config.logger;\r\n        this._gw3Session = this._connection.domain(\"global\", this._logger, [\r\n            msg.GW_MESSAGE_CONTEXT_CREATED,\r\n            msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            msg.GW_MESSAGE_CONTEXT_DESTROYED,\r\n            msg.GW_MESSAGE_CONTEXT_UPDATED,\r\n        ]);\r\n        this.subscribeToContextCreatedMessages();\r\n        this.subscribeToContextUpdatedMessages();\r\n        this.subscribeToContextDestroyedMessages();\r\n        this._connection.replayer.drain(contextMessageReplaySpec_1.ContextMessageReplaySpec.name, function (message) {\r\n            var type = message.type;\r\n            if (!type) {\r\n                return;\r\n            }\r\n            if (type === msg.GW_MESSAGE_CONTEXT_CREATED ||\r\n                type === msg.GW_MESSAGE_CONTEXT_ADDED ||\r\n                type === msg.GW_MESSAGE_ACTIVITY_CREATED) {\r\n                _this.handleContextCreatedMessage(message);\r\n            }\r\n            else if (type === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT ||\r\n                type === msg.GW_MESSAGE_CONTEXT_UPDATED ||\r\n                type === msg.GW_MESSAGE_JOINED_ACTIVITY) {\r\n                _this.handleContextUpdatedMessage(message);\r\n            }\r\n            else if (type === msg.GW_MESSAGE_CONTEXT_DESTROYED ||\r\n                type === msg.GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n                _this.handleContextDestroyedMessage(message);\r\n            }\r\n        });\r\n    }\r\n    GW3Bridge.prototype.dispose = function () {\r\n        for (var _i = 0, _a = this._gw3Subscriptions; _i < _a.length; _i++) {\r\n            var sub = _a[_i];\r\n            this._connection.off(sub);\r\n        }\r\n        this._gw3Subscriptions.length = 0;\r\n        for (var contextName in this._contextNameToData) {\r\n            if (this._contextNameToId.hasOwnProperty(contextName)) {\r\n                delete this._contextNameToData[contextName];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.createContext = function (name, data) {\r\n        var _this = this;\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_CREATE_CONTEXT,\r\n            domain: \"global\",\r\n            name: name,\r\n            data: data,\r\n            lifetime: \"retained\",\r\n        })\r\n            .then(function (createContextMsg) {\r\n            _this._contextNameToId[name] = createContextMsg.context_id;\r\n            if (!_this._contextIdToName[createContextMsg.context_id]) {\r\n                _this._contextIdToName[createContextMsg.context_id] = name;\r\n                var contextData = _this._contextNameToData[name] || new gw3ContextData_1.GW3ContextData(createContextMsg.context_id, name, true, null);\r\n                contextData.isAnnounced = true;\r\n                contextData.name = name;\r\n                contextData.contextId = createContextMsg.context_id;\r\n                _this._contextNameToData[name] = contextData;\r\n                contextData.context = createContextMsg.data;\r\n                contextData.sentExplicitSubscription = true;\r\n                if (contextData.context) {\r\n                    _this.invokeUpdateCallbacks(contextData, contextData.context, null);\r\n                }\r\n                return _this.update(name, data).then(function () { return createContextMsg.context_id; });\r\n            }\r\n            return createContextMsg.context_id;\r\n        });\r\n    };\r\n    GW3Bridge.prototype.all = function () {\r\n        var _this = this;\r\n        return Object.keys(this._contextNameToData)\r\n            .filter(function (name) { return _this._contextNameToData[name].isAnnounced; });\r\n    };\r\n    GW3Bridge.prototype.update = function (name, delta) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, delta);\r\n        }\r\n        var calculatedDelta = this.calculateContextDelta(contextData.context, delta);\r\n        if (!Object.keys(calculatedDelta.added).length\r\n            && !Object.keys(calculatedDelta.updated).length\r\n            && !calculatedDelta.removed.length) {\r\n            return Promise.resolve();\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: calculatedDelta,\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, calculatedDelta, {\r\n                updaterId: gwResponse.peer_id\r\n            });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.set = function (name, data) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return this.createContext(name, data);\r\n        }\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_UPDATE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n            delta: { reset: data },\r\n        }, {}, { skipPeerId: false })\r\n            .then(function (gwResponse) {\r\n            _this.handleUpdated(contextData, { reset: data, added: {}, removed: [], updated: {} }, { updaterId: gwResponse.peer_id });\r\n        });\r\n    };\r\n    GW3Bridge.prototype.get = function (name) {\r\n        var _this = this;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    this.subscribe(name, function (data, delta, removed, un) {\r\n                        _this.unsubscribe(un);\r\n                        resolve(data);\r\n                    });\r\n                    return [2];\r\n                });\r\n            }); });\r\n        }\r\n        else {\r\n            return Promise.resolve(contextData.context);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribe = function (name, callback) {\r\n        var thisCallbackSubscriptionNumber = this._nextCallbackSubscriptionNumber;\r\n        this._nextCallbackSubscriptionNumber += 1;\r\n        var contextData = this._contextNameToData[name];\r\n        if (!contextData ||\r\n            !contextData.isAnnounced) {\r\n            contextData = contextData || new gw3ContextData_1.GW3ContextData(undefined, name, false, undefined);\r\n            this._contextNameToData[name] = contextData;\r\n            contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n        var hadCallbacks = contextData.hasCallbacks();\r\n        contextData.updateCallbacks[thisCallbackSubscriptionNumber] = callback;\r\n        if (!hadCallbacks) {\r\n            if (!contextData.joinedActivity) {\r\n                if (contextData.context &&\r\n                    contextData.sentExplicitSubscription) {\r\n                    callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                    return Promise.resolve(thisCallbackSubscriptionNumber);\r\n                }\r\n                return this.sendSubscribe(contextData)\r\n                    .then(function () { return thisCallbackSubscriptionNumber; });\r\n            }\r\n            else {\r\n                callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n                return Promise.resolve(thisCallbackSubscriptionNumber);\r\n            }\r\n        }\r\n        else {\r\n            callback(contextData.context, contextData.context, [], thisCallbackSubscriptionNumber);\r\n            return Promise.resolve(thisCallbackSubscriptionNumber);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.unsubscribe = function (subscriptionKey) {\r\n        for (var _i = 0, _a = Object.keys(this._contextNameToData); _i < _a.length; _i++) {\r\n            var name_1 = _a[_i];\r\n            var contextId = this._contextNameToId[name_1];\r\n            var contextData = this._contextNameToData[name_1];\r\n            if (!contextData) {\r\n                return;\r\n            }\r\n            var hadCallbacks = contextData.hasCallbacks();\r\n            delete contextData.updateCallbacks[subscriptionKey];\r\n            if (contextData.isAnnounced &&\r\n                hadCallbacks &&\r\n                !contextData.hasCallbacks() &&\r\n                contextData.sentExplicitSubscription) {\r\n                this.sendUnsubscribe(contextData);\r\n            }\r\n            if (!contextData.isAnnounced &&\r\n                !contextData.hasCallbacks()) {\r\n                delete this._contextNameToData[name_1];\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleUpdated = function (contextData, delta, extraData) {\r\n        var oldContext = contextData.context;\r\n        contextData.context = helpers_1.applyContextDelta(contextData.context, delta);\r\n        if (this._contextNameToData[contextData.name] === contextData &&\r\n            !helpers_1.deepEqual(oldContext, contextData.context)) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, delta, extraData);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextCreatedMessages = function () {\r\n        var createdMessageTypes = [\r\n            msg.GW_MESSAGE_CONTEXT_ADDED,\r\n            msg.GW_MESSAGE_CONTEXT_CREATED,\r\n            msg.GW_MESSAGE_ACTIVITY_CREATED,\r\n        ];\r\n        for (var _i = 0, createdMessageTypes_1 = createdMessageTypes; _i < createdMessageTypes_1.length; _i++) {\r\n            var createdMessageType = createdMessageTypes_1[_i];\r\n            var sub = this._connection.on(\"js-contexts\", createdMessageType, this.handleContextCreatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextCreatedMessage = function (contextCreatedMsg) {\r\n        var createdMessageType = contextCreatedMsg.type;\r\n        if (createdMessageType === msg.GW_MESSAGE_ACTIVITY_CREATED) {\r\n            this._contextNameToId[contextCreatedMsg.activity_id] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.activity_id;\r\n        }\r\n        else if (createdMessageType === msg.GW_MESSAGE_CONTEXT_ADDED) {\r\n            this._contextNameToId[contextCreatedMsg.name] = contextCreatedMsg.context_id;\r\n            this._contextIdToName[contextCreatedMsg.context_id] = contextCreatedMsg.name;\r\n        }\r\n        else if (createdMessageType === msg.GW_MESSAGE_CONTEXT_CREATED) {\r\n        }\r\n        var name = this._contextIdToName[contextCreatedMsg.context_id];\r\n        if (!name) {\r\n            throw new Error(\"Received created event for context with unknown name: \" + contextCreatedMsg.context_id);\r\n        }\r\n        if (!this._contextNameToId[name]) {\r\n            throw new Error(\"Received created event for context with unknown id: \" + contextCreatedMsg.context_id);\r\n        }\r\n        var contextData = this._contextNameToData[name];\r\n        if (contextData) {\r\n            if (contextData.isAnnounced) {\r\n                return;\r\n            }\r\n            else {\r\n                if (!contextData.hasCallbacks()) {\r\n                    throw new Error(\"Assertion failure: contextData.hasCallbacks()\");\r\n                }\r\n                contextData.isAnnounced = true;\r\n                contextData.contextId = contextCreatedMsg.context_id;\r\n                contextData.activityId = contextCreatedMsg.activity_id;\r\n                if (!contextData.sentExplicitSubscription) {\r\n                    this.sendSubscribe(contextData);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._contextNameToData[name] = contextData =\r\n                new gw3ContextData_1.GW3ContextData(contextCreatedMsg.context_id, name, true, contextCreatedMsg.activity_id);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextUpdatedMessages = function () {\r\n        var updatedMessageTypes = [\r\n            msg.GW_MESSAGE_CONTEXT_UPDATED,\r\n            msg.GW_MESSAGE_SUBSCRIBED_CONTEXT,\r\n            msg.GW_MESSAGE_JOINED_ACTIVITY,\r\n        ];\r\n        for (var _i = 0, updatedMessageTypes_1 = updatedMessageTypes; _i < updatedMessageTypes_1.length; _i++) {\r\n            var updatedMessageType = updatedMessageTypes_1[_i];\r\n            var sub = this._connection.on(\"js-contexts\", updatedMessageType, this.handleContextUpdatedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextUpdatedMessage = function (contextUpdatedMsg) {\r\n        var updatedMessageType = contextUpdatedMsg.type;\r\n        var contextId = contextUpdatedMsg.context_id;\r\n        var contextData = this._contextNameToData[this._contextIdToName[contextId]];\r\n        var justSeen = !contextData || !contextData.isAnnounced;\r\n        if (updatedMessageType === msg.GW_MESSAGE_JOINED_ACTIVITY) {\r\n            if (!contextData) {\r\n                contextData = new gw3ContextData_1.GW3ContextData(contextId, contextUpdatedMsg.activity_id, true, contextUpdatedMsg.activity_id);\r\n                this._contextNameToData[contextUpdatedMsg.activity_id] = contextData;\r\n                this._contextIdToName[contextId] = contextUpdatedMsg.activity_id;\r\n                this._contextNameToId[contextUpdatedMsg.activity_id] = contextId;\r\n            }\r\n            else {\r\n                contextData.contextId = contextId;\r\n                contextData.isAnnounced = true;\r\n                contextData.activityId = contextUpdatedMsg.activity_id;\r\n            }\r\n            contextData.joinedActivity = true;\r\n        }\r\n        else {\r\n            if (!contextData || !contextData.isAnnounced) {\r\n                if (updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n                    contextData = contextData || new gw3ContextData_1.GW3ContextData(contextId, contextUpdatedMsg.name, true, null);\r\n                    contextData.sentExplicitSubscription = true;\r\n                    this._contextNameToData[contextUpdatedMsg.name] = contextData;\r\n                    this._contextIdToName[contextId] = contextUpdatedMsg.name;\r\n                    this._contextNameToId[contextUpdatedMsg.name] = contextId;\r\n                }\r\n                else {\r\n                    this._logger.error(\"Received 'update' for unknown context: \" + contextId);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        var oldContext = contextData.context;\r\n        if (updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            contextData.context = contextUpdatedMsg.data || {};\r\n        }\r\n        else if (updatedMessageType === msg.GW_MESSAGE_JOINED_ACTIVITY) {\r\n            contextData.context = contextUpdatedMsg.context_snapshot || {};\r\n        }\r\n        else if (updatedMessageType === msg.GW_MESSAGE_CONTEXT_UPDATED) {\r\n            contextData.context = helpers_1.applyContextDelta(contextData.context, contextUpdatedMsg.delta);\r\n        }\r\n        else {\r\n            throw new Error(\"Unrecognized context update message \" + updatedMessageType);\r\n        }\r\n        if (justSeen ||\r\n            !helpers_1.deepEqual(contextData.context, oldContext) ||\r\n            updatedMessageType === msg.GW_MESSAGE_SUBSCRIBED_CONTEXT) {\r\n            this.invokeUpdateCallbacks(contextData, contextData.context, null, { updaterId: contextUpdatedMsg.updater_id });\r\n        }\r\n    };\r\n    GW3Bridge.prototype.invokeUpdateCallbacks = function (contextData, data, delta, extraData) {\r\n        delta = delta || { added: {}, updated: {}, reset: {}, removed: [] };\r\n        for (var updateCallbackIndex in contextData.updateCallbacks) {\r\n            if (contextData.updateCallbacks.hasOwnProperty(updateCallbackIndex)) {\r\n                try {\r\n                    var updateCallback = contextData.updateCallbacks[updateCallbackIndex];\r\n                    updateCallback(helpers_1.deepClone(data), Object.assign({}, delta.added || {}, delta.updated || {}, delta.reset || {}), delta.removed, parseInt(updateCallbackIndex), extraData);\r\n                }\r\n                catch (err) {\r\n                    this._logger.debug(\"Callback error: \" + JSON.stringify(err));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    GW3Bridge.prototype.subscribeToContextDestroyedMessages = function () {\r\n        var destroyedMessageTypes = [\r\n            msg.GW_MESSAGE_CONTEXT_DESTROYED,\r\n            msg.GW_MESSAGE_ACTIVITY_DESTROYED,\r\n        ];\r\n        for (var _i = 0, destroyedMessageTypes_1 = destroyedMessageTypes; _i < destroyedMessageTypes_1.length; _i++) {\r\n            var destroyedMessageType = destroyedMessageTypes_1[_i];\r\n            var sub = this._connection.on(\"js-contexts\", destroyedMessageType, this.handleContextDestroyedMessage.bind(this));\r\n            this._gw3Subscriptions.push(sub);\r\n        }\r\n    };\r\n    GW3Bridge.prototype.handleContextDestroyedMessage = function (destroyedMsg) {\r\n        var destroyedMessageType = destroyedMsg.type;\r\n        var contextId;\r\n        var name;\r\n        if (destroyedMessageType === msg.GW_MESSAGE_ACTIVITY_DESTROYED) {\r\n            name = destroyedMsg.activity_id;\r\n            contextId = this._contextNameToId[name];\r\n            if (!contextId) {\r\n                this._logger.error(\"Received 'destroyed' for unknown activity: \" + destroyedMsg.activity_id);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            contextId = destroyedMsg.context_id;\r\n            name = this._contextIdToName[contextId];\r\n            if (!name) {\r\n                this._logger.error(\"Received 'destroyed' for unknown context: \" + destroyedMsg.context_id);\r\n                return;\r\n            }\r\n        }\r\n        delete this._contextIdToName[contextId];\r\n        delete this._contextNameToId[name];\r\n        var contextData = this._contextNameToData[name];\r\n        delete this._contextNameToData[name];\r\n        if (!contextData || !contextData.isAnnounced) {\r\n            this._logger.error(\"Received 'destroyed' for unknown context: \" + contextId);\r\n            return;\r\n        }\r\n    };\r\n    GW3Bridge.prototype.sendSubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = true;\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_SUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.sendUnsubscribe = function (contextData) {\r\n        contextData.sentExplicitSubscription = false;\r\n        return this._gw3Session\r\n            .send({\r\n            type: msg.GW_MESSAGE_UNSUBSCRIBE_CONTEXT,\r\n            domain: \"global\",\r\n            context_id: contextData.contextId,\r\n        }).then(function (_) { return undefined; });\r\n    };\r\n    GW3Bridge.prototype.calculateContextDelta = function (from, to) {\r\n        var delta = { added: {}, updated: {}, removed: [], reset: null };\r\n        if (from) {\r\n            for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n                var x = _a[_i];\r\n                if (Object.keys(to).indexOf(x) !== -1\r\n                    && to[x] !== null\r\n                    && !helpers_1.deepEqual(from[x], to[x])) {\r\n                    delta.updated[x] = to[x];\r\n                }\r\n            }\r\n        }\r\n        for (var _b = 0, _c = Object.keys(to); _b < _c.length; _b++) {\r\n            var x = _c[_b];\r\n            if (!from || (Object.keys(from).indexOf(x) === -1)) {\r\n                if (to[x] !== null) {\r\n                    delta.added[x] = to[x];\r\n                }\r\n            }\r\n            else if (to[x] === null) {\r\n                delta.removed.push(x);\r\n            }\r\n        }\r\n        return delta;\r\n    };\r\n    return GW3Bridge;\r\n}());\r\nexports.GW3Bridge = GW3Bridge;\r\n//# sourceMappingURL=gw3Bridge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/contexts/bridges/gw3/gw3Bridge.js\n// module id = 66\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar GW3ContextData = (function () {\r\n    function GW3ContextData(contextId, name, isAnnounced, activityId) {\r\n        this.updateCallbacks = {};\r\n        this.contextId = contextId;\r\n        this.name = name;\r\n        this.isAnnounced = isAnnounced;\r\n        this.activityId = activityId;\r\n        this.context = {};\r\n    }\r\n    GW3ContextData.prototype.hasCallbacks = function () {\r\n        return Object.keys(this.updateCallbacks).length > 0;\r\n    };\r\n    GW3ContextData.prototype.getState = function () {\r\n        if (this.isAnnounced && this.hasCallbacks()) {\r\n            return 3;\r\n        }\r\n        if (this.isAnnounced) {\r\n            return 2;\r\n        }\r\n        if (this.hasCallbacks()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n    return GW3ContextData;\r\n}());\r\nexports.GW3ContextData = GW3ContextData;\r\n//# sourceMappingURL=gw3ContextData.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/contexts/bridges/gw3/gw3ContextData.js\n// module id = 67\n// module chunks = 0","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar HCBridge = (function () {\r\n    function HCBridge(config) {\r\n        this._facade = window.htmlContainer.sharedContextFacade;\r\n    }\r\n    HCBridge.prototype.all = function () {\r\n        var allObj = this._facade.all();\r\n        if (!allObj || !allObj.keys) {\r\n            return [];\r\n        }\r\n        return allObj.keys;\r\n    };\r\n    HCBridge.prototype.update = function (name, delta) {\r\n        this._facade.update(name, delta);\r\n        return Promise.resolve();\r\n    };\r\n    HCBridge.prototype.set = function (name, data) {\r\n        this._facade.set(name, data);\r\n        return Promise.resolve();\r\n    };\r\n    HCBridge.prototype.subscribe = function (name, callback) {\r\n        var snapshot = null;\r\n        var key = this._facade.subscribe(name, function (data, delta, removed) {\r\n            if (!key && key !== 0) {\r\n                snapshot = data;\r\n                return;\r\n            }\r\n            callback(data, delta, removed, key);\r\n        });\r\n        if (snapshot) {\r\n            callback(snapshot, snapshot, [], key);\r\n            snapshot = null;\r\n        }\r\n        return Promise.resolve(key);\r\n    };\r\n    HCBridge.prototype.get = function (name) {\r\n        var _this = this;\r\n        return new Promise(function (resolve, reject) { return __awaiter(_this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                this.subscribe(name, function (data, un) {\r\n                    _this.unsubscribe(un);\r\n                    resolve(data);\r\n                });\r\n                return [2];\r\n            });\r\n        }); });\r\n    };\r\n    HCBridge.prototype.unsubscribe = function (key) {\r\n        this._facade.unsubscribe(key);\r\n    };\r\n    return HCBridge;\r\n}());\r\nexports.HCBridge = HCBridge;\r\n//# sourceMappingURL=hcBridge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/contexts/bridges/hcBridge.js\n// module id = 68\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3Bridge_1 = require(\"./bridges/gw3/gw3Bridge\");\r\nvar hcBridge_1 = require(\"./bridges/hcBridge\");\r\nvar ContextsModule = (function () {\r\n    function ContextsModule(config) {\r\n        this.config = config;\r\n        try {\r\n            if (config.gdMajorVersion === 2) {\r\n                var hc = window.htmlContainer;\r\n                if (!hc.sharedContextFacade) {\r\n                    throw new Error(\"Your version of HtmlContainer does not support contexts.\"\r\n                        + \" Get version 1.46.0.0 or later to have that feature.\");\r\n                }\r\n                this._bridge = new hcBridge_1.HCBridge(config);\r\n            }\r\n            else if (config.connection.protocolVersion === 3) {\r\n                this._bridge = new gw3Bridge_1.GW3Bridge(config);\r\n            }\r\n            else {\r\n                throw new Error(\"To use the Contexts library you must run in the\"\r\n                    + \" HTML Container or using a connection to Gateway v3.\");\r\n            }\r\n        }\r\n        catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n    ContextsModule.prototype.all = function () {\r\n        return this._bridge.all();\r\n    };\r\n    ContextsModule.prototype.update = function (name, delta) {\r\n        this.checkName(name);\r\n        return this._bridge.update(name, delta);\r\n    };\r\n    ContextsModule.prototype.set = function (name, data) {\r\n        this.checkName(name);\r\n        return this._bridge.set(name, data);\r\n    };\r\n    ContextsModule.prototype.subscribe = function (name, callback) {\r\n        var _this = this;\r\n        this.checkName(name);\r\n        return this._bridge\r\n            .subscribe(name, function (data, delta, removed, key, extraData) { return callback(data, delta, removed, function () { return _this._bridge.unsubscribe(key); }, extraData); })\r\n            .then(function (key) {\r\n            return function () {\r\n                _this._bridge.unsubscribe(key);\r\n            };\r\n        });\r\n    };\r\n    ContextsModule.prototype.get = function (name) {\r\n        return this._bridge.get(name);\r\n    };\r\n    ContextsModule.prototype.ready = function () {\r\n        return Promise.resolve(this);\r\n    };\r\n    ContextsModule.prototype.checkName = function (name) {\r\n        if (typeof name !== \"string\" ||\r\n            name == \"\") {\r\n            throw new Error(\"'name' must be non-empty string, got '\" + name + \"'\");\r\n        }\r\n    };\r\n    return ContextsModule;\r\n}());\r\nexports.ContextsModule = ContextsModule;\r\n//# sourceMappingURL=contextsModule.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/contexts/contextsModule.js\n// module id = 69\n// module chunks = 0","\"use strict\";\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction applyContextDelta(context, delta) {\r\n    if (delta) {\r\n        if (delta.reset) {\r\n            context = __assign({}, delta.reset);\r\n            return context;\r\n        }\r\n        context = deepClone(context, null);\r\n        var added_1 = delta.added;\r\n        var updated_1 = delta.updated;\r\n        var removed = delta.removed;\r\n        if (added_1) {\r\n            Object.keys(added_1).forEach(function (key) {\r\n                context[key] = added_1[key];\r\n            });\r\n        }\r\n        if (updated_1) {\r\n            Object.keys(updated_1).forEach(function (key) {\r\n                mergeObjectsProperties(key, context, updated_1);\r\n            });\r\n        }\r\n        if (removed) {\r\n            removed.forEach(function (key) {\r\n                delete context[key];\r\n            });\r\n        }\r\n    }\r\n    return context;\r\n}\r\nexports.applyContextDelta = applyContextDelta;\r\nfunction deepClone(obj, hash) {\r\n    hash = hash || new WeakMap();\r\n    if (Object(obj) !== obj) {\r\n        return obj;\r\n    }\r\n    if (obj instanceof Set) {\r\n        return new Set(obj);\r\n    }\r\n    if (hash.has(obj)) {\r\n        return hash.get(obj);\r\n    }\r\n    var result = obj instanceof Date ? new Date(obj)\r\n        : obj instanceof RegExp ? new RegExp(obj.source, obj.flags)\r\n            : obj.constructor ? new obj.constructor()\r\n                : Object.create(null);\r\n    hash.set(obj, result);\r\n    if (obj instanceof Map) {\r\n        Array.from(obj, function (_a) {\r\n            var key = _a[0], val = _a[1];\r\n            return result.set(key, deepClone(val, hash));\r\n        });\r\n    }\r\n    return Object.assign.apply(Object, [result].concat(Object.keys(obj).map(function (key) {\r\n        var _a;\r\n        return (_a = {}, _a[key] = deepClone(obj[key], hash), _a);\r\n    })));\r\n}\r\nexports.deepClone = deepClone;\r\nvar mergeObjectsProperties = function (key, what, withWhat) {\r\n    var right = withWhat[key];\r\n    if (right === undefined) {\r\n        return what;\r\n    }\r\n    var left = what[key];\r\n    if (!left || !right) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    if (typeof left === \"string\" ||\r\n        typeof left === \"number\" ||\r\n        typeof left === \"boolean\" ||\r\n        typeof right === \"string\" ||\r\n        typeof right === \"number\" ||\r\n        typeof right === \"boolean\" ||\r\n        Array.isArray(left) ||\r\n        Array.isArray(right)) {\r\n        what[key] = right;\r\n        return what;\r\n    }\r\n    what[key] = Object.assign({}, left, right);\r\n    return what;\r\n};\r\nfunction deepEqual(x, y) {\r\n    if (x === y) {\r\n        return true;\r\n    }\r\n    if (!(x instanceof Object) || !(y instanceof Object)) {\r\n        return false;\r\n    }\r\n    if (x.constructor !== y.constructor) {\r\n        return false;\r\n    }\r\n    for (var p in x) {\r\n        if (!x.hasOwnProperty(p)) {\r\n            continue;\r\n        }\r\n        if (!y.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n        if (x[p] === y[p]) {\r\n            continue;\r\n        }\r\n        if (typeof (x[p]) !== \"object\") {\r\n            return false;\r\n        }\r\n        if (!deepEqual(x[p], y[p])) {\r\n            return false;\r\n        }\r\n    }\r\n    for (var p in y) {\r\n        if (y.hasOwnProperty(p) && !x.hasOwnProperty(p)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.deepEqual = deepEqual;\r\n//# sourceMappingURL=helpers.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/contexts/helpers.js\n// module id = 70\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar contextsModule_1 = require(\"./contextsModule\");\r\nexports.ContextsModule = contextsModule_1.ContextsModule;\r\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/contexts/main.js\n// module id = 71\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar LogLevel = (function () {\r\n    function LogLevel() {\r\n    }\r\n    LogLevel.canPublish = function (level, restriction) {\r\n        var levelIdx = LogLevel.order.indexOf(level);\r\n        var restrictionIdx = LogLevel.order.indexOf(restriction);\r\n        return levelIdx >= restrictionIdx;\r\n    };\r\n    LogLevel.off = \"off\";\r\n    LogLevel.trace = \"trace\";\r\n    LogLevel.debug = \"debug\";\r\n    LogLevel.info = \"info\";\r\n    LogLevel.warn = \"warn\";\r\n    LogLevel.error = \"error\";\r\n    LogLevel.order = [LogLevel.trace, LogLevel.debug, LogLevel.info, LogLevel.warn, LogLevel.error, LogLevel.off];\r\n    return LogLevel;\r\n}());\r\nexports.default = LogLevel;\r\n//# sourceMappingURL=levels.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/logger/levels.js\n// module id = 72\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar levels_1 = require(\"./levels\");\r\nvar LoggerImpl = (function () {\r\n    function LoggerImpl(name, parent, metricSystem) {\r\n        this._subloggers = [];\r\n        this._name = name;\r\n        this._parent = parent;\r\n        if (parent) {\r\n            this._path = parent.path + \".\" + name;\r\n        }\r\n        else {\r\n            this._path = name;\r\n        }\r\n        this._loggerFullName = \"[\" + this._path + \"]\";\r\n        if (typeof metricSystem !== \"undefined\") {\r\n            this.metricsLevel(\"warn\", metricSystem.subSystem(name));\r\n        }\r\n    }\r\n    Object.defineProperty(LoggerImpl.prototype, \"name\", {\r\n        get: function () {\r\n            return this._name;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LoggerImpl.prototype, \"path\", {\r\n        get: function () {\r\n            return this._path;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LoggerImpl.prototype.subLogger = function (name) {\r\n        var existingSub = this._subloggers.filter(function (subLogger) {\r\n            return subLogger.name === name;\r\n        })[0];\r\n        if (existingSub !== undefined) {\r\n            return existingSub;\r\n        }\r\n        Object.keys(this).forEach(function (key) {\r\n            if (key === name) {\r\n                throw new Error(\"This sub logger name is not allowed.\");\r\n            }\r\n        });\r\n        var sub = new LoggerImpl(name, this);\r\n        this._subloggers.push(sub);\r\n        return sub;\r\n    };\r\n    LoggerImpl.prototype.publishLevel = function (level) {\r\n        if (level !== null && level !== undefined) {\r\n            this._publishLevel = level;\r\n        }\r\n        return this._publishLevel || this._parent.publishLevel();\r\n    };\r\n    LoggerImpl.prototype.consoleLevel = function (level) {\r\n        if (level !== null && level !== undefined) {\r\n            this._consoleLevel = level;\r\n        }\r\n        return this._consoleLevel || this._parent.consoleLevel();\r\n    };\r\n    LoggerImpl.prototype.metricsLevel = function (level, metricsSystem) {\r\n        if (level !== null && level !== undefined) {\r\n            this._metricLevel = level;\r\n        }\r\n        if (metricsSystem !== undefined) {\r\n            if (typeof metricsSystem === \"object\" && typeof metricsSystem.objectMetric === \"function\") {\r\n                this._metricSystem = metricsSystem;\r\n            }\r\n            else {\r\n                throw new Error(\"Please specify metric system\");\r\n            }\r\n        }\r\n        return this._metricLevel || this._parent.metricsLevel();\r\n    };\r\n    LoggerImpl.prototype.log = function (message, level) {\r\n        this.publishMessage(level || levels_1.default.info, message);\r\n    };\r\n    LoggerImpl.prototype.trace = function (message) {\r\n        this.log(message, levels_1.default.trace);\r\n    };\r\n    LoggerImpl.prototype.debug = function (message) {\r\n        this.log(message, levels_1.default.debug);\r\n    };\r\n    LoggerImpl.prototype.info = function (message) {\r\n        this.log(message, levels_1.default.info);\r\n    };\r\n    LoggerImpl.prototype.warn = function (message) {\r\n        this.log(message, levels_1.default.warn);\r\n    };\r\n    LoggerImpl.prototype.error = function (message) {\r\n        this.log(message, levels_1.default.error);\r\n    };\r\n    LoggerImpl.prototype.toAPIObject = function () {\r\n        var that = this;\r\n        return {\r\n            name: this.name,\r\n            subLogger: this.subLogger.bind(that),\r\n            publishLevel: this.publishLevel.bind(that),\r\n            consoleLevel: this.consoleLevel.bind(that),\r\n            metricsLevel: this.metricsLevel.bind(that),\r\n            log: this.log.bind(that),\r\n            trace: this.trace.bind(that),\r\n            debug: this.debug.bind(that),\r\n            info: this.info.bind(that),\r\n            warn: this.warn.bind(that),\r\n            error: this.error.bind(that),\r\n        };\r\n    };\r\n    LoggerImpl.prototype.publishMessage = function (level, message) {\r\n        var loggerName = this._loggerFullName;\r\n        if (level === levels_1.default.error) {\r\n            var e = new Error();\r\n            if (e.stack) {\r\n                message = message + \"\\n\" +\r\n                    (e.stack.split(\"\\n\").slice(3).join(\"\\n\"));\r\n            }\r\n        }\r\n        if (levels_1.default.canPublish(level, this.consoleLevel())) {\r\n            var toPrint = loggerName + \": \" + message;\r\n            switch (level) {\r\n                case levels_1.default.trace:\r\n                    console.trace(toPrint);\r\n                    break;\r\n                case levels_1.default.debug:\r\n                    if (console.debug) {\r\n                        console.debug(toPrint);\r\n                    }\r\n                    else {\r\n                        console.log(toPrint);\r\n                    }\r\n                    break;\r\n                case levels_1.default.info:\r\n                    console.info(toPrint);\r\n                    break;\r\n                case levels_1.default.warn:\r\n                    console.warn(toPrint);\r\n                    break;\r\n                case levels_1.default.error:\r\n                    console.error(toPrint);\r\n                    break;\r\n            }\r\n        }\r\n        if (levels_1.default.canPublish(level, this.publishLevel())) {\r\n            LoggerImpl.GetConnection().send(\"log\", \"LogMessage\", {\r\n                instance: LoggerImpl.Instance,\r\n                level: levels_1.default.order.indexOf(level),\r\n                logger: loggerName,\r\n                message: message,\r\n            });\r\n        }\r\n        if (levels_1.default.canPublish(level, this.metricsLevel())) {\r\n            if (this._metricSystem !== undefined) {\r\n                this._metricSystem.objectMetric(\"LogMessage\", {\r\n                    Level: level,\r\n                    Logger: loggerName,\r\n                    Message: message,\r\n                    Time: new Date(),\r\n                });\r\n                if (level === levels_1.default.error) {\r\n                    this._metricSystem.setState(100, message);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return LoggerImpl;\r\n}());\r\nexports.default = LoggerImpl;\r\n//# sourceMappingURL=logger.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/logger/logger.js\n// module id = 73\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar logger_1 = require(\"./logger\");\r\nexports.default = (function (settings) {\r\n    var identity = settings.identity;\r\n    if (!identity) {\r\n        throw new Error(\"identity is missing\");\r\n    }\r\n    var identityStr = identity.system + \"\\\\\" + identity.service + \"\\\\\" + identity.instance;\r\n    logger_1.default.Instance = identityStr;\r\n    logger_1.default.GetConnection = settings.getConnection;\r\n    var mainLogger = new logger_1.default(\"main\");\r\n    mainLogger.publishLevel(settings.publish || \"off\");\r\n    mainLogger.consoleLevel(settings.console || \"info\");\r\n    mainLogger.metricsLevel(settings.metrics || \"off\");\r\n    var apiLogger = mainLogger.toAPIObject();\r\n    return apiLogger;\r\n});\r\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/logger/main.js\n// module id = 74\n// module chunks = 0","\"use strict\";\r\nvar glue_1 = require(\"./glue\");\r\nvar pjson = require(\"../package.json\");\r\nif (typeof window !== \"undefined\") {\r\n    window.GlueCore = glue_1.default;\r\n}\r\nglue_1.default.default = glue_1.default;\r\nglue_1.default.version = pjson.version;\r\nmodule.exports = glue_1.default;\r\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/main.js\n// module id = 75\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"../../helpers\");\r\nvar metric_types_1 = require(\"../const/metric-types\");\r\nfunction addressMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var conflation = definition.conflation;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.ADDRESS;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = addressMetric;\r\n//# sourceMappingURL=address.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/metrics/address.js\n// module id = 76\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"../../helpers\");\r\nvar metric_types_1 = require(\"../const/metric-types\");\r\nfunction countMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || 0;\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.COUNT;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    function incrementBy(num) {\r\n        update(_value + num);\r\n    }\r\n    function increment() {\r\n        incrementBy(1);\r\n    }\r\n    function decrement() {\r\n        incrementBy(-1);\r\n    }\r\n    function decrementBy(num) {\r\n        incrementBy(num * -1);\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get path() {\r\n            return _path;\r\n        },\r\n        get value() {\r\n            return _value;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n        incrementBy: incrementBy,\r\n        increment: increment,\r\n        decrement: decrement,\r\n        decrementBy: decrementBy,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = countMetric;\r\n//# sourceMappingURL=count.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/metrics/count.js\n// module id = 77\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"../../helpers\");\r\nvar metric_types_1 = require(\"../const/metric-types\");\r\nfunction numberMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _path = parent.path.slice(0);\r\n    var _value = value || 0;\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.NUMBER;\r\n    _path.push(parent.name);\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    function incrementBy(num) {\r\n        update(_value + num);\r\n    }\r\n    function increment() {\r\n        incrementBy(1);\r\n    }\r\n    function decrement() {\r\n        incrementBy(-1);\r\n    }\r\n    function decrementBy(num) {\r\n        incrementBy(num * -1);\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        type: type,\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n        incrementBy: incrementBy,\r\n        increment: increment,\r\n        decrement: decrement,\r\n        decrementBy: decrementBy,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = numberMetric;\r\n//# sourceMappingURL=number.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/metrics/number.js\n// module id = 78\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar metric_types_1 = require(\"../const/metric-types\");\r\nvar helpers_1 = require(\"../../helpers\");\r\nfunction objectMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.OBJECT;\r\n    function update(newValue) {\r\n        mergeValues(newValue);\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    function mergeValues(values) {\r\n        return Object.keys(_value).forEach(function (k) {\r\n            if (typeof values[k] !== \"undefined\") {\r\n                _value[k] = values[k];\r\n            }\r\n        });\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = objectMetric;\r\n//# sourceMappingURL=object.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/metrics/object.js\n// module id = 79\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"../../helpers\");\r\nvar metric_types_1 = require(\"../const/metric-types\");\r\nfunction rateMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.RATE;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = rateMetric;\r\n//# sourceMappingURL=rate.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/metrics/rate.js\n// module id = 80\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"../../helpers\");\r\nvar metric_types_1 = require(\"../const/metric-types\");\r\nfunction statisticsMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.STATISTICS;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = statisticsMetric;\r\n//# sourceMappingURL=statistics.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/metrics/statistics.js\n// module id = 81\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"../../helpers\");\r\nvar metric_types_1 = require(\"../const/metric-types\");\r\nfunction stringMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.STRING;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        type: type,\r\n        update: update,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = stringMetric;\r\n//# sourceMappingURL=string.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/metrics/string.js\n// module id = 82\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"../../helpers\");\r\nvar metric_types_1 = require(\"../const/metric-types\");\r\nfunction timespanMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.TIMESPAN;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function start() {\r\n        update(true);\r\n    }\r\n    function stop() {\r\n        update(false);\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        start: start,\r\n        stop: stop,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = timespanMetric;\r\n//# sourceMappingURL=timespan.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/metrics/timespan.js\n// module id = 83\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar helpers_1 = require(\"../../helpers\");\r\nvar metric_types_1 = require(\"../const/metric-types\");\r\nfunction timestampMetric(definition, parent, transport, value) {\r\n    helpers_1.default.validate(definition, parent, transport);\r\n    var _transport = transport;\r\n    var _value = value || \"\";\r\n    var _path = parent.path.slice(0);\r\n    _path.push(parent.name);\r\n    var name = definition.name;\r\n    var description = definition.description;\r\n    var period = definition.period;\r\n    var resolution = definition.resolution;\r\n    var conflation = definition.conflation;\r\n    var system = parent;\r\n    var repo = parent.repo;\r\n    var id = parent.path + \"/\" + name;\r\n    var type = metric_types_1.default.TIMESTAMP;\r\n    function update(newValue) {\r\n        _value = newValue;\r\n        _transport.updateMetric(me);\r\n    }\r\n    function now() {\r\n        update(new Date());\r\n    }\r\n    function getValueType() {\r\n        return undefined;\r\n    }\r\n    var me = {\r\n        name: name,\r\n        description: description,\r\n        period: period,\r\n        resolution: resolution,\r\n        system: system,\r\n        repo: repo,\r\n        id: id,\r\n        type: type,\r\n        conflation: conflation,\r\n        get value() {\r\n            return _value;\r\n        },\r\n        get path() {\r\n            return _path;\r\n        },\r\n        update: update,\r\n        now: now,\r\n        getValueType: getValueType,\r\n    };\r\n    _transport.createMetric(me);\r\n    return me;\r\n}\r\nexports.default = timestampMetric;\r\n//# sourceMappingURL=timestamp.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/metrics/timestamp.js\n// module id = 84\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar serializer_1 = require(\"./serializer\");\r\nfunction default_1(connection, config) {\r\n    var DEFAULT_HEARTBEAT_INTERVAL = 3000;\r\n    var heartbeatTimer;\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var _connection = connection;\r\n    var heartbeatInterval = config.heartbeatInterval || DEFAULT_HEARTBEAT_INTERVAL;\r\n    var send = function (type, message) {\r\n        _connection.send(\"metrics\", type, message);\r\n    };\r\n    function sendFull(repo) {\r\n        if (!repo.root) {\r\n            return;\r\n        }\r\n        if (repo.root.subSystems.length === 0) {\r\n            return;\r\n        }\r\n        sendFullSystem(repo.root);\r\n    }\r\n    function sendFullSystem(system) {\r\n        createSystem(system);\r\n        system.subSystems.forEach(function (sub) {\r\n            sendFullSystem(sub);\r\n        });\r\n        system.metrics.forEach(function (metric) {\r\n            createMetric(metric);\r\n        });\r\n    }\r\n    function heartbeat(repo) {\r\n        send(\"HeartbeatMetrics\", {\r\n            publishingInterval: heartbeatInterval,\r\n            instance: repo.instance,\r\n        });\r\n    }\r\n    function createSystem(system) {\r\n        if (system.parent !== undefined) {\r\n            send(\"CreateMetricSystem\", {\r\n                id: system.id,\r\n                instance: system.repo.instance,\r\n                definition: {\r\n                    name: system.name,\r\n                    description: system.description,\r\n                    path: system.path,\r\n                },\r\n            });\r\n        }\r\n    }\r\n    function updateSystem(system, state) {\r\n        send(\"UpdateMetricSystem\", {\r\n            id: system.id,\r\n            instance: system.repo.instance,\r\n            state: state,\r\n        });\r\n    }\r\n    function createMetric(metric) {\r\n        send(\"CreateMetric\", serializer_1.default(metric));\r\n    }\r\n    function updateMetric(metric) {\r\n        send(\"UpdateMetric\", serializer_1.default(metric));\r\n    }\r\n    function init(repo) {\r\n        heartbeat(repo);\r\n        _connection.on(\"metrics\", \"MetricsSnapshotRequest\", function (instanceInfo) {\r\n            if (instanceInfo.Instance !== repo.instance) {\r\n                return;\r\n            }\r\n            sendFull(repo);\r\n        });\r\n        _connection.disconnected(function () { return clearInterval(heartbeatTimer); });\r\n        if (typeof window !== \"undefined\" && typeof window.htmlContainer === \"undefined\") {\r\n            heartbeatTimer = setInterval(function () {\r\n                heartbeat(repo);\r\n            }, heartbeatInterval);\r\n        }\r\n    }\r\n    var me = {\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n        init: init,\r\n    };\r\n    return me;\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw1.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/protocols/gw1/gw1.js\n// module id = 85\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar metric_types_1 = require(\"../../const/metric-types\");\r\nfunction metricToMessage(metric) {\r\n    var definition = getMetricDefinition(metric.name, metric.value, metric.path, metric.type, metric.description, metric.period, metric.resolution, metric.conflation);\r\n    function getMetricDefinition(name, value, path, type, description, period, resolution, conflation) {\r\n        var _definition = {\r\n            name: name,\r\n            description: description,\r\n            type: type ? type : getTypeFromValue(value),\r\n            path: path,\r\n            resolution: resolution,\r\n            period: period,\r\n            conflation: conflation,\r\n        };\r\n        if (_definition.type === metric_types_1.default.OBJECT) {\r\n            _definition.Composite = Object.keys(value).reduce(function (arr, key) {\r\n                var val = value[key];\r\n                arr.push(getMetricDefinition(key, val, path));\r\n                return arr;\r\n            }, []);\r\n        }\r\n        return _definition;\r\n    }\r\n    function serializeValue(value, _metric) {\r\n        if (value && value.constructor === Date) {\r\n            return {\r\n                value: {\r\n                    type: _valueTypes.indexOf(\"date\"),\r\n                    value: value.valueOf(),\r\n                    isArray: false,\r\n                },\r\n            };\r\n        }\r\n        if (typeof value === \"object\") {\r\n            return {\r\n                CompositeValue: Object.keys(value).reduce(function (arr, key) {\r\n                    var val = serializeValue(value[key]);\r\n                    val.InnerMetricName = key;\r\n                    arr.push(val);\r\n                    return arr;\r\n                }, []),\r\n            };\r\n        }\r\n        var valueType = _metric ? _metric.getValueType() : undefined;\r\n        valueType = valueType || _valueTypes.indexOf(typeof value);\r\n        return {\r\n            value: {\r\n                type: valueType,\r\n                value: value,\r\n                isArray: false,\r\n            },\r\n        };\r\n    }\r\n    function getTypeFromValue(value) {\r\n        var typeAsString = value.constructor === Date ? \"timestamp\" : typeof value;\r\n        switch (typeAsString) {\r\n            case \"string\":\r\n                return metric_types_1.default.STRING;\r\n            case \"number\":\r\n                return metric_types_1.default.NUMBER;\r\n            case \"timestamp\":\r\n                return metric_types_1.default.TIMESTAMP;\r\n            case \"object\":\r\n                return metric_types_1.default.OBJECT;\r\n        }\r\n        return 0;\r\n    }\r\n    var _valueTypes = [\r\n        \"boolean\",\r\n        \"int\",\r\n        \"number\",\r\n        \"long\",\r\n        \"string\",\r\n        \"date\",\r\n        \"object\",\r\n    ];\r\n    return {\r\n        id: metric.id,\r\n        instance: metric.repo.instance,\r\n        definition: definition,\r\n        value: serializeValue(metric.value, metric),\r\n    };\r\n}\r\nexports.default = metricToMessage;\r\n//# sourceMappingURL=serializer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/protocols/gw1/serializer.js\n// module id = 86\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar serializer_1 = require(\"./serializer\");\r\nfunction default_1(connection, config) {\r\n    if (!connection || typeof connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var joinPromise;\r\n    var session;\r\n    var init = function (repo) {\r\n        var resolveReadyPromise;\r\n        joinPromise = new Promise(function (resolve) {\r\n            resolveReadyPromise = resolve;\r\n        });\r\n        session = connection.domain(\"metrics\", config.logger);\r\n        session.onJoined(function (reconnect) {\r\n            if (!reconnect) {\r\n                resolveReadyPromise();\r\n                resolveReadyPromise = undefined;\r\n            }\r\n            var rootStateMetric = {\r\n                name: \"/State\",\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var defineRootMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [rootStateMetric],\r\n            };\r\n            session.send(defineRootMetricsMsg);\r\n            if (reconnect) {\r\n                replayRepo(repo);\r\n            }\r\n        });\r\n        session.join(config.identity);\r\n    };\r\n    var replayRepo = function (repo) {\r\n        replaySystem(repo.root);\r\n    };\r\n    var replaySystem = function (system) {\r\n        createSystem(system);\r\n        system.metrics.forEach(function (m) {\r\n            createMetric(m);\r\n        });\r\n        system.subSystems.forEach(function (ss) {\r\n            replaySystem(ss);\r\n        });\r\n    };\r\n    var createSystem = function (system) {\r\n        if (system.parent === undefined) {\r\n            return;\r\n        }\r\n        joinPromise.then(function () {\r\n            var metric = {\r\n                name: serializer_1.normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                type: \"object\",\r\n                composite: {\r\n                    Description: {\r\n                        type: \"string\",\r\n                        description: \"\",\r\n                    },\r\n                    Value: {\r\n                        type: \"number\",\r\n                        description: \"\",\r\n                    },\r\n                },\r\n                description: \"System state\",\r\n                context: {},\r\n            };\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [metric],\r\n            };\r\n            session.send(createMetricsMsg);\r\n        });\r\n    };\r\n    var updateSystem = function (system, state) {\r\n        joinPromise.then(function () {\r\n            var shadowedUpdateMetric = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: serializer_1.normalizeMetricName(system.path.join(\"/\") + \"/\" + system.name + \"/State\"),\r\n                        value: {\r\n                            Description: state.description,\r\n                            Value: state.state,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(shadowedUpdateMetric);\r\n            var stateObj = serializer_1.composeMsgForRootStateMetric(system);\r\n            var rootMetric = {\r\n                type: \"publish\",\r\n                peer_id: connection.peerId,\r\n                values: [{\r\n                        name: \"/State\",\r\n                        value: {\r\n                            Description: stateObj.description,\r\n                            Value: stateObj.value,\r\n                        },\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(rootMetric);\r\n        });\r\n    };\r\n    var createMetric = function (metric) {\r\n        joinPromise.then(function () {\r\n            var m = serializer_1.serializeMetric(metric);\r\n            var createMetricsMsg = {\r\n                type: \"define\",\r\n                metrics: [m],\r\n            };\r\n            session.send(createMetricsMsg);\r\n            if (typeof metric.value !== \"undefined\") {\r\n                updateMetric(metric);\r\n            }\r\n        });\r\n    };\r\n    var updateMetric = function (metric) {\r\n        joinPromise.then(function () {\r\n            var value = serializer_1.getMetricValueByType(metric);\r\n            var publishMetricsMsg = {\r\n                type: \"publish\",\r\n                values: [{\r\n                        name: serializer_1.normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name),\r\n                        value: value,\r\n                        timestamp: Date.now(),\r\n                    }],\r\n            };\r\n            session.send(publishMetricsMsg);\r\n        });\r\n    };\r\n    return {\r\n        init: init,\r\n        createSystem: createSystem,\r\n        updateSystem: updateSystem,\r\n        createMetric: createMetric,\r\n        updateMetric: updateMetric,\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=gw3.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/protocols/gw3/gw3.js\n// module id = 87\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar metric_types_1 = require(\"../../const/metric-types\");\r\nfunction getMetricTypeByValue(metric) {\r\n    if ((metric.value && metric.value.constructor === Date) || metric.type === metric_types_1.default.TIMESPAN || metric.type === metric_types_1.default.TIMESTAMP) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof metric.value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof metric.value === \"string\" || metric.type === metric_types_1.default.STRING || metric.type === metric_types_1.default.RATE) {\r\n        return \"string\";\r\n    }\r\n    else if (typeof metric.value === \"object\") {\r\n        return \"object\";\r\n    }\r\n}\r\nfunction getTypeByValue(value) {\r\n    if (value.constructor === Date) {\r\n        return \"timestamp\";\r\n    }\r\n    else if (typeof value === \"number\") {\r\n        return \"number\";\r\n    }\r\n    else if (typeof value === \"string\") {\r\n        return \"string\";\r\n    }\r\n    else if (typeof value === \"object\") {\r\n        return \"object\";\r\n    }\r\n    else {\r\n        return \"string\";\r\n    }\r\n}\r\nfunction serializeMetric(metric) {\r\n    var serializedMetrics = {};\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"object\") {\r\n        var values = Object.keys(metric.value).reduce(function (memo, key) {\r\n            var innerType = getTypeByValue(metric.value[key]);\r\n            if (innerType === \"object\") {\r\n                var composite = defineNestedComposite(metric.value[key]);\r\n                memo[key] = {\r\n                    type: \"object\",\r\n                    description: \"\",\r\n                    context: {},\r\n                    composite: composite,\r\n                };\r\n            }\r\n            else {\r\n                memo[key] = {\r\n                    type: innerType,\r\n                    description: \"\",\r\n                    context: {},\r\n                };\r\n            }\r\n            return memo;\r\n        }, {});\r\n        serializedMetrics.composite = values;\r\n    }\r\n    serializedMetrics.name = normalizeMetricName(metric.path.join(\"/\") + \"/\" + metric.name);\r\n    serializedMetrics.type = type;\r\n    serializedMetrics.description = metric.description;\r\n    serializedMetrics.context = {};\r\n    return serializedMetrics;\r\n}\r\nexports.serializeMetric = serializeMetric;\r\nfunction defineNestedComposite(values) {\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var type = getTypeByValue(values[key]);\r\n        if (type === \"object\") {\r\n            memo[key] = {\r\n                type: \"object\",\r\n                description: \"\",\r\n                context: {},\r\n                composite: defineNestedComposite(values[key]),\r\n            };\r\n        }\r\n        else {\r\n            memo[key] = {\r\n                type: type,\r\n                description: \"\",\r\n                context: {},\r\n            };\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction normalizeMetricName(name) {\r\n    if (typeof name !== \"undefined\" && name.length > 0 && name[0] !== \"/\") {\r\n        return \"/\" + name;\r\n    }\r\n    else {\r\n        return name;\r\n    }\r\n}\r\nexports.normalizeMetricName = normalizeMetricName;\r\nfunction getMetricValueByType(metric) {\r\n    var type = getMetricTypeByValue(metric);\r\n    if (type === \"timestamp\") {\r\n        return Date.now();\r\n    }\r\n    else {\r\n        return publishNestedComposite(metric.value);\r\n    }\r\n}\r\nexports.getMetricValueByType = getMetricValueByType;\r\nfunction publishNestedComposite(values) {\r\n    if (typeof values !== \"object\") {\r\n        return values;\r\n    }\r\n    return Object.keys(values).reduce(function (memo, key) {\r\n        var value = values[key];\r\n        if (typeof value === \"object\" && value.constructor !== Date) {\r\n            memo[key] = publishNestedComposite(value);\r\n        }\r\n        else if (value.constructor === Date) {\r\n            memo[key] = new Date(value).getTime();\r\n        }\r\n        else if (value.constructor === Boolean) {\r\n            memo[key] = value.toString();\r\n        }\r\n        else {\r\n            memo[key] = value;\r\n        }\r\n        return memo;\r\n    }, {});\r\n}\r\nfunction flatten(arr) {\r\n    return arr.reduce(function (flat, toFlatten) {\r\n        return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\r\n    }, []);\r\n}\r\nfunction getHighestState(arr) {\r\n    return arr.sort(function (a, b) {\r\n        return b.state - a.state;\r\n    })[0];\r\n}\r\nfunction aggregateDescription(arr) {\r\n    var msg = \"\";\r\n    arr.forEach(function (m, idx, a) {\r\n        var path = m.path.join(\".\");\r\n        if (idx === a.length - 1) {\r\n            msg += path + \".\" + m.name + \": \" + m.description;\r\n        }\r\n        else {\r\n            msg += path + \".\" + m.name + \": \" + m.description + \",\";\r\n        }\r\n    });\r\n    if (msg.length > 100) {\r\n        return msg.slice(0, 100) + \"...\";\r\n    }\r\n    else {\r\n        return msg;\r\n    }\r\n}\r\nfunction composeMsgForRootStateMetric(system) {\r\n    var aggregatedState = system.root.getAggregateState();\r\n    var merged = flatten(aggregatedState);\r\n    var highestState = getHighestState(merged);\r\n    var aggregateDesc = aggregateDescription(merged);\r\n    return {\r\n        description: aggregateDesc,\r\n        value: highestState.state,\r\n    };\r\n}\r\nexports.composeMsgForRootStateMetric = composeMsgForRootStateMetric;\r\n//# sourceMappingURL=serializer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/core/protocols/gw3/serializer.js\n// module id = 88\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar gw3_1 = require(\"./core/protocols/gw3/gw3\");\r\nvar gw1_1 = require(\"./core/protocols/gw1/gw1\");\r\nvar repository_1 = require(\"./repository\");\r\nexports.default = (function (settings) {\r\n    var options = {\r\n        connection: settings.connection,\r\n        identity: settings.identity,\r\n        logger: settings.logger,\r\n        heartbeatInterval: settings.heartbeatInterval,\r\n        settings: {},\r\n        clickStream: settings.clickStream,\r\n    };\r\n    if (!options.connection || typeof options.connection !== \"object\") {\r\n        throw new Error(\"Connection is required parameter\");\r\n    }\r\n    var _protocol;\r\n    if (options.connection.protocolVersion === 3) {\r\n        _protocol = gw3_1.default(options.connection, settings);\r\n    }\r\n    else {\r\n        _protocol = gw1_1.default(options.connection, settings);\r\n    }\r\n    var repo = repository_1.default(options, _protocol);\r\n    var rootSystem = repo.root;\r\n    return rootSystem;\r\n});\r\n//# sourceMappingURL=main.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/main.js\n// module id = 89\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar system_1 = require(\"./system\");\r\nfunction repository(options, protocol) {\r\n    if (!options.identity) {\r\n        throw new Error(\"Identity missing from metrics configuration\");\r\n    }\r\n    if (!options.identity.service || typeof options.identity.service !== \"string\") {\r\n        throw new Error(\"Service missing or invalid in metrics identity configuration\");\r\n    }\r\n    if (!options.identity.system || typeof options.identity.system !== \"string\") {\r\n        throw new Error(\"System missing or invalid in metrics identity configuration\");\r\n    }\r\n    if (!options.identity.instance || typeof options.identity.instance !== \"string\") {\r\n        throw new Error(\"Instance missing or invalid in metrics identity configuration\");\r\n    }\r\n    var identity = options.identity;\r\n    var instance = options.identity.system + \"/\" + options.identity.service + \"/\" + options.identity.instance;\r\n    function _initSystemMetrics(rootSystem, useClickStream) {\r\n        if (typeof navigator !== \"undefined\") {\r\n            rootSystem.stringMetric(\"UserAgent\", navigator.userAgent);\r\n        }\r\n        if (useClickStream && typeof document !== \"undefined\") {\r\n            var clickStream_1 = rootSystem.subSystem(\"ClickStream\");\r\n            var documentClickHandler = function (e) {\r\n                if (!e.target) {\r\n                    return;\r\n                }\r\n                var target = e.target;\r\n                clickStream_1.objectMetric(\"LastBrowserEvent\", {\r\n                    type: \"click\",\r\n                    timestamp: new Date(),\r\n                    target: {\r\n                        className: e.target ? target.className : \"\",\r\n                        id: target.id,\r\n                        type: \"<\" + target.tagName.toLowerCase() + \">\",\r\n                        href: target.href || \"\",\r\n                    },\r\n                });\r\n            };\r\n            clickStream_1.objectMetric(\"Page\", {\r\n                title: document.title,\r\n                page: window.location.href,\r\n            });\r\n            if (document.addEventListener) {\r\n                document.addEventListener(\"click\", documentClickHandler);\r\n            }\r\n            else {\r\n                document.attachEvent(\"onclick\", documentClickHandler);\r\n            }\r\n        }\r\n        var startTime = rootSystem.stringMetric(\"StartTime\", (new Date()).toString());\r\n        var urlMetric = rootSystem.stringMetric(\"StartURL\", \"\");\r\n        var appNameMetric = rootSystem.stringMetric(\"AppName\", \"\");\r\n        if (typeof window !== \"undefined\") {\r\n            if (typeof window.location !== \"undefined\") {\r\n                var startUrl = window.location.href;\r\n                urlMetric.update(startUrl);\r\n            }\r\n            if (typeof window.glue42gd !== \"undefined\") {\r\n                appNameMetric.update(window.glue42gd.appName);\r\n            }\r\n        }\r\n    }\r\n    var me = {\r\n        identity: identity,\r\n        instance: instance,\r\n        get root() {\r\n            return _root;\r\n        },\r\n    };\r\n    protocol.init(me);\r\n    var _root = system_1.default(\"\", me, protocol);\r\n    _initSystemMetrics(_root, options.clickStream || options.clickStream === undefined);\r\n    return me;\r\n}\r\nexports.default = repository;\r\n//# sourceMappingURL=repository.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/repository.js\n// module id = 90\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar address_1 = require(\"./core/metrics/address\");\r\nvar count_1 = require(\"./core/metrics/count\");\r\nvar number_1 = require(\"./core/metrics/number\");\r\nvar object_1 = require(\"./core/metrics/object\");\r\nvar rate_1 = require(\"./core/metrics/rate\");\r\nvar statistics_1 = require(\"./core/metrics/statistics\");\r\nvar string_1 = require(\"./core/metrics/string\");\r\nvar timespan_1 = require(\"./core/metrics/timespan\");\r\nvar timestamp_1 = require(\"./core/metrics/timestamp\");\r\nvar metric_types_1 = require(\"./core/const/metric-types\");\r\nfunction system(name, repo, protocol, parent, description) {\r\n    if (!repo) {\r\n        throw new Error(\"Repository is required\");\r\n    }\r\n    if (!protocol) {\r\n        throw new Error(\"Transport is required\");\r\n    }\r\n    var _transport = protocol;\r\n    var _name = name;\r\n    var _description = description || \"\";\r\n    var _repo = repo;\r\n    var _parent = parent;\r\n    var _path = _buildPath(parent);\r\n    var _state = {};\r\n    var id = _arrayToString(_path, \"/\") + name;\r\n    var identity = repo.identity;\r\n    var root = repo.root;\r\n    var _subSystems = [];\r\n    var _metrics = [];\r\n    function subSystem(nameSystem, descriptionSystem) {\r\n        if (!nameSystem || nameSystem.length === 0) {\r\n            throw new Error(\"name is required\");\r\n        }\r\n        var match = _subSystems.filter(function (s) { return s.name === nameSystem; });\r\n        if (match.length > 0) {\r\n            return match[0];\r\n        }\r\n        var _system = system(nameSystem, _repo, _transport, me, descriptionSystem);\r\n        _subSystems.push(_system);\r\n        return _system;\r\n    }\r\n    function setState(state, stateDescription) {\r\n        _state = { state: state, description: stateDescription };\r\n        _transport.updateSystem(me, _state);\r\n    }\r\n    function stringMetric(definition, value) {\r\n        return _getOrCreateMetric.call(me, definition, metric_types_1.default.STRING, value, function (metricDef) { return string_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function numberMetric(definition, value) {\r\n        return _getOrCreateMetric.call(me, definition, metric_types_1.default.NUMBER, value, function (metricDef) { return number_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function countMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.COUNT, value, function (metricDef) { return count_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function addressMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.ADDRESS, value, function (metricDef) { return address_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function objectMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.OBJECT, value, function (metricDef) { return object_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function timespanMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.TIMESPAN, value, function (metricDef) { return timespan_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function timestampMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.TIMESTAMP, value, function (metricDef) { return timestamp_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function rateMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.RATE, value, function (metricDef) { return rate_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function statisticsMetric(definition, value) {\r\n        return _getOrCreateMetric.call(this, definition, metric_types_1.default.STATISTICS, value, function (metricDef) { return statistics_1.default(metricDef, me, _transport, value); });\r\n    }\r\n    function _unionToMetricDef(def) {\r\n        var metricDefinition = {};\r\n        if (typeof def === \"string\") {\r\n            metricDefinition.name = def;\r\n        }\r\n        else {\r\n            metricDefinition = def;\r\n        }\r\n        if (metricDefinition.name === undefined) {\r\n            throw new Error(\"Metric name is required\");\r\n        }\r\n        return metricDefinition;\r\n    }\r\n    function _getOrCreateMetric(definition, expectedType, value, createMetric) {\r\n        var metricDefinition = _unionToMetricDef(definition);\r\n        var matching = _metrics.filter(function (shadowedMetric) { return shadowedMetric.name === metricDefinition.name; });\r\n        if (matching.length > 0) {\r\n            var existing = matching[0];\r\n            if (existing.type !== expectedType) {\r\n                throw new Error(\"A metric named \" + metricDefinition.name + \" is already defined with different type.\");\r\n            }\r\n            if (typeof value !== \"undefined\") {\r\n                existing.update(value);\r\n            }\r\n            return existing;\r\n        }\r\n        var metric = createMetric(metricDefinition);\r\n        _metrics.push(metric);\r\n        return metric;\r\n    }\r\n    function _buildPath(shadowedSystem) {\r\n        if (!shadowedSystem || !shadowedSystem.parent) {\r\n            return [];\r\n        }\r\n        var path = _buildPath(shadowedSystem.parent);\r\n        path.push(shadowedSystem.name);\r\n        return path;\r\n    }\r\n    function _arrayToString(path, separator) {\r\n        return ((path && path.length > 0) ? path.join(separator) : \"\");\r\n    }\r\n    function getAggregateState() {\r\n        var aggState = [];\r\n        if (Object.keys(_state).length > 0) {\r\n            aggState.push({\r\n                name: _name,\r\n                path: _path,\r\n                state: _state.state,\r\n                description: _state.description,\r\n            });\r\n        }\r\n        _subSystems.forEach(function (shadowedSubSystem) {\r\n            var result = shadowedSubSystem.getAggregateState();\r\n            if (result.length > 0) {\r\n                aggState.push.apply(aggState, result);\r\n            }\r\n        });\r\n        return aggState;\r\n    }\r\n    var me = {\r\n        get name() {\r\n            return _name;\r\n        },\r\n        get description() {\r\n            return _description;\r\n        },\r\n        get repo() {\r\n            return _repo;\r\n        },\r\n        get parent() {\r\n            return _parent;\r\n        },\r\n        path: _path,\r\n        id: id,\r\n        identity: identity,\r\n        root: root,\r\n        get subSystems() {\r\n            return _subSystems;\r\n        },\r\n        get metrics() {\r\n            return _metrics;\r\n        },\r\n        subSystem: subSystem,\r\n        getState: function () {\r\n            return _state;\r\n        },\r\n        setState: setState,\r\n        stringMetric: stringMetric,\r\n        statisticsMetric: statisticsMetric,\r\n        rateMetric: rateMetric,\r\n        timestampMetric: timestampMetric,\r\n        timespanMetric: timespanMetric,\r\n        objectMetric: objectMetric,\r\n        addressMetric: addressMetric,\r\n        countMetric: countMetric,\r\n        numberMetric: numberMetric,\r\n        getAggregateState: getAggregateState,\r\n    };\r\n    _transport.createSystem(me);\r\n    return me;\r\n}\r\nexports.default = system;\r\n//# sourceMappingURL=system.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/metrics/system.js\n// module id = 91\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction default_1() {\r\n    function now() {\r\n        return new Date().getTime();\r\n    }\r\n    var startTime = now();\r\n    var endTime;\r\n    var period;\r\n    function stop() {\r\n        endTime = now();\r\n        period = now() - startTime;\r\n        return period;\r\n    }\r\n    return {\r\n        get startTime() {\r\n            return startTime;\r\n        },\r\n        get endTime() {\r\n            return endTime;\r\n        },\r\n        get period() {\r\n            return period;\r\n        },\r\n        stop: stop\r\n    };\r\n}\r\nexports.default = default_1;\r\n//# sourceMappingURL=timer.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src_js/timer.js\n// module id = 92\n// module chunks = 0"],"sourceRoot":""}